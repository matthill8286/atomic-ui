// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input should render 1`] = `
.c2 {
  color: #CCCCCC;
  font-size: 16px;
  line-height: 20px;
  font-family: OswaldLight,Arial,sans-serif;
  font-weight: 400;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  vertical-align: top;
  width: 100%;
}

.c4 {
  border: 0;
  box-sizing: content-box;
  display: block;
  font-size: 16px;
  font-family: OswaldLight,Arial,sans-serif;
  margin: 24px 0 0 0;
  border-bottom: 1px solid #999999;
  background-color: #FFFFFF;
  min-width: 0;
  width: 100%;
  padding: 8px 16px;
  line-height: 40px;
  outline: none;
  position: relative;
  -webkit-tap-highlight-color: transparent;
}

.c4::-webkit-input-placeholder {
  opacity: 1;
}

.c4::-moz-placeholder {
  opacity: 1;
}

.c4:-ms-input-placeholder {
  opacity: 1;
}

.c4::placeholder {
  opacity: 1;
}

.c1 {
  margin-right: 32px;
}

.c3 {
  position: absolute;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <label
      className="c2 c3"
      color="grey3"
      fontSize="sm"
    >
      
    </label>
    <input
      aria-invalid={false}
      aria-required={false}
      autoFocus={false}
      className="c4"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      placeholder=""
      required={false}
      type="text"
    />
  </div>
</div>
`;

exports[`Input should render with dense inputStyle 1`] = `
.c2 {
  color: #CCCCCC;
  font-size: 16px;
  line-height: 20px;
  font-family: OswaldLight,Arial,sans-serif;
  font-weight: 400;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  vertical-align: top;
  width: 100%;
}

.c4 {
  border: 0;
  box-sizing: content-box;
  display: block;
  font-size: 16px;
  font-family: OswaldLight,Arial,sans-serif;
  margin: 24px 0 0 0;
  border-bottom: 1px solid #999999;
  background-color: #FFFFFF;
  min-width: 0;
  width: 100%;
  padding: 8px 16px;
  line-height: 40px;
  outline: none;
  position: relative;
  -webkit-tap-highlight-color: transparent;
}

.c4::-webkit-input-placeholder {
  opacity: 1;
}

.c4::-moz-placeholder {
  opacity: 1;
}

.c4:-ms-input-placeholder {
  opacity: 1;
}

.c4::placeholder {
  opacity: 1;
}

.c1 {
  margin-right: 32px;
}

.c3 {
  position: absolute;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <label
      className="c2 c3"
      color="grey3"
      fontSize="sm"
    >
      
    </label>
    <input
      aria-invalid={false}
      aria-required={false}
      autoFocus={false}
      className="c4"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      placeholder=""
      required={false}
      type="text"
    />
  </div>
</div>
`;

exports[`Input should render with dense inputStyle 2`] = `
.c2 {
  color: #CCCCCC;
  font-size: 14px;
  line-height: 20px;
  font-family: OswaldLight,Arial,sans-serif;
  font-weight: 400;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  vertical-align: top;
  width: 100%;
}

.c4 {
  border: 0;
  box-sizing: content-box;
  display: block;
  font-size: 16px;
  font-family: OswaldLight,Arial,sans-serif;
  margin: 24px 0 0 0;
  border-bottom: 1px solid #999999;
  background-color: #FFFFFF;
  min-width: 0;
  width: 100%;
  padding: 8px 16px;
  line-height: 40px;
  outline: none;
  position: relative;
  -webkit-tap-highlight-color: transparent;
}

.c4::-webkit-input-placeholder {
  opacity: 1;
}

.c4::-moz-placeholder {
  opacity: 1;
}

.c4:-ms-input-placeholder {
  opacity: 1;
}

.c4::placeholder {
  opacity: 1;
}

.c1 {
  margin-right: 32px;
}

.c3 {
  position: absolute;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <label
      className="c2 c3"
      color="grey3"
      fontSize="xs"
    >
      
    </label>
    <input
      aria-invalid={false}
      aria-required={false}
      autoFocus={false}
      className="c4"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      placeholder=""
      required={false}
      type="text"
    />
  </div>
</div>
`;

exports[`Input should render with dense inputStyle 3`] = `
.c2 {
  color: #CCCCCC;
  font-size: 16px;
  line-height: 20px;
  font-family: OswaldLight,Arial,sans-serif;
  font-weight: 400;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  vertical-align: top;
  width: 100%;
}

.c4 {
  border: 0;
  box-sizing: content-box;
  display: block;
  font-size: 16px;
  font-family: OswaldLight,Arial,sans-serif;
  margin: 24px 0 0 0;
  border-bottom: 1px solid #999999;
  background-color: #FFFFFF;
  min-width: 0;
  width: 100%;
  padding: 8px 16px;
  line-height: 40px;
  outline: none;
  position: relative;
  -webkit-tap-highlight-color: transparent;
}

.c4::-webkit-input-placeholder {
  opacity: 1;
}

.c4::-moz-placeholder {
  opacity: 1;
}

.c4:-ms-input-placeholder {
  opacity: 1;
}

.c4::placeholder {
  opacity: 1;
}

.c1 {
  margin-right: 32px;
}

.c3 {
  position: absolute;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <label
      className="c2 c3"
      color="grey3"
      fontSize="sm"
    >
      
    </label>
    <input
      aria-invalid={false}
      aria-required={false}
      autoFocus={false}
      className="c4"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      placeholder=""
      required={false}
      type="text"
    />
  </div>
</div>
`;

exports[`Input should render with different states 1`] = `
.c2 {
  color: #CCCCCC;
  font-size: 16px;
  line-height: 20px;
  font-family: OswaldLight,Arial,sans-serif;
  font-weight: 400;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  vertical-align: top;
  width: 100%;
}

.c4 {
  border: 0;
  box-sizing: content-box;
  display: block;
  font-size: 16px;
  font-family: OswaldLight,Arial,sans-serif;
  margin: 24px 0 0 0;
  border-bottom: 1px solid #999999;
  background-color: #FFFFFF;
  min-width: 0;
  width: 100%;
  padding: 8px 16px;
  line-height: 40px;
  outline: none;
  position: relative;
  -webkit-tap-highlight-color: transparent;
}

.c4::-webkit-input-placeholder {
  opacity: 1;
}

.c4::-moz-placeholder {
  opacity: 1;
}

.c4:-ms-input-placeholder {
  opacity: 1;
}

.c4::placeholder {
  opacity: 1;
}

.c1 {
  margin-right: 32px;
}

.c3 {
  position: absolute;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <label
      className="c2 c3"
      color="grey3"
      fontSize="sm"
    >
      
    </label>
    <input
      aria-invalid={false}
      aria-required={false}
      autoFocus={false}
      className="c4"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      placeholder=""
      required={false}
      type="text"
    />
  </div>
</div>
`;

exports[`Input should render with different states 2`] = `
.c2 {
  color: #55e1a7;
  font-size: 16px;
  line-height: 20px;
  font-family: OswaldLight,Arial,sans-serif;
  font-weight: 400;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c7 svg {
  width: 20px;
  height: 20px;
  -webkit-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  transform: rotate(0deg);
  fill: #55e1a7;
}

.c7 svg g,
.c7 svg p {
  fill: #55e1a7;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  vertical-align: top;
  width: 100%;
}

.c0 .c6 {
  position: absolute;
  right: 0;
  top: 28px;
  outline: none;
}

.c0 .c6:focus svg {
  fill: #000000;
}

.c4 {
  border: 0;
  box-sizing: content-box;
  display: block;
  font-size: 16px;
  font-family: OswaldLight,Arial,sans-serif;
  margin: 24px 0 0 0;
  border-bottom: 1px solid #999999;
  background-color: #FFFFFF;
  min-width: 0;
  width: 100%;
  padding: 8px 16px;
  line-height: 40px;
  outline: none;
  position: relative;
  -webkit-tap-highlight-color: transparent;
}

.c4::-webkit-input-placeholder {
  opacity: 1;
}

.c4::-moz-placeholder {
  opacity: 1;
}

.c4:-ms-input-placeholder {
  opacity: 1;
}

.c4::placeholder {
  opacity: 1;
}

.c5 {
  position: absolute;
  top: 16px;
  right: 16px;
  height: 100%;
}

.c5 > button {
  background: none;
  border: none;
  margin: 0;
  padding: 0;
  top: 28px;
  outline: none;
}

.c5 > button:focus svg {
  fill: #000000;
}

.c1 {
  margin-right: 32px;
}

.c3 {
  position: absolute;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <label
      className="c2 c3"
      color="success"
      fontSize="sm"
    >
      
    </label>
    <input
      aria-invalid={false}
      aria-required={false}
      autoFocus={false}
      className="c4"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      placeholder=""
      required={false}
      type="text"
    />
  </div>
  <div
    className="c5"
  >
    <span
      className="c6 c7"
      color="success"
      height={20}
      width={20}
    >
      <svg
        height={8}
        width={12}
        xmlns="http://www.w3.org/2000/svg"
        xmlnsXlink="http://www.w3.org/1999/xlink"
      >
        <defs>
          <path
            d="M14.994 6.712a.81.81 0 00-1.146-.03l-5.177 4.91-2.469-2.536a.81.81 0 10-1.161 1.132l3.027 3.107a.808.808 0 001.139.023l5.757-5.46a.81.81 0 00.03-1.146z"
            id="a"
          />
        </defs>
        <g
          fill="none"
          fillRule="evenodd"
          transform="translate(-4 -6)"
        >
          <mask
            fill="#fff"
            id="b"
          >
            <use
              xlinkHref="#a"
            />
          </mask>
          <use
            fill="#000"
            fillRule="nonzero"
            xlinkHref="#a"
          />
          <g
            fill="#999"
            mask="url(#b)"
          >
            <path
              d="M0 0h20v20H0z"
            />
          </g>
        </g>
      </svg>
    </span>
  </div>
</div>
`;

exports[`Input should render with different states 3`] = `
.c2 {
  color: #e24c4c;
  font-size: 16px;
  line-height: 20px;
  font-family: OswaldLight,Arial,sans-serif;
  font-weight: 400;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c7 svg {
  width: 20px;
  height: 20px;
  -webkit-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  transform: rotate(0deg);
  fill: #e24c4c;
}

.c7 svg g,
.c7 svg p {
  fill: #e24c4c;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  vertical-align: top;
  width: 100%;
}

.c0 .c6 {
  position: absolute;
  right: 0;
  top: 28px;
  outline: none;
}

.c0 .c6:focus svg {
  fill: #000000;
}

.c4 {
  border: 0;
  box-sizing: content-box;
  display: block;
  font-size: 16px;
  font-family: OswaldLight,Arial,sans-serif;
  margin: 24px 0 0 0;
  border-bottom: 1px solid #999999;
  background-color: #FFFFFF;
  min-width: 0;
  width: 100%;
  padding: 8px 16px;
  line-height: 40px;
  outline: none;
  position: relative;
  -webkit-tap-highlight-color: transparent;
}

.c4::-webkit-input-placeholder {
  opacity: 1;
}

.c4::-moz-placeholder {
  opacity: 1;
}

.c4:-ms-input-placeholder {
  opacity: 1;
}

.c4::placeholder {
  opacity: 1;
}

.c5 {
  position: absolute;
  top: 16px;
  right: 16px;
  height: 100%;
}

.c5 > button {
  background: none;
  border: none;
  margin: 0;
  padding: 0;
  top: 28px;
  outline: none;
}

.c5 > button:focus svg {
  fill: #000000;
}

.c1 {
  margin-right: 32px;
}

.c3 {
  position: absolute;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <label
      className="c2 c3"
      color="error"
      fontSize="sm"
    >
      
    </label>
    <input
      aria-invalid={true}
      aria-required={false}
      autoFocus={false}
      className="c4"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      placeholder=""
      required={false}
      type="text"
    />
  </div>
  <div
    className="c5"
  >
    <span
      className="c6 c7"
      color="error"
      height={20}
      width={20}
    >
      <svg
        viewBox="0 0 80 80"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M76.875 12.25l-29 29 29 29-7.375 7.375-29-29-29 29-7.375-7.375 29-29-29-29L11.5 4.875l29 29 29-29z"
        />
      </svg>
    </span>
  </div>
</div>
`;

exports[`Input should render with different states 4`] = `
.c2 {
  color: #E5E5E5;
  font-size: 16px;
  line-height: 20px;
  font-family: OswaldLight,Arial,sans-serif;
  font-weight: 400;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  vertical-align: top;
  width: 100%;
}

.c4 {
  border: 0;
  box-sizing: content-box;
  display: block;
  font-size: 16px;
  font-family: OswaldLight,Arial,sans-serif;
  margin: 24px 0 0 0;
  border-bottom: 1px solid #999999;
  background-color: #FFFFFF;
  min-width: 0;
  width: 100%;
  padding: 8px 16px;
  line-height: 40px;
  outline: none;
  position: relative;
  -webkit-tap-highlight-color: transparent;
}

.c4::-webkit-input-placeholder {
  opacity: 1;
}

.c4::-moz-placeholder {
  opacity: 1;
}

.c4:-ms-input-placeholder {
  opacity: 1;
}

.c4::placeholder {
  opacity: 1;
}

.c1 {
  margin-right: 32px;
}

.c3 {
  position: absolute;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <label
      className="c2 c3"
      color="grey2"
      fontSize="sm"
    >
      
    </label>
    <input
      aria-invalid={false}
      aria-required={false}
      autoFocus={false}
      className="c4"
      disabled={true}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      placeholder=""
      required={false}
      type="text"
    />
  </div>
</div>
`;

exports[`Input should render with errorMessage 1`] = `
.c2 {
  color: #e24c4c;
  font-size: 16px;
  line-height: 20px;
  font-family: OswaldLight,Arial,sans-serif;
  font-weight: 400;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

.c11 {
  color: #e24c4c;
  font-size: 12px;
  line-height: 16px;
  font-family: OswaldLight,Arial,sans-serif;
  font-weight: 400;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 svg {
  width: 20px;
  height: 20px;
  -webkit-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  transform: rotate(0deg);
  fill: #e24c4c;
}

.c9 svg g,
.c9 svg p {
  fill: #e24c4c;
}

.c5 {
  height: 1.75px;
  width: 100%;
  background: #e24c4c;
  border-width: 0;
  margin: 0;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  vertical-align: top;
  width: 100%;
}

.c0 .c8 {
  position: absolute;
  right: 0;
  top: 28px;
  outline: none;
}

.c0 .c8:focus svg {
  fill: #000000;
}

.c4 {
  border: 0;
  box-sizing: content-box;
  display: block;
  font-size: 16px;
  font-family: OswaldLight,Arial,sans-serif;
  margin: 24px 0 0 0;
  border-bottom: 1px solid #999999;
  background-color: #FFFFFF;
  min-width: 0;
  width: 100%;
  padding: 8px 16px;
  line-height: 40px;
  outline: none;
  position: relative;
  -webkit-tap-highlight-color: transparent;
}

.c4::-webkit-input-placeholder {
  opacity: 1;
}

.c4::-moz-placeholder {
  opacity: 1;
}

.c4:-ms-input-placeholder {
  opacity: 1;
}

.c4::placeholder {
  opacity: 1;
}

.c10 {
  margin-top: 8px;
}

.c6 {
  position: absolute;
  left: 0;
  z-index: 99;
}

.c7 {
  position: absolute;
  top: 16px;
  right: 16px;
  height: 100%;
}

.c7 > button {
  background: none;
  border: none;
  margin: 0;
  padding: 0;
  top: 28px;
  outline: none;
}

.c7 > button:focus svg {
  fill: #000000;
}

.c1 {
  margin-right: 32px;
}

.c3 {
  position: absolute;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <label
      className="c2 c3"
      color="error"
      fontSize="sm"
    >
      
    </label>
    <input
      aria-invalid={true}
      aria-required={false}
      autoFocus={false}
      className="c4"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      placeholder=""
      required={false}
      type="text"
    />
    <hr
      className="c5 c6"
      color="error"
      height={1.75}
    />
  </div>
  <div
    className="c7"
  >
    <span
      className="c8 c9"
      color="error"
      height={20}
      width={20}
    >
      <svg
        viewBox="0 0 80 80"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M76.875 12.25l-29 29 29 29-7.375 7.375-29-29-29 29-7.375-7.375 29-29-29-29L11.5 4.875l29 29 29-29z"
        />
      </svg>
    </span>
  </div>
  <div
    className="c10"
  >
    <span
      className="c11"
      color="error"
      fontSize="xxs"
    >
      error message
    </span>
  </div>
</div>
`;

exports[`Input should render with helper component 1`] = `
.c2 {
  color: #CCCCCC;
  font-size: 16px;
  line-height: 20px;
  font-family: OswaldLight,Arial,sans-serif;
  font-weight: 400;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

.c6 {
  color: #666666;
  font-size: 14px;
  line-height: 20px;
  font-family: OswaldLight,Arial,sans-serif;
  font-weight: 400;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  vertical-align: top;
  width: 100%;
}

.c4 {
  border: 0;
  box-sizing: content-box;
  display: block;
  font-size: 16px;
  font-family: OswaldLight,Arial,sans-serif;
  margin: 24px 0 0 0;
  border-bottom: 1px solid #999999;
  background-color: #FFFFFF;
  min-width: 0;
  width: 100%;
  padding: 8px 16px;
  line-height: 40px;
  outline: none;
  position: relative;
  -webkit-tap-highlight-color: transparent;
}

.c4::-webkit-input-placeholder {
  opacity: 1;
}

.c4::-moz-placeholder {
  opacity: 1;
}

.c4:-ms-input-placeholder {
  opacity: 1;
}

.c4::placeholder {
  opacity: 1;
}

.c5 {
  margin-top: 8px;
}

.c1 {
  margin-right: 32px;
}

.c3 {
  position: absolute;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <label
      className="c2 c3"
      color="grey3"
      fontSize="sm"
    >
      
    </label>
    <input
      aria-invalid={false}
      aria-required={false}
      autoFocus={false}
      className="c4"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      placeholder=""
      required={false}
      type="text"
    />
  </div>
  <div
    className="c5"
  >
    <p
      className="c6"
      color="grey5"
      fontSize="xs"
    >
      help text
    </p>
  </div>
</div>
`;

exports[`Input should render with masked input 1`] = `ReactWrapper {}`;
