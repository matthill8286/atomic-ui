{"version":3,"sources":["../../../../src/components/Organisms/OrderBook/OrderBookEntries.tsx"],"names":["React","memo","StyledColoredData","StyledGhostRow","StyledGhostSprite","TableRow","TableCell","CopyText","OrderBookEntry","price","size","total","colorSpriteWidth","color","isReversed","OrderBookEntries","rows","rowsKey","maxPriceSize","map","row"],"mappings":"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","sourcesContent":["import React, { memo, ReactElement } from 'react'\nimport {\n  StyledColoredData,\n  StyledGhostRow,\n  StyledGhostSprite,\n  TableRow,\n} from '@/components/Atoms/Table/TableRow'\nimport { TableCell } from '@/components/Atoms/Table'\nimport { CopyText } from '@/components/Atoms/Typography'\nimport { ThemeColors } from '@/types'\nimport { OrderMeta } from '@/components/Organisms/OrderBook/OrderBook.interface'\n\ninterface OrderBookEntriesProps {\n  rows: any\n  rowsKey: string\n  color: ThemeColors\n  isReversed: boolean\n  maxPriceSize: number\n}\n\ninterface OrderBookEntryProps extends OrderMeta {\n  color: ThemeColors\n  isReversed?: boolean\n  maxPriceSize: number\n  colorSpriteWidth: number\n}\n\nexport const OrderBookEntry: React.NamedExoticComponent<OrderBookEntryProps> = memo(\n  ({ price, size, total, colorSpriteWidth, color, isReversed }): ReactElement => {\n    return (\n      <>\n        <StyledGhostRow>\n          <StyledGhostSprite isReversed={isReversed}>\n            <StyledColoredData color={color} showPercentage={colorSpriteWidth} />\n          </StyledGhostSprite>\n        </StyledGhostRow>\n        <TableRow key={price} isReversed={isReversed} disableHover backgroundColor=\"white\">\n          <TableCell mobileHeadline cellColor=\"white\">\n            <CopyText bold padding=\"0\" margin=\"0\" color={color}>\n              {price}\n            </CopyText>\n          </TableCell>\n          <TableCell cellColor=\"white\">\n            <CopyText bold padding=\"0\" margin=\"0\" color=\"white\">\n              {size}\n            </CopyText>\n          </TableCell>\n          <TableCell cellColor=\"white\">\n            <CopyText bold padding=\"0\" margin=\"0\" color=\"white\">\n              {total}\n            </CopyText>\n          </TableCell>\n        </TableRow>\n      </>\n    )\n  }\n)\n\nexport const OrderBookEntries: React.NamedExoticComponent<OrderBookEntriesProps> = memo(\n  ({ rows, rowsKey, color, isReversed, maxPriceSize }): ReactElement | null => {\n    if (!rows) {\n      return null\n    }\n\n    return (\n      <>\n        {rows.map((row: OrderMeta) => {\n          const { price, size, total } = row\n\n          const colorSpriteWidth = (total / maxPriceSize) * 100\n\n          return (\n            <>\n              <StyledGhostRow>\n                <StyledGhostSprite isReversed={isReversed}>\n                  <StyledColoredData color={color} showPercentage={colorSpriteWidth} />\n                </StyledGhostSprite>\n              </StyledGhostRow>\n              <TableRow key={price} isReversed={isReversed} disableHover backgroundColor=\"white\">\n                <TableCell mobileHeadline cellColor=\"white\">\n                  <CopyText bold padding=\"0\" margin=\"0\" color={color}>\n                    {price}\n                  </CopyText>\n                </TableCell>\n                <TableCell cellColor=\"white\">\n                  <CopyText bold padding=\"0\" margin=\"0\" color=\"white\">\n                    {size}\n                  </CopyText>\n                </TableCell>\n                <TableCell cellColor=\"white\">\n                  <CopyText bold padding=\"0\" margin=\"0\" color=\"white\">\n                    {total}\n                  </CopyText>\n                </TableCell>\n              </TableRow>\n            </>\n          )\n        })}\n      </>\n    )\n  }\n)\n"],"file":"OrderBookEntries.js"}