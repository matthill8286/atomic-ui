{"version":3,"file":"helper.js","sources":["../../../src/utils/helper.ts"],"sourcesContent":["import { useContext } from 'react'\nimport { alternateTheme, saiyanTheme } from '@/styles'\nimport { ThemeContext } from '@/styles/styled'\nimport { Theme, ThemeColors } from '@/types'\n\nexport interface ChangeColorProps {\n  theme?: Theme\n  defaultColor: ThemeColors\n  color?: ThemeColors\n}\n\nexport const isSaiyanTheme = (): boolean => {\n  const { name } = useContext(ThemeContext)\n  return name === saiyanTheme.name\n}\n\nexport const isAlternateTheme = (): boolean => {\n  const { name } = useContext(ThemeContext)\n  return name === alternateTheme.name\n}\n\n// returns the input color. if it is the primary color it will change it to grey for alternate\nexport const getColor = (changeColorProps: ChangeColorProps): ThemeColors => {\n  const color = changeColorProps.color\n  const theme = changeColorProps.theme\n  let colorProp: ThemeColors | undefined\n  if (color === 'primary') {\n    if (isSaiyanTheme()) {\n      colorProp = color\n    } else {\n      colorProp = 'grey6'\n    }\n  } else {\n    colorProp = color\n  }\n  return colorProp ? (theme ? theme.color[colorProp] : colorProp) : changeColorProps.defaultColor\n}\n\nexport const useTheme = (): Theme => {\n  return useContext(ThemeContext)\n}\n\nexport const containsHtmlTags = /<.+?>/g\n"],"names":["isSaiyanTheme","useContext","ThemeContext","name","saiyanTheme","isAlternateTheme","alternateTheme","getColor","changeColorProps","colorProp","color","theme","defaultColor","useTheme","containsHtmlTags"],"mappings":"kNAWaA,EAAgB,kBACVC,EAAWC,GAApBC,OACQC,EAAYD,MAGjBE,EAAmB,kBACbJ,EAAWC,GAApBC,OACQG,EAAeH,MAIpBI,EAAW,SAACC,OAGnBC,EAFEC,EAAQF,EAAiBE,MACzBC,EAAQH,EAAiBG,aAI3BF,EAFU,YAAVC,EACEV,IACUU,EAEA,QAGFA,GAEMC,EAAQA,EAAMD,MAAMD,GAAaA,EAAaD,EAAiBI,cAGxEC,EAAW,kBACfZ,EAAWC,IAGPY,EAAmB"}