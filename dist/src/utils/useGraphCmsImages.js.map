{"version":3,"file":"useGraphCmsImages.js","sources":["../../../src/utils/useGraphCmsImages.ts"],"sourcesContent":["import { useInView } from 'react-intersection-observer'\n\nexport enum DocumentOutput {\n  svg = 'svg',\n  jpg = 'jpg',\n  png = 'png',\n}\n\nexport enum ImageResizeFit {\n  clip = 'clip',\n  crop = 'crop',\n  scale = 'scale',\n  max = 'max',\n}\n\nfunction buildTransformations(separator) {\n  const args = Array.prototype.slice.call(arguments, 1)\n  return args.join(separator)\n}\n\nexport const getTransformedImageVersion = (\n  handle?: string,\n  args?: typeof DocumentOutput[] | typeof ImageResizeFit[] | string[] | undefined\n) => {\n  if (args) {\n    // @ts-ignore\n    return `https://media.graphcms.com/${buildTransformations('/', ...args)}/${handle}`\n  }\n\n  if (handle) {\n    return `https://media.graphcms.com/${handle}`\n  }\n}\n\nexport const useGraphCmsImages = (\n  imageHandles: (string | undefined)[],\n  skip = false,\n  imageArguments = undefined\n): [(string | undefined)[], (node?: Element | null) => void] => {\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    threshold: 0.2,\n  })\n\n  let finalImageHandles = imageHandles\n\n  if (!inView && !skip) {\n    finalImageHandles = imageHandles.map(image => getTransformedImageVersion(image, imageArguments))\n  }\n\n  return [finalImageHandles, ref]\n}\n"],"names":["DocumentOutput","ImageResizeFit","buildTransformations","separator","args","Array","prototype","slice","call","arguments","join","getTransformedImageVersion","handle","useGraphCmsImages","imageHandles","skip","imageArguments","undefined","useInView","triggerOnce","threshold","ref","inView","finalImageHandles","map","image"],"mappings":"mNAEYA,EAMAC,EAOZ,SAASC,EAAqBC,OACtBC,EAAOC,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,UAC5CL,EAAKM,KAAKP,aAfPH,GAAAA,YAAAA,YAAAA,aAAAA,IAAAA,gBAMAC,GAAAA,cAAAA,cAAAA,gBAAAA,aAAAA,IAAAA,WAYCU,EAA6B,SACxCC,EACAR,UAEIA,uCAEmCF,gBAAqB,cAAQE,iBAASQ,GAGzEA,uCACmCA,WAI5BC,EAAoB,SAC/BC,OACAC,0DACAC,8DAAiBC,IAEKC,EAAU,CAC9BC,aAAa,EACbC,UAAW,cAFNC,OAAKC,OAKRC,EAAoBT,SAEnBQ,GAAWP,IACdQ,EAAoBT,EAAaU,KAAI,SAAAC,UAASd,EAA2Bc,EAAOT,OAG3E,CAACO,EAAmBF"}