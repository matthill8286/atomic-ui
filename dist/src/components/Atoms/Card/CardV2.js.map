{"version":3,"file":"CardV2.js","sources":["../../../../../src/components/Atoms/Card/CardV2.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Badge } from '../Badge'\nimport { CardProps, FeaturedAssetProps, FeaturedAssetRowProps } from './Card.interface'\nimport {\n  StyledBadgeLineWrapper,\n  StyledCard,\n  StyledCardWrapper,\n  StyledDivider,\n  StyledFeaturedAssetsContainer,\n  StyledFeaturedAssetSpacing,\n  StyledFeaturedAssetsPicture,\n} from './Card.styled'\n\nconst FeaturedAsset: React.FC<FeaturedAssetProps> = ({ image }) => {\n  return (\n    <StyledFeaturedAssetSpacing>\n      <Card\n        center\n        elevation={1}\n        display=\"flex\"\n        shape=\"rounded-small\"\n        padding=\"xs\"\n        noBorder={['bottom', 'top', 'right', 'left']}>\n        <StyledFeaturedAssetsPicture src={image} height=\"32px\" objectFit=\"contain\" width=\"auto\" />\n      </Card>\n    </StyledFeaturedAssetSpacing>\n  )\n}\n\nconst FeaturedAssetRow: React.FC<FeaturedAssetRowProps> = ({\n  floatingAssetRow,\n  featuredAssetImages,\n}) => {\n  if (featuredAssetImages && featuredAssetImages.length > 0) {\n    const featuredAssets = featuredAssetImages.map((fa, index) => (\n      <FeaturedAsset key={'FeaturedAsset_' + fa.image + index} {...fa} />\n    ))\n    return <StyledFeaturedAssetsContainer>{featuredAssets}</StyledFeaturedAssetsContainer>\n  } else {\n    return null\n  }\n}\n\nexport const Card: React.FC<CardProps> = ({\n  ariaLabel,\n  ariaLabelledby,\n  children,\n  center = false,\n  contentWidth,\n  elevation = 0,\n  elevationHover,\n  fullHeight = false,\n  noBorder = [],\n  borderColor,\n  borderWidth = 1,\n  showDivider = false,\n  floatingAssetRow = false,\n  dividerWidth,\n  padding,\n  margin,\n  shape,\n  surface = 'white',\n  textColor = 'black',\n  overflow,\n  display = 'block',\n  flexDirection,\n  badges = [],\n  badgeActionType = 'prominent',\n  onClick,\n  className,\n  featuredAssetImages,\n  ...otherProps\n}) => {\n  const a11yProps = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    tabIndex: 0,\n  }\n\n  const card = (\n    <StyledCard\n      borderColor={borderColor}\n      borderWidth={borderWidth}\n      center={center}\n      display={display}\n      elevation={elevation}\n      elevationHover={elevationHover}\n      contentWidth={contentWidth}\n      flexDirection={flexDirection}\n      margin={margin}\n      noBorder={noBorder}\n      overflow={overflow}\n      padding={padding}\n      shape={shape}\n      showDivider={showDivider}\n      surface={surface}\n      textColor={textColor}\n      {...(onClick ? { ...a11yProps } : {})}>\n      {children}\n    </StyledCard>\n  )\n\n  return (\n    <StyledCardWrapper\n      className={className}\n      elevationHover={elevationHover}\n      fullHeight={fullHeight}\n      onClick={onClick}\n      {...(onClick ? { ...a11yProps } : {})}\n      {...otherProps}>\n      {badges && badges.length > 0 ? (\n        <>\n          <StyledBadgeLineWrapper>\n            <Badge badges={badges} isBadgeLine actionType={badgeActionType} />\n          </StyledBadgeLineWrapper>\n          {card}\n        </>\n      ) : (\n        card\n      )}\n      {showDivider && <StyledDivider dividerWidth={dividerWidth} />}\n      <FeaturedAssetRow\n        floatingAssetRow={floatingAssetRow}\n        featuredAssetImages={featuredAssetImages}\n      />\n    </StyledCardWrapper>\n  )\n}\n"],"names":["FeaturedAsset","image","React","StyledFeaturedAssetSpacing","Card","center","elevation","display","shape","padding","noBorder","StyledFeaturedAssetsPicture","src","height","objectFit","width","FeaturedAssetRow","floatingAssetRow","featuredAssetImages","length","featuredAssets","map","fa","index","key","StyledFeaturedAssetsContainer","ariaLabel","ariaLabelledby","children","contentWidth","elevationHover","fullHeight","borderColor","borderWidth","showDivider","dividerWidth","margin","surface","textColor","overflow","flexDirection","badges","badgeActionType","onClick","className","otherProps","a11yProps","tabIndex","card","StyledCard","StyledCardWrapper","StyledBadgeLineWrapper","Badge","isBadgeLine","actionType","StyledDivider"],"mappings":"sZAaA,IAAMA,EAA8C,gBAAGC,IAAAA,aAEnDC,gBAACC,OACCD,gBAACE,GACCC,UACAC,UAAW,EACXC,QAAQ,OACRC,MAAM,gBACNC,QAAQ,KACRC,SAAU,CAAC,SAAU,MAAO,QAAS,SACrCR,gBAACS,GAA4BC,IAAKX,EAAOY,OAAO,OAAOC,UAAU,UAAUC,MAAM,YAMnFC,EAAoD,cACxDC,qBACAC,IAAAA,uBAEIA,GAAuBA,EAAoBC,OAAS,EAAG,KACnDC,EAAiBF,EAAoBG,KAAI,SAACC,EAAIC,UAClDrB,gBAACF,KAAcwB,IAAK,iBAAmBF,EAAGrB,MAAQsB,GAAWD,cAExDpB,gBAACuB,OAA+BL,UAEhC,MAIEhB,EAA4B,gBACvCsB,IAAAA,UACAC,IAAAA,eACAC,IAAAA,aACAvB,OAAAA,gBACAwB,IAAAA,iBACAvB,UAAAA,aAAY,IACZwB,IAAAA,mBACAC,WAAAA,oBACArB,SAAAA,aAAW,KACXsB,IAAAA,gBACAC,YAAAA,aAAc,QACdC,YAAAA,oBACAjB,iBAAAA,gBACAkB,IAAAA,aACA1B,IAAAA,QACA2B,IAAAA,OACA5B,IAAAA,UACA6B,QAAAA,aAAU,cACVC,UAAAA,aAAY,UACZC,IAAAA,aACAhC,QAAAA,aAAU,UACViC,IAAAA,kBACAC,OAAAA,aAAS,SACTC,gBAAAA,aAAkB,cAClBC,IAAAA,QACAC,IAAAA,UACA1B,IAAAA,oBACG2B,uWAEGC,EAAY,cACFpB,oBACKC,EACnBoB,SAAU,GAGNC,EACJ9C,gBAAC+C,KACCjB,YAAaA,EACbC,YAAaA,EACb5B,OAAQA,EACRE,QAASA,EACTD,UAAWA,EACXwB,eAAgBA,EAChBD,aAAcA,EACdW,cAAeA,EACfJ,OAAQA,EACR1B,SAAUA,EACV6B,SAAUA,EACV9B,QAASA,EACTD,MAAOA,EACP0B,YAAaA,EACbG,QAASA,EACTC,UAAWA,GACNK,OAAeG,GAAc,IACjClB,UAKH1B,gBAACgD,KACCN,UAAWA,EACXd,eAAgBA,EAChBC,WAAYA,EACZY,QAASA,GACJA,OAAeG,GAAc,GAC9BD,GACHJ,GAAUA,EAAOtB,OAAS,EACzBjB,gCACEA,gBAACiD,OACCjD,gBAACkD,GAAMX,OAAQA,EAAQY,eAAYC,WAAYZ,KAEhDM,GAGHA,EAEDd,GAAehC,gBAACqD,GAAcpB,aAAcA,IAC7CjC,gBAACc,GACCC,iBAAkBA,EAClBC,oBAAqBA"}