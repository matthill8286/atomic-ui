{"version":3,"file":"TableRow.js","sources":["../../../../../src/components/Atoms/Table/TableRow.tsx"],"sourcesContent":["import React from 'react'\nimport { media } from '@/styles'\nimport { css, styled } from '@/styles/styled'\nimport { ThemeColors } from '@/types'\n\nexport interface TableRowProps {\n  children?: React.ReactNode\n  collapsible?: boolean\n  isReversed?: boolean\n  verticalAlign?: 'top' | 'middle' | 'bottom'\n  disableHover?: boolean\n  className?: string\n  textColor?: ThemeColors\n  hoverColor?: ThemeColors\n  backgroundColor?: ThemeColors\n}\n\nconst StyledCollapsible = css`\n  ${media.maxSm} {\n    border-right: 0;\n  }\n`\n\nconst StyledTableRow = styled.tr<TableRowProps>`\n  ${({ collapsible }) => collapsible && StyledCollapsible}\n  ${({ disableHover, verticalAlign, theme, isReversed, hoverColor = 'grey1' }) => `\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    flex: 1;\n    vertical-align: ${verticalAlign};\n    text-align: center;\n    border: none;\n     \n    ${({ textColor }) => textColor && `color: ${theme.color[textColor]};`};\n      \n    ${media.md} {\n      border: none;\n      \n      ${\n        isReversed\n          ? `\n            flex-direction: row-reverse;\n      `\n          : ``\n      };\n      \n      ${\n        !disableHover\n          ? `&:hover {\n          cursor: pointer;\n          background: ${theme.color[hoverColor]};\n        }`\n          : ''\n      };\n    }\n  `}\n`\n\nexport const StyledGhostRow = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\nexport const StyledGhostSprite = styled.div<{ isReversed?: boolean }>`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  min-height: 52px;\n  padding: 2px 0;\n\n  ${media.md} {\n    ${({ isReversed }) =>\n      isReversed\n        ? `\n            flex-direction: row-reverse;\n      `\n        : ``};\n  }\n`\n\nexport const StyledColoredData = styled.div<{ showPercentage?: number; color?: ThemeColors }>`\n  width: ${({ showPercentage }) => (showPercentage ? `${showPercentage}%` : ``)};\n  background-color: ${({ theme, color }) => (color ? theme.color[color] : 'rgba(206,11,50, 0.3)')};\n  opacity: 0.3;\n`\n\nexport const StyledSvgMarker = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column-reverse;\n`\n\nexport const TableRow: React.FC<TableRowProps> = ({\n  children,\n  collapsible = false,\n  verticalAlign = 'middle',\n  disableHover = false,\n  className,\n  hoverColor,\n  backgroundColor,\n  isReversed,\n}) => {\n  return (\n    <StyledTableRow\n      collapsible={collapsible}\n      verticalAlign={verticalAlign}\n      disableHover={disableHover}\n      isReversed={isReversed}\n      className={className}\n      backgroundColor={backgroundColor}\n      hoverColor={hoverColor}>\n      {children}\n    </StyledTableRow>\n  )\n}\n"],"names":["StyledCollapsible","css","media","maxSm","StyledTableRow","styled","tr","collapsible","disableHover","verticalAlign","theme","isReversed","hoverColor","textColor","color","md","StyledGhostRow","div","StyledGhostSprite","StyledColoredData","showPercentage","TableRow","children","className","backgroundColor","React"],"mappings":"kIAiBA,IAAMA,EAAoBC,2BACtBC,EAAMC,OAKJC,EAAiBC,EAAOC,8EAAPD,cACnB,qBAAGE,aAAiCP,KACpC,gBAAGQ,IAAAA,aAAcC,IAAAA,cAAeC,IAAAA,MAAOC,IAAAA,eAAYC,WAAAA,aAAa,qIAK9CH,wEAIhB,gBAAGI,IAAAA,iBAAgBA,oBAAuBH,EAAMI,MAAMD,oCAEtDX,EAAMa,qDAIJJ,sFAQCH,EAKG,0EAFYE,EAAMI,MAAMF,sCAQvBI,EAAiBX,EAAOY,+EAAPZ,mEAOjBa,EAAoBb,EAAOY,kFAAPZ,6HAU7BH,EAAMa,IACJ,qBAAGJ,sEASIQ,EAAoBd,EAAOY,kFAAPZ,kDACtB,gBAAGe,IAAAA,sBAAsBA,YAAoBA,aAClC,gBAAGV,IAAAA,MAAOI,IAAAA,aAAaA,EAAQJ,EAAMI,MAAMA,GAAS,0BAI3CT,EAAOY,gFAAPZ,6FASlBgB,EAAoC,gBAC/CC,IAAAA,aACAf,YAAAA,oBACAE,cAAAA,aAAgB,eAChBD,aAAAA,gBACAe,IAAAA,UACAX,IAAAA,WACAY,IAAAA,gBACAb,IAAAA,kBAGEc,gBAACrB,GACCG,YAAaA,EACbE,cAAeA,EACfD,aAAcA,EACdG,WAAYA,EACZY,UAAWA,EACXC,gBAAiBA,EACjBZ,WAAYA,GACXU"}