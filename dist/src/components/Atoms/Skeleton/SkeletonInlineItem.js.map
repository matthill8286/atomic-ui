{"version":3,"file":"SkeletonInlineItem.js","sources":["../../../../../src/components/Atoms/Skeleton/SkeletonInlineItem.tsx"],"sourcesContent":["import React from 'react'\nimport { pulse, skeleton } from '@/styles/animation'\nimport { css, styled } from '@/styles/styled'\nimport { Typo } from '../Typography'\nimport { TypoProps } from '../Typography/Typo/Typo.interface'\n\ninterface SkeletonInlineItemProps extends TypoProps {\n  text?: string\n  length?: number\n  minLength?: number\n  newLine?: boolean\n  animated?: boolean\n}\n\nexport const StyledSkeletonInlineItem = styled(Typo)<SkeletonInlineItemProps>`\n  ${({ animated = false }) =>\n    animated &&\n    css`\n      ${pulse};\n    `}\n  ${({ tag, newLine }) =>\n    !tag && `display: ${newLine ? 'table' : 'inline-block'};`}\n  color: rgba(0,0,0,0);\n  background-color: rgba(0, 0, 0, 0.1);\n  width: unset;\n  &::before {\n    content: '';\n    display: block;\n  }\n`\n\nexport const SkeletonInlineItem: React.FC<SkeletonInlineItemProps> = ({\n  length = 12,\n  text,\n  ...props\n}) => <StyledSkeletonInlineItem {...props}>{text || 'a'.repeat(length)}</StyledSkeletonInlineItem>\n"],"names":["StyledSkeletonInlineItem","styled","Typo","animated","css","pulse","tag","newLine","SkeletonInlineItem","length","text","props","React","repeat"],"mappings":"wRAcaA,EAA2BC,EAAOC,kGAAPD,oHACpC,oBAAGE,+BAEHC,WACIC,MAEJ,gBAAGC,IAAAA,IAAKC,IAAAA,eACPD,sBAAmBC,EAAU,QAAU,uBAU/BC,EAAwD,oBACnEC,OAAAA,aAAS,KACTC,IAAAA,KACGC,gCACCC,gBAACZ,EAA6BW,EAAQD,GAAQ,IAAIG,OAAOJ"}