{"version":3,"file":"Selectable.styled.js","sources":["../../../../../src/components/Atoms/Selectable/Selectable.styled.tsx"],"sourcesContent":["import { lighten } from 'polished'\nimport { Card } from '@/components/Atoms/Card'\nimport { Icon } from '@/components/Atoms/Icon'\nimport { CopyText } from '@/components/Atoms/Typography/CopyText'\nimport { styled } from '@/styles/styled'\nimport {\n  SelectableState,\n  StyledLabelProps,\n  StyledNativeSelectableProps,\n  StyledSelectedCheckMarkProps,\n} from './Selectable.interface'\n\nconst getSelectableSize = (selectableSize: string) => (selectableSize === 'large' ? '24px' : '20px')\n\nconst getSelectableFillingColor = (state: SelectableState, theme) =>\n  state === 'disabled' ? theme.color.grey4 : theme.color.primary\n\nexport const StyledIcon = styled(Icon)<StyledSelectedCheckMarkProps>`\n  display: none;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: ${({ selectableSize }) => getSelectableSize(selectableSize)};\n  height: ${({ selectableSize }) => getSelectableSize(selectableSize)};\n  svg {\n    fill: ${({ theme, state }) => getSelectableFillingColor(state, theme)};\n    height: 100%;\n  }\n`\nexport const StyledRadioMark = styled.span<StyledSelectedCheckMarkProps>`\n  width: ${({ selectableSize }) => getSelectableSize(selectableSize)};\n  height: ${({ selectableSize }) => getSelectableSize(selectableSize)};\n  position: absolute;\n  display: none;\n  &:before {\n    content: '';\n    background: ${({ state, theme }) => getSelectableFillingColor(state, theme)};\n    width: ${({ selectableSize }) => (selectableSize === 'large' ? '12px' : '10px')};\n    height: ${({ selectableSize }) => (selectableSize === 'large' ? '12px' : '10px')};\n    border-radius: 50%;\n  }\n`\n\nexport const StyledLabel = styled.label<StyledLabelProps>`\n  cursor: pointer;\n  position: relative;\n  top: 0;\n  ${({\n    state,\n    theme: {\n      polished: { inactive },\n    },\n  }) =>\n    state === 'disabled' &&\n    `\n    pointer-events: none;\n    opacity: ${inactive};\n  `}\n  display: flex;\n  height: 100%;\n  align-items: center;\n  &:before {\n    content: '';\n    top: 0;\n    position: absolute;\n    width: ${({ selectableSize }) => getSelectableSize(selectableSize)};\n    height: ${({ selectableSize }) => getSelectableSize(selectableSize)};\n    border-radius: ${({ theme, type }) =>\n      type === 'radio' ? '50%' : theme.dimension.borderRadius1};\n    border: solid 1px\n      ${({ theme, state }) => (state === 'error' ? theme.color.error : theme.color.grey4)};\n    background-color: ${({ theme, state }) =>\n      state === 'disabled'\n        ? lighten(theme.polished.inactive, theme.color.grey3)\n        : theme.color.white};\n    box-sizing: border-box;\n  }\n`\nexport const StyledFocusedIndicator = styled.span`\n  display: inline-block;\n`\n\nexport const StyledNativeSelectable = styled.input<StyledNativeSelectableProps>`\n  width: ${({ selectableSize }) => getSelectableSize(selectableSize)};\n  height: ${({ selectableSize }) => getSelectableSize(selectableSize)};\n  position: relative;\n  z-index: -1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  flex-shrink: 0;\n  ${({ type }) =>\n    type === 'checkbox' &&\n    `&:checked + ${StyledIcon} {\n      display: inline-block;\n      text-align: center;\n  }`};\n\n  ${({ type }) =>\n    type === 'radio' &&\n    `&:checked + ${StyledRadioMark} {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      position: absolute;\n      left: 0;\n      top: 0;\n  }`};\n\n  &:focus ~ ${StyledFocusedIndicator} {\n    width: ${({ selectableSize }) => getSelectableSize(selectableSize)};\n    height: ${({ selectableSize }) => getSelectableSize(selectableSize)};\n    box-shadow: ${({ theme }) => theme.dimension.elevationLevel1};\n    position: absolute;\n    top: 0;\n    z-index: -1;\n    border-radius: ${({ type }) => (type === 'checkbox' ? '4px' : '50%')};\n    left: 0;\n  }\n`\n\nexport const StyledCopyText = styled(CopyText).attrs(() => ({ tag: 'div' }))`\n  width: 100%;\n`\n\nexport const StyledSelectableContentWrapper = styled.div`\n  width: 100%;\n`\n\nexport const StyledSelectableButton = styled.input`\n  display: none;\n`\n\nexport const StyledSelectableContent = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const StyledSelectableButtonContentWrapper = styled(Card)`\n  & > div {\n    display: flex;\n    justify-content: center;\n    height: 40px;\n  }\n`\n\nexport const StyledButtonLabel = styled.label`\n  cursor: pointer;\n`\n\nexport const StyledButtonText = styled(CopyText).attrs(() => ({ tag: 'div' }))`\n  line-height: ${({ theme }) => theme.font.lineHeight.sm};\n  margin-left: ${({ theme }) => theme.spacing.base.xxs};\n  width: 100%;\n`\n"],"names":["getSelectableSize","selectableSize","getSelectableFillingColor","state","theme","color","grey4","primary","StyledIcon","styled","Icon","StyledRadioMark","span","StyledLabel","label","inactive","polished","type","dimension","borderRadius1","error","lighten","grey3","white","StyledFocusedIndicator","StyledNativeSelectable","input","elevationLevel1","StyledCopyText","CopyText","attrs","tag","StyledSelectableContentWrapper","div","StyledSelectableButton","StyledSelectableContent","StyledSelectableButtonContentWrapper","Card","StyledButtonLabel","StyledButtonText","font","lineHeight","sm","spacing","base","xxs"],"mappings":"kRAYA,IAAMA,EAAoB,SAACC,SAA+C,UAAnBA,EAA6B,OAAS,QAEvFC,EAA4B,SAACC,EAAwBC,SAC/C,aAAVD,EAAuBC,EAAMC,MAAMC,MAAQF,EAAMC,MAAME,SAE5CC,EAAaC,EAAOC,kFAAPD,kGAKf,gBAAGR,IAAAA,sBAAqBD,EAAkBC,MACzC,gBAAGA,IAAAA,sBAAqBD,EAAkBC,MAE1C,gBAAGG,IAAAA,MAAOD,IAAAA,aAAYD,EAA0BC,EAAOC,MAItDO,EAAkBF,EAAOG,yFAAPH,sIACpB,gBAAGR,IAAAA,sBAAqBD,EAAkBC,MACzC,gBAAGA,IAAAA,sBAAqBD,EAAkBC,MAKpC,gBAAGE,IAAAA,MAAOC,IAAAA,aAAYF,EAA0BC,EAAOC,MAC5D,kBAA4C,YAAzCH,eAAmD,OAAS,UAC9D,kBAA4C,YAAzCA,eAAmD,OAAS,UAKhEY,EAAcJ,EAAOK,sFAAPL,kPAIvB,gBACAN,IAAAA,MAEcY,IADdX,MACEY,SAAYD,eAGJ,aAAVZ,uDAGWY,cASF,gBAAGd,IAAAA,sBAAqBD,EAAkBC,MACzC,gBAAGA,IAAAA,sBAAqBD,EAAkBC,MACnC,gBAAGG,IAAAA,YACT,YADgBa,KACN,MAAQb,EAAMc,UAAUC,iBAEzC,gBAAGf,IAAAA,YAA8B,YAAvBD,MAAiCC,EAAMC,MAAMe,MAAQhB,EAAMC,MAAMC,SAC3D,gBAAGF,IAAAA,YACX,eADkBD,MAExBkB,EAAQjB,EAAMY,SAASD,SAAUX,EAAMC,MAAMiB,OAC7ClB,EAAMC,MAAMkB,SAITC,EAAyBf,EAAOG,gGAAPH,4BAIzBgB,EAAyBhB,EAAOiB,iGAAPjB,+PAC3B,gBAAGR,IAAAA,sBAAqBD,EAAkBC,MACzC,gBAAGA,IAAAA,sBAAqBD,EAAkBC,MAQlD,kBACS,eADNgB,4BAEYT,yEAKf,kBACS,YADNS,4BAEYN,2JASLa,GACD,gBAAGvB,IAAAA,sBAAqBD,EAAkBC,MACzC,gBAAGA,IAAAA,sBAAqBD,EAAkBC,MACtC,qBAAGG,MAAkBc,UAAUS,mBAI5B,kBAAwB,eAArBV,KAAkC,MAAQ,SAKrDW,EAAiBnB,EAAOoB,GAAUC,OAAM,iBAAO,CAAEC,IAAK,6FAArCtB,kBAIjBuB,EAAiCvB,EAAOwB,uGAAPxB,kBAIjCyB,EAAyBzB,EAAOiB,iGAAPjB,oBAIzB0B,EAA0B1B,EAAOwB,gGAAPxB,uCAK1B2B,EAAuC3B,EAAO4B,4GAAP5B,gEAQvC6B,EAAoB7B,EAAOK,6FAAPL,sBAIpB8B,EAAmB9B,EAAOoB,GAAUC,OAAM,iBAAO,CAAEC,IAAK,gGAArCtB,kDACf,qBAAGL,MAAkBoC,KAAKC,WAAWC,MACrC,qBAAGtC,MAAkBuC,QAAQC,KAAKC"}