{"version":3,"file":"Badge.styled.js","sources":["../../../../../src/components/Atoms/Badge/Badge.styled.tsx"],"sourcesContent":["import { math } from 'polished'\nimport { css, styled, ThemedStyledProps } from '@/styles/styled'\nimport { Theme } from '@/types/theme'\nimport { Typo } from '../Typography'\nimport { StyledBadgeProps } from './Badge.interface'\n\ntype ThemedBadgeProps = ThemedStyledProps<StyledBadgeProps, Theme>\n\nconst skewFactor = 10\nconst tailWidth = 10\n\nconst resolveColor = ({ actionType, theme }: ThemedBadgeProps) =>\n  actionType === 'disabled' ? theme.color.black : theme.color.primary\n\nexport const skewLeft = ({ actionType, theme }: ThemedBadgeProps) => css`\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: ${tailWidth + 2}px;\n    height: ${math(theme.font.size.xl + '+ 2px')}; /* theme font xl plus the border */\n    bottom: 0;\n    border-radius: ${theme.dimension.borderRadius1};\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    transform: skewX(-${skewFactor}deg);\n    transform-origin: bottom left;\n\n    ${actionType === 'prominent'\n      ? css`\n          background-color: ${theme.color.primary};\n          border: 1px solid ${theme.color.primary};\n        `\n      : css`\n          background-color: ${theme.color.white};\n          border-left: 1px solid ${resolveColor};\n          border-top: 1px solid ${resolveColor};\n          border-bottom: 1px solid ${resolveColor};\n        `}\n  }\n`\nexport const skewRight = ({ actionType, theme }: ThemedBadgeProps) => css`\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 2px;\n    width: ${tailWidth + 2}px;\n    height: ${math(theme.font.size.xl + '+ 2px')}; /* theme font xl plus the border */\n    bottom: 0;\n    border-radius: ${theme.dimension.borderRadius1};\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n    transform: skewX(-${skewFactor}deg);\n    border: 1px solid ${resolveColor};\n\n    ${actionType === 'prominent'\n      ? css`\n          background-color: ${theme.color.primary};\n        `\n      : css`\n          background-color: ${theme.color.white};\n          border-left: none;\n        `}\n  }\n`\n\nexport const StyledTypo = styled(Typo)<StyledBadgeProps>(\n  ({ actionType, theme }) => css`\n    ${actionType === 'prominent'\n      ? css`\n          background-color: ${theme.color.primary};\n          color: ${theme.color.white};\n        `\n      : css`\n          background-color: ${theme.color.white};\n          color: ${resolveColor};\n        `}\n    ${actionType === 'inverted' &&\n      css`\n        background-color: ${theme.color.grey6};\n        color: ${theme.color.white};\n      `}\n    text-align: center;\n    display: flex;\n    align-items: center;\n    padding-left: ${theme.spacing.base.md};\n    padding-right: ${theme.spacing.base.md};\n    margin-left: 0;\n    margin-right: ${tailWidth - 1}px;\n    box-sizing: content-box;\n    height: ${math(theme.font.size.xl + ' + 2px')}; /* theme font xl plus the border */\n    overflow: auto;\n  `\n)\n\nexport const StyledBadgeLineWrapper = styled.div<StyledBadgeProps>`\n  ${({ isBadgeLine, theme }) =>\n    isBadgeLine\n      ? css`\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n          overflow: hidden;\n          height: ${math(theme.font.size.xl + ' + 4px')};\n        `\n      : `display: block`};\n`\n\nexport const StyledBadgeWrapper = styled.div<StyledBadgeProps>(\n  ({ theme }) => css`\n    display: inline-block;\n    position: relative;\n    margin-right: ${theme.spacing.base.xs};\n    max-width: 100%;\n  `\n)\n\nexport const StyledOverflow = styled.div`\n  display: inline-block;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`\n"],"names":["resolveColor","actionType","theme","color","black","primary","StyledTypo","styled","Typo","css","white","grey6","spacing","base","md","tailWidth","math","font","size","xl","StyledBadgeLineWrapper","div","isBadgeLine","StyledBadgeWrapper","xs","StyledOverflow"],"mappings":"4LASA,IAEMA,EAAe,gBAAGC,IAAAA,WAAYC,IAAAA,YACnB,aAAfD,EAA4BC,EAAMC,MAAMC,MAAQF,EAAMC,MAAME,SAwDjDC,EAAaC,EAAOC,gFAAPD,EACxB,gBAAGN,IAAAA,WAAYC,IAAAA,aAAYO,qLACR,cAAfR,EACEQ,sCACsBP,EAAMC,MAAME,QACvBH,EAAMC,MAAMO,OAEvBD,sCACsBP,EAAMC,MAAMO,MACvBV,GAEE,aAAfC,GACAQ,sCACsBP,EAAMC,MAAMQ,MACvBT,EAAMC,MAAMO,OAKTR,EAAMU,QAAQC,KAAKC,GAClBZ,EAAMU,QAAQC,KAAKC,GAEpBC,EAENC,EAAKd,EAAMe,KAAKC,KAAKC,GAAK,cAK3BC,EAAyBb,EAAOc,6FAAPd,WAClC,gBAAGe,IAAAA,YAAapB,IAAAA,aAChBoB,EACIb,iFAKYO,EAAKd,EAAMe,KAAKC,KAAKC,GAAK,+BAKjCI,EAAqBhB,EAAOc,yFAAPd,EAChC,gBAAGL,IAAAA,aAAYO,8EAGGP,EAAMU,QAAQC,KAAKW,OAK1BC,EAAiBlB,EAAOc,qFAAPd"}