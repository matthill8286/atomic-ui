{"version":3,"file":"Icon.js","sources":["../../../../../src/components/Atoms/Icon/Icon.tsx"],"sourcesContent":["import { FlexAlignItemsOptions } from '@/components/Helper/FlexBox'\nimport { padding } from '@/styles/sc-shared-functions'\nimport { css, styled } from '@/styles/styled'\nimport { PaddingProps, Size, ThemeColors } from '@/types'\n\nexport type RotationValues = 0 | 45 | 90 | 180 | 270 | -45 | -90 | -180 | -270\n\nexport interface IconProps {\n  rotate?: RotationValues\n  color?: ThemeColors\n  withBorder?: boolean\n  padding?: PaddingProps['padding']\n\n  width?: number | keyof Omit<Size, 'xxxs'>\n  height?: number | keyof Omit<Size, 'xxxs'>\n  animate?: boolean\n  display?: string\n  alignSelf?: FlexAlignItemsOptions\n}\n\nconst DefaultSize = '25px'\n\nexport const Icon = styled.div<IconProps>(\n  ({\n    theme,\n    color,\n    width,\n    height,\n    rotate = 0,\n    animate = false,\n    display = 'flex',\n    alignSelf,\n    withBorder,\n  }) => css`\n    ${display && `display: ${display};`};\n    ${padding};\n    ${alignSelf && `align-self: ${alignSelf};`};\n    ${withBorder &&\n      `border: 2px solid ${theme.color.grey2};\n        border-radius: 50%;\n        padding: ${theme.spacing.base.xs};`}\n    svg {\n      width: ${width ? getSizeInPx(width, theme.spacing.base) : DefaultSize};\n      height: ${height ? getSizeInPx(height, theme.spacing.base) : DefaultSize};\n      transform: rotate(${rotate}deg);\n      fill: ${color ? theme.color[color] : 'currentColor'};\n      ${animate &&\n        css`\n          transition: transform 0.3s ease-in-out;\n        `};\n    }\n    svg g,\n    svg p {\n      fill: ${color ? theme.color[color] : 'currentColor'};\n    }\n  `\n)\n\nconst getSizeInPx = (\n  size: number | keyof Omit<Size, 'xxxs'>,\n  themeSizes: Omit<Size, 'xxxs'>\n): string => {\n  if (typeof size === 'number') {\n    return `${size}px`\n  } else {\n    return themeSizes[size] || `${DefaultSize}px`\n  }\n}\n"],"names":["Icon","styled","div","theme","color","width","height","rotate","animate","display","alignSelf","withBorder","css","padding","grey2","spacing","base","xs","getSizeInPx","size","themeSizes"],"mappings":"6HAoBA,IAEaA,EAAOC,EAAOC,2DAAPD,EAClB,gBACEE,IAAAA,MACAC,IAAAA,MACAC,IAAAA,MACAC,IAAAA,WACAC,OAAAA,aAAS,QACTC,QAAAA,oBACAC,QAAAA,aAAU,SACVC,IAAAA,UACAC,IAAAA,kBACIC,6GACFH,sBAAuBA,OACvBI,EACAH,yBAA4BA,OAC5BC,+BACqBR,EAAMC,MAAMU,kEAEpBX,EAAMY,QAAQC,KAAKC,QAEvBZ,EAAQa,EAAYb,EAAOF,EAAMY,QAAQC,MAtBpC,OAuBJV,EAASY,EAAYZ,EAAQH,EAAMY,QAAQC,MAvBvC,OAwBMT,EACZH,EAAQD,EAAMC,MAAMA,GAAS,eACnCI,GACAI,8CAMMR,EAAQD,EAAMC,MAAMA,GAAS,mBAKrCc,EAAc,SAClBC,EACAC,SAEoB,iBAATD,YACCA,QAEHC,EAAWD,cA7CF"}