{"version":3,"file":"ShowMore.js","sources":["../../../../../src/components/Atoms/ShowMore/ShowMore.tsx"],"sourcesContent":["import React, { FC, useEffect, useRef, useState } from 'react'\nimport { Icon, SkeletonBlockItem } from '@/index'\nimport { ShowMoreProps } from './ShowMore.interface'\nimport { ContentWrapper, FadeOutOverlay, FlexItem, LabelWrapper, Wrapper } from './ShowMore.styled'\nimport { StyleguideArrow } from '@excelwithbusiness/webmobile-svg-library'\n\nexport const ShowMore: FC<ShowMoreProps> = ({\n  lineHeight,\n  numOfLines,\n  children,\n  labelAlignment = 'flex-start',\n  labelNoLineHeight = false,\n  showMoreText,\n  showLessText,\n  noShowLess = false,\n  fadeOutHeight,\n  fadeOutBackgroundColor,\n  fontSize = 16,\n  fontColor,\n  fontWeight,\n  padding,\n  loading,\n}) => {\n  const [isCollapsed, setCollapsed] = useState(true)\n  const [isLargerContent, setLargerContent] = useState(false)\n  const content = useRef<HTMLDivElement>(null)\n  const displayLabel = isCollapsed || !noShowLess\n  const toggleCollapse = () => setCollapsed(!isCollapsed)\n  const visibleHeight = numOfLines * lineHeight\n  useEffect(() => {\n    if (visibleHeight < Number(content.current?.scrollHeight)) {\n      setLargerContent(true)\n    }\n  }, [visibleHeight])\n\n  if (loading) {\n    return <SkeletonBlockItem width=\"80%\" height=\"auto\" />\n  }\n\n  return (\n    <>\n      <Wrapper visibleHeight={visibleHeight} isCollapsed={isCollapsed}>\n        <ContentWrapper ref={content}>{children}</ContentWrapper>\n        {isLargerContent && isCollapsed && (\n          <FadeOutOverlay\n            fadeOutHeight={Math.min(fadeOutHeight || 0, visibleHeight)}\n            fadeOutBackgroundColor={fadeOutBackgroundColor}\n          />\n        )}\n      </Wrapper>\n      {isLargerContent && displayLabel && (\n        <LabelWrapper\n          labelAlignment={labelAlignment}\n          fontSize={fontSize}\n          fontColor={fontColor}\n          fontWeight={fontWeight}\n          onClick={toggleCollapse}\n          padding={padding}\n          lineHeight={labelNoLineHeight ? 0 : lineHeight}>\n          <FlexItem>\n            {isCollapsed ? showMoreText : showLessText}\n            <Icon\n              rotate={isCollapsed ? 90 : -90}\n              height={fontSize}\n              width={fontSize}\n              alignSelf=\"center\">\n              <StyleguideArrow />\n            </Icon>\n          </FlexItem>\n        </LabelWrapper>\n      )}\n    </>\n  )\n}\n"],"names":["ShowMore","lineHeight","numOfLines","children","labelAlignment","labelNoLineHeight","showMoreText","showLessText","noShowLess","fadeOutHeight","fadeOutBackgroundColor","fontSize","fontColor","fontWeight","padding","loading","useState","isCollapsed","setCollapsed","isLargerContent","setLargerContent","content","useRef","displayLabel","visibleHeight","useEffect","Number","current","_content$current","scrollHeight","React","SkeletonBlockItem","width","height","Wrapper","ContentWrapper","ref","FadeOutOverlay","Math","min","LabelWrapper","onClick","FlexItem","Icon","rotate","alignSelf","StyleguideArrow"],"mappings":"ufAMaA,EAA8B,gBACzCC,IAAAA,WACAC,IAAAA,WACAC,IAAAA,aACAC,eAAAA,aAAiB,mBACjBC,kBAAAA,gBACAC,IAAAA,aACAC,IAAAA,iBACAC,WAAAA,gBACAC,IAAAA,cACAC,IAAAA,2BACAC,SAAAA,aAAW,KACXC,IAAAA,UACAC,IAAAA,WACAC,IAAAA,QACAC,IAAAA,UAEoCC,GAAS,YAAtCC,OAAaC,SACwBF,GAAS,YAA9CG,OAAiBC,OAClBC,EAAUC,EAAuB,MACjCC,EAAeN,IAAgBT,EAE/BgB,EAAgBtB,EAAaD,SACnCwB,GAAU,iBACJD,EAAgBE,iBAAOL,EAAQM,4BAARC,EAAiBC,eAC1CT,GAAiB,KAElB,CAACI,IAEAT,EACKe,gBAACC,GAAkBC,MAAM,MAAMC,OAAO,SAI7CH,gCACEA,gBAACI,GAAQV,cAAeA,EAAeP,YAAaA,GAClDa,gBAACK,GAAeC,IAAKf,GAAUlB,GAC9BgB,GAAmBF,GAClBa,gBAACO,GACC5B,cAAe6B,KAAKC,IAAI9B,GAAiB,EAAGe,GAC5Cd,uBAAwBA,KAI7BS,GAAmBI,GAClBO,gBAACU,GACCpC,eAAgBA,EAChBO,SAAUA,EACVC,UAAWA,EACXC,WAAYA,EACZ4B,QA7Be,kBAAMvB,GAAcD,IA8BnCH,QAASA,EACTb,WAAYI,EAAoB,EAAIJ,GACpC6B,gBAACY,OACEzB,EAAcX,EAAeC,EAC9BuB,gBAACa,GACCC,OAAQ3B,EAAc,IAAM,GAC5BgB,OAAQtB,EACRqB,MAAOrB,EACPkC,UAAU,UACVf,gBAACgB"}