{"version":3,"file":"Button.js","sources":["../../../../../src/components/Atoms/Button/Button.tsx"],"sourcesContent":["import * as React from 'react'\nimport { LoadingIndicatorColor } from '../LoadingIndicator'\nimport { ButtonActionType, ButtonProps } from './Button.interface'\nimport {\n  StyledAnchorButton,\n  StyledButton,\n  StyledLoadingIndicator,\n  StyledRouterButton,\n} from './Button.styled'\nimport { ButtonCheckmarkCircle } from './ButtonCheckmarkCircle'\n\nconst buttonColours = {\n  secondary: 'black',\n  inverted: 'black',\n  lightBorder: 'black',\n  darkBorder: 'black',\n  ghost: 'black',\n  outlined: 'primary',\n  primary: 'white',\n  prominent: 'white',\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  actionType = 'prominent',\n  children,\n  disabled = false,\n  round = false,\n  squared = false,\n  curved = false,\n  fullWidth = false,\n  isLoading = false,\n  isFlat = false,\n  elevated = false,\n  showCheckmark = false,\n  weight,\n  onClick,\n  size = 'md',\n  to,\n  href,\n  type = 'button',\n  className,\n  id,\n  ...otherProps\n}) => {\n  const handleOnClick = (ev: React.MouseEvent<HTMLElement>) => {\n    ev.stopPropagation()\n    if (disabled || isLoading) {\n      return\n    }\n    if (onClick) {\n      onClick(ev)\n    }\n  }\n\n  const renderLoading = (actionType: ButtonActionType) => {\n    const color = buttonColours[actionType] as LoadingIndicatorColor\n    return <StyledLoadingIndicator isVisible={true} size={20} color={color} />\n  }\n\n  if (href) {\n    return (\n      <StyledAnchorButton\n        actionType={actionType}\n        size={size}\n        type={type}\n        fullWidth={fullWidth}\n        disabled={disabled}\n        round={round}\n        squared={squared}\n        curved={curved}\n        elevated={elevated}\n        weight={weight}\n        href={href}\n        isLoading={isLoading}\n        className={className}\n        id={id}\n        {...otherProps}>\n        {children}\n        {isLoading && !disabled && renderLoading(actionType)}\n      </StyledAnchorButton>\n    )\n  }\n\n  if (to != null && to !== '') {\n    return (\n      <StyledRouterButton\n        actionType={actionType}\n        size={size}\n        type={type}\n        fullWidth={fullWidth}\n        disabled={disabled}\n        round={round}\n        squared={squared}\n        curved={curved}\n        elevated={elevated}\n        weight={weight}\n        isLoading={isLoading}\n        to={to}\n        className={className}\n        id={id}\n        {...otherProps}>\n        {children}\n        {isLoading && !disabled && renderLoading(actionType)}\n      </StyledRouterButton>\n    )\n  }\n\n  return (\n    <StyledButton\n      actionType={actionType}\n      size={size}\n      type={type}\n      isFlat={isFlat}\n      fullWidth={fullWidth}\n      disabled={disabled}\n      round={round}\n      squared={squared}\n      curved={curved}\n      elevated={elevated}\n      weight={weight}\n      isLoading={isLoading}\n      onClick={handleOnClick}\n      className={className}\n      id={id}\n      {...otherProps}>\n      {children}\n      {showCheckmark && <ButtonCheckmarkCircle />}\n      {isLoading && !disabled && renderLoading(actionType)}\n    </StyledButton>\n  )\n}\n"],"names":["buttonColours","secondary","inverted","lightBorder","darkBorder","ghost","outlined","primary","prominent","Button","actionType","children","disabled","round","squared","curved","fullWidth","isLoading","isFlat","elevated","showCheckmark","weight","onClick","size","to","href","type","className","id","otherProps","renderLoading","color","React","StyledLoadingIndicator","isVisible","StyledAnchorButton","StyledRouterButton","StyledButton","ev","stopPropagation","ButtonCheckmarkCircle"],"mappings":"kUAWA,IAAMA,EAAgB,CACpBC,UAAW,QACXC,SAAU,QACVC,YAAa,QACbC,WAAY,QACZC,MAAO,QACPC,SAAU,UACVC,QAAS,QACTC,UAAW,SAGAC,EAAgC,oBAC3CC,WAAAA,aAAa,cACbC,IAAAA,aACAC,SAAAA,oBACAC,MAAAA,oBACAC,QAAAA,oBACAC,OAAAA,oBACAC,UAAAA,oBACAC,UAAAA,oBACAC,OAAAA,oBACAC,SAAAA,oBACAC,cAAAA,gBACAC,IAAAA,OACAC,IAAAA,YACAC,KAAAA,aAAO,OACPC,IAAAA,GACAC,IAAAA,SACAC,KAAAA,aAAO,WACPC,IAAAA,UACAC,IAAAA,GACGC,iMAYGC,EAAgB,SAACpB,OACfqB,EAAQ/B,EAAcU,UACrBsB,gBAACC,GAAuBC,WAAW,EAAMX,KAAM,GAAIQ,MAAOA,YAG/DN,EAEAO,gBAACG,KACCzB,WAAYA,EACZa,KAAMA,EACNG,KAAMA,EACNV,UAAWA,EACXJ,SAAUA,EACVC,MAAOA,EACPC,QAASA,EACTC,OAAQA,EACRI,SAAUA,EACVE,OAAQA,EACRI,KAAMA,EACNR,UAAWA,EACXU,UAAWA,EACXC,GAAIA,GACAC,GACHlB,EACAM,IAAcL,GAAYkB,EAAcpB,IAKrC,MAANc,GAAqB,KAAPA,EAEdQ,gBAACI,KACC1B,WAAYA,EACZa,KAAMA,EACNG,KAAMA,EACNV,UAAWA,EACXJ,SAAUA,EACVC,MAAOA,EACPC,QAASA,EACTC,OAAQA,EACRI,SAAUA,EACVE,OAAQA,EACRJ,UAAWA,EACXO,GAAIA,EACJG,UAAWA,EACXC,GAAIA,GACAC,GACHlB,EACAM,IAAcL,GAAYkB,EAAcpB,IAM7CsB,gBAACK,KACC3B,WAAYA,EACZa,KAAMA,EACNG,KAAMA,EACNR,OAAQA,EACRF,UAAWA,EACXJ,SAAUA,EACVC,MAAOA,EACPC,QAASA,EACTC,OAAQA,EACRI,SAAUA,EACVE,OAAQA,EACRJ,UAAWA,EACXK,QA7EkB,SAACgB,GACrBA,EAAGC,kBACC3B,GAAYK,GAGZK,GACFA,EAAQgB,IAwERX,UAAWA,EACXC,GAAIA,GACAC,GACHlB,EACAS,GAAiBY,gBAACQ,QAClBvB,IAAcL,GAAYkB,EAAcpB"}