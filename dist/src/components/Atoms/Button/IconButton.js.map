{"version":3,"file":"IconButton.js","sources":["../../../../../src/components/Atoms/Button/IconButton.tsx"],"sourcesContent":["import * as React from 'react'\nimport { styled } from '@/styles/styled'\nimport { Button } from './Button'\nimport { ButtonProps } from './Button.interface'\n\nexport interface IconButtonProps extends ButtonProps {\n  width?: number | string\n  height?: number | string\n  isInputIcon?: boolean\n  isFlat?: boolean\n}\n\nexport interface StyledIconButtonProps extends IconButtonProps {\n  width: number | string\n  height: number | string\n  isFlat?: boolean\n}\n\nexport const StyledIconButton = styled(Button)<StyledIconButtonProps>`\n  min-width: ${({ width, theme }) =>\n    typeof width === 'number' ? `${width}px` : theme.spacing.base[width] || width};\n  height: ${({ height, theme }) =>\n    typeof height === 'number' ? `${height}px` : theme.spacing.base[height] || height};\n  padding: 0 ${({ theme }) => theme.spacing.base.xs};\n`\n\nexport const IconButton: React.FC<IconButtonProps> = ({\n  actionType = 'outlined',\n  height = 40,\n  width,\n  color,\n  isLoading,\n  isFlat,\n  onClick,\n  ...rest\n}) => {\n  return (\n    <StyledIconButton\n      color={color}\n      actionType={actionType}\n      width={width || height}\n      height={height}\n      isFlat={isFlat}\n      isLoading={isLoading}\n      onClick={onClick}\n      {...rest}\n    />\n  )\n}\n\nIconButton.displayName = 'IconButton'\n"],"names":["StyledIconButton","styled","Button","width","theme","spacing","base","height","xs","IconButton","actionType","color","isLoading","isFlat","onClick","rest","React","displayName"],"mappings":"6NAkBaA,EAAmBC,EAAOC,sFAAPD,8CACjB,gBAAGE,IAAAA,MAAOC,IAAAA,YACJ,iBAAVD,YAAwBA,QAAYC,EAAMC,QAAQC,KAAKH,IAAUA,KAChE,gBAAGI,IAAAA,OAAQH,IAAAA,YACD,iBAAXG,YAAyBA,QAAaH,EAAMC,QAAQC,KAAKC,IAAWA,KAChE,qBAAGH,MAAkBC,QAAQC,KAAKE,MAGpCC,EAAwC,oBACnDC,WAAAA,aAAa,iBACbH,OAAAA,aAAS,KACTJ,IAAAA,MACAQ,IAAAA,MACAC,IAAAA,UACAC,IAAAA,OACAC,IAAAA,QACGC,qFAGDC,gBAAChB,KACCW,MAAOA,EACPD,WAAYA,EACZP,MAAOA,GAASI,EAChBA,OAAQA,EACRM,OAAQA,EACRD,UAAWA,EACXE,QAASA,GACLC,KAKVN,EAAWQ,YAAc"}