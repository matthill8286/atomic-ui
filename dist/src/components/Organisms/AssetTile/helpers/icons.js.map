{"version":3,"file":"icons.js","sources":["../../../../../../src/components/Organisms/AssetTile/helpers/icons.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  IconArticle,\n  IconOnlineCourse,\n  IconSaveToPlaylist,\n  IconAsset,\n  IconAssetTime,\n  IconPercentage,\n  StyleguideVideoThin,\n  StyleguidePodcast,\n} from '@/svgs'\nimport {\n  AssetTypeName,\n  AssetTypeVariants,\n  MetaItem,\n  MetaPayload,\n} from '@/components/Organisms/AssetTile'\n\nexport type AssetTileVariantProps = AssetTypeVariants\ntype AssetTileVariant = React.ReactElement<AssetTileVariantProps>\n\nexport enum AssetTileIcons {\n  Video = 'Video',\n  Article = 'Article',\n  Podcast = 'Podcast',\n  Online = 'Online course',\n  Playlist = 'Playlist',\n  Webinar = 'Webinar',\n}\n\nconst icons: Record<AssetTileIcons, AssetTileVariant> = {\n  [AssetTileIcons.Video]: <StyleguideVideoThin />,\n  [AssetTileIcons.Article]: <IconArticle />,\n  [AssetTileIcons.Podcast]: <StyleguidePodcast />,\n  [AssetTileIcons.Online]: <IconOnlineCourse />,\n  [AssetTileIcons.Playlist]: <IconSaveToPlaylist />,\n  [AssetTileIcons.Webinar]: <StyleguideVideoThin />,\n}\n\nconst getIconByTypeName = (typeName: AssetTypeName): JSX.Element => {\n  const iconsComponent = icons[typeName]\n  if (!iconsComponent) {\n    return <IconArticle />\n  }\n\n  return icons[typeName]\n}\n\nexport const getMetaItemList = ({ duration, type, completedStatus, numberOfAssets }: MetaItem) => {\n  const payload: MetaPayload[] = []\n\n  if (type) {\n    payload.push({\n      text: type,\n      icon: getIconByTypeName(type),\n    })\n  }\n\n  if (numberOfAssets) {\n    payload.push({\n      text: numberOfAssets,\n      icon: <IconAsset />,\n    })\n  }\n\n  if (duration) {\n    payload.push({\n      text: `${duration}`,\n      icon: <IconAssetTime />,\n    })\n  }\n\n  if (completedStatus) {\n    payload.push({\n      text: completedStatus,\n      icon: <IconPercentage />,\n    })\n  }\n\n  return payload\n}\n"],"names":["AssetTileIcons","icons","Video","React","StyleguideVideoThin","Article","IconArticle","Podcast","StyleguidePodcast","Online","IconOnlineCourse","Playlist","IconSaveToPlaylist","Webinar","getMetaItemList","typeName","duration","type","completedStatus","numberOfAssets","payload","push","text","icon","IconAsset","IconAssetTime","IconPercentage"],"mappings":"0lCAqBYA,YAAAA,GAAAA,gBAAAA,oBAAAA,oBAAAA,yBAAAA,sBAAAA,qBAAAA,IAAAA,OASZ,IAAMC,UACHD,EAAeE,MAAQC,gBAACC,aACxBJ,EAAeK,QAAUF,gBAACG,aAC1BN,EAAeO,QAAUJ,gBAACK,aAC1BR,EAAeS,OAASN,gBAACO,aACzBV,EAAeW,SAAWR,gBAACS,aAC3BZ,EAAea,QAAUV,gBAACC,YAYhBU,EAAkB,gBATJC,EASOC,IAAAA,SAAUC,IAAAA,KAAMC,IAAAA,gBAAiBC,IAAAA,eAC3DC,EAAyB,UAE3BH,GACFG,EAAQC,KAAK,CACXC,KAAML,EACNM,MAfqBR,EAeGE,EAdLhB,EAAMc,GAKtBd,EAAMc,GAHJZ,gBAACG,WAgBNa,GACFC,EAAQC,KAAK,CACXC,KAAMH,EACNI,KAAMpB,gBAACqB,UAIPR,GACFI,EAAQC,KAAK,CACXC,eAASN,GACTO,KAAMpB,gBAACsB,UAIPP,GACFE,EAAQC,KAAK,CACXC,KAAMJ,EACNK,KAAMpB,gBAACuB,UAIJN"}