{"version":3,"file":"AssetSponsoring.js","sources":["../../../../../../src/components/Organisms/AssetTile/elements/AssetSponsoring.tsx"],"sourcesContent":["import React, { useCallback, useRef, useState, MouseEvent } from 'react'\nimport { Icon } from '@/components/Atoms/Icon'\nimport { CopyText } from '@/components/Atoms/Typography'\nimport { FlexItem } from '@/components/Helper/FlexBox'\nimport { NotificationBox } from '@/components/Molecules/NotificationBox'\nimport { css, styled } from '@/styles/styled'\nimport { StyleguideInfoOutlined } from '@/svgs'\nimport { SponsoringDetails } from '@/components/Organisms/AssetTile'\n\ninterface AssetSponsoringProps {\n  sponsoringDetails: SponsoringDetails\n  layout?: 'carousel' | 'tile'\n  maxWidth?: string\n}\n\nexport const AssetSponsoring: React.FC<AssetSponsoringProps> = ({\n  sponsoringDetails,\n  layout = 'tile',\n  maxWidth = '350px',\n}) => {\n  const [tooltipVisible, setTooltipVisible] = useState(false)\n  const iconRef = useRef<HTMLDivElement>(null)\n  const arrowLeft = (iconRef.current?.offsetLeft || 4) - 4\n\n  const handleTooltipChange = useCallback(\n    (newState: boolean) => (e: MouseEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n      setTooltipVisible(newState)\n    },\n    []\n  )\n  const handleClick = useCallback((e: MouseEvent) => {\n    if (!(e.target instanceof HTMLAnchorElement)) {\n      // clicked on notification box - but not link\n      e.preventDefault() // avoid parent anchor click\n    }\n    e.stopPropagation() // avoid parent click handler\n  }, [])\n\n  return (\n    <StyledSponsoringWrapper layout={layout}>\n      <StyledSponsoringInnerWrapper onClick={handleTooltipChange(!tooltipVisible)}>\n        {sponsoringDetails?.label && (\n          <>\n            <CopyText\n              toUpperCase={sponsoringDetails.showUppercase}\n              fontSize=\"sm\"\n              tag=\"div\"\n              color=\"grey4\"\n              margin=\"0 4px 0 0\">\n              {sponsoringDetails.label}\n            </CopyText>\n            <Icon\n              ref={iconRef}\n              width={12}\n              height={12}\n              color=\"grey4\"\n              display=\"inline-flex\"\n              alignSelf=\"center\"\n              onMouseEnter={handleTooltipChange(true)}\n              onMouseLeave={handleTooltipChange(false)}>\n              <StyleguideInfoOutlined />\n            </Icon>\n          </>\n        )}\n        {tooltipVisible && (\n          <NotificationBox\n            onClick={handleClick}\n            title={sponsoringDetails.title}\n            body={sponsoringDetails.infoText}\n            maxWidth={maxWidth}\n            animation=\"fadeIn\"\n            bodyFontSize=\"xs\"\n            bodyMargin=\"0\"\n            isClosable\n            color=\"white\"\n            onClose={handleTooltipChange(false)}\n            tooltip={{\n              arrowPosition: 'top-left',\n              arrowleft: arrowLeft,\n              left: 0,\n              top: 30,\n            }}\n          />\n        )}\n      </StyledSponsoringInnerWrapper>\n    </StyledSponsoringWrapper>\n  )\n}\n\nexport const StyledSponsoringWrapper = styled(FlexItem)<{\n  layout: AssetSponsoringProps['layout']\n}>(\n  ({ layout, theme }) => css`\n    display: flex;\n    align-items: center;\n    margin-bottom: ${layout === 'tile' ? theme.spacing.base.xs : '0'};\n    margin-left: 0;\n    position: relative;\n    min-width: 0;\n  `\n)\n\nconst StyledSponsoringInnerWrapper = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    margin-bottom: -${theme.spacing.base.xs};\n    padding-bottom: ${theme.spacing.base.xs};\n  `};\n`\n\nexport const StyledSponsoringIconWrapper = styled.div`\n  width: 100%;\n  display: flex;\n`\n"],"names":["AssetSponsoring","sponsoringDetails","layout","maxWidth","useState","tooltipVisible","setTooltipVisible","iconRef","useRef","arrowLeft","current","offsetLeft","handleTooltipChange","useCallback","newState","e","preventDefault","stopPropagation","handleClick","target","HTMLAnchorElement","React","StyledSponsoringWrapper","StyledSponsoringInnerWrapper","onClick","label","CopyText","toUpperCase","showUppercase","fontSize","tag","color","margin","Icon","ref","width","height","display","alignSelf","onMouseEnter","onMouseLeave","StyleguideInfoOutlined","NotificationBox","title","body","infoText","animation","bodyFontSize","bodyMargin","isClosable","onClose","tooltip","arrowPosition","arrowleft","left","top","styled","FlexItem","theme","css","spacing","base","xs","div"],"mappings":"qnBAeaA,EAAkD,kBAC7DC,IAAAA,sBACAC,OAAAA,aAAS,aACTC,SAAAA,aAAW,YAEiCC,GAAS,YAA9CC,OAAgBC,OACjBC,EAAUC,EAAuB,MACjCC,cAAaF,EAAQG,8BAASC,aAAc,GAAK,EAEjDC,EAAsBC,GAC1B,SAACC,UAAsB,SAACC,GACtBA,EAAEC,iBACFD,EAAEE,kBACFX,EAAkBQ,MAEpB,IAEII,EAAcL,GAAY,SAACE,GACzBA,EAAEI,kBAAkBC,mBAExBL,EAAEC,iBAEJD,EAAEE,oBACD,WAGDI,gBAACC,GAAwBpB,OAAQA,GAC/BmB,gBAACE,GAA6BC,QAASZ,GAAqBP,KACzDJ,MAAAA,SAAAA,EAAmBwB,QAClBJ,gCACEA,gBAACK,GACCC,YAAa1B,EAAkB2B,cAC/BC,SAAS,KACTC,IAAI,MACJC,MAAM,QACNC,OAAO,aACN/B,EAAkBwB,OAErBJ,gBAACY,GACCC,IAAK3B,EACL4B,MAAO,GACPC,OAAQ,GACRL,MAAM,QACNM,QAAQ,cACRC,UAAU,SACVC,aAAc3B,GAAoB,GAClC4B,aAAc5B,GAAoB,IAClCS,gBAACoB,UAINpC,GACCgB,gBAACqB,GACClB,QAASN,EACTyB,MAAO1C,EAAkB0C,MACzBC,KAAM3C,EAAkB4C,SACxB1C,SAAUA,EACV2C,UAAU,SACVC,aAAa,KACbC,WAAW,IACXC,cACAlB,MAAM,QACNmB,QAAStC,GAAoB,GAC7BuC,QAAS,CACPC,cAAe,WACfC,UAAW5C,EACX6C,KAAM,EACNC,IAAK,SASNjC,EAA0BkC,EAAOC,8FAAPD,EAGrC,gBAAGtD,IAAAA,OAAQwD,IAAAA,aAAYC,qGAGO,SAAXzD,EAAoBwD,EAAME,QAAQC,KAAKC,GAAK,QAO3DvC,EAA+BiC,EAAOO,oGAAPP,WACjC,gBAAGE,IAAAA,gEAEeA,EAAME,QAAQC,KAAKC,qCACnBJ,EAAME,QAAQC,KAAKC,eAIEN,EAAOO,mGAAPP"}