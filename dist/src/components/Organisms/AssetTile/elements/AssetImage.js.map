{"version":3,"file":"AssetImage.js","sources":["../../../../../../src/components/Organisms/AssetTile/elements/AssetImage.tsx"],"sourcesContent":["import React from 'react'\nimport { PictureObjectFit } from '@/components/Atoms/Picture'\nimport { SkeletonBlockItem } from '@/components/Atoms/Skeleton'\nimport { LazyLoadImage } from '@/components/Molecules/LazyLoadImage'\nimport { media } from '@/styles/media'\nimport { css, styled } from '@/styles/styled'\nimport { isAlternateTheme } from '@/utils/helper'\nimport { isPortrait } from '@/components/Organisms/AssetTile/AssetTile.styled'\n\nexport interface StyledPictureWrapperProps {\n  hasBottomMargin?: boolean\n  maxWidth?: string\n  minWidth?: string\n}\n\nexport interface AssetImageProps extends StyledPictureWrapperProps {\n  height?: string\n  lazyLoad?: boolean\n  loading?: boolean\n  onPictureClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void\n  assetImage?: string | null\n  title?: string | null\n  width?: string\n  withLQIP?: boolean\n  rounded?: boolean\n  withNativeLoading?: boolean\n}\n\nconst StyledPictureWrapper = styled.div<StyledPictureWrapperProps>`\n  ${({ hasBottomMargin, theme, minWidth, maxWidth }) => `\n    text-align: center;\n    flex: 1;\n    height: ${({ orientation, isCompact, height }) => (!isPortrait(orientation) ? '100%' : height)};\n\n    ${media.md} {\n      ${\n        !hasBottomMargin\n          ? css`\n              margin: 0;\n            `\n          : ''\n      }\n      text-align: unset;\n    }\n`}\n`\n\nexport const AssetImage: React.FC<AssetImageProps> = ({\n  children,\n  hasBottomMargin = false,\n  height,\n  lazyLoad,\n  loading = false,\n  onPictureClick,\n  assetImage,\n  rounded,\n  title,\n  width = '100%',\n  minWidth,\n  maxWidth,\n  withLQIP,\n  withNativeLoading,\n}) => {\n  if (loading) {\n    return (\n      <StyledPictureWrapper\n        hasBottomMargin={hasBottomMargin}\n        minWidth={minWidth}\n        maxWidth={maxWidth}\n        onClick={onPictureClick}>\n        <SkeletonBlockItem width={width} height={height} />\n      </StyledPictureWrapper>\n    )\n  }\n  return (\n    <StyledPictureWrapper hasBottomMargin={hasBottomMargin} onClick={onPictureClick}>\n      <LazyLoadImage\n        data-test=\"asset-card-image\"\n        src={assetImage}\n        alt={title}\n        height={height}\n        width={width}\n        rounded={rounded}\n        objectFit={\n          isAlternateTheme() ? ('fill' as PictureObjectFit) : ('cover' as PictureObjectFit)\n        }\n        lazyLoad={lazyLoad}\n        withLQIP={withLQIP}\n        withNativeLoading={withNativeLoading}>\n        {children}\n      </LazyLoadImage>\n    </StyledPictureWrapper>\n  )\n}\n"],"names":["StyledPictureWrapper","styled","div","hasBottomMargin","theme","minWidth","maxWidth","orientation","isCompact","height","isPortrait","media","md","css","AssetImage","children","lazyLoad","loading","onPictureClick","assetImage","rounded","title","width","withLQIP","withNativeLoading","React","onClick","SkeletonBlockItem","LazyLoadImage","src","alt","objectFit","isAlternateTheme"],"mappings":"8ZA4BA,IAAMA,EAAuBC,EAAOC,uFAAPD,UACzB,gBAAGE,IAAAA,yBAAiBC,QAAOC,WAAUC,yEAG3B,gBAAGC,IAAAA,cAAaC,cAAWC,IAAAA,cAAeC,EAAWH,GAAwBE,EAAT,6BAE5EE,EAAMC,wBAEHT,EAIG,GAHAU,2DAUCC,EAAwC,gBACnDC,IAAAA,aACAZ,gBAAAA,gBACAM,IAAAA,OACAO,IAAAA,aACAC,QAAAA,gBACAC,IAAAA,eACAC,IAAAA,WACAC,IAAAA,QACAC,IAAAA,UACAC,MAAAA,aAAQ,SACRjB,IAAAA,SACAC,IAAAA,SACAiB,IAAAA,SACAC,IAAAA,yBAEIP,EAEAQ,gBAACzB,GACCG,gBAAiBA,EACjBE,SAAUA,EACVC,SAAUA,EACVoB,QAASR,GACTO,gBAACE,GAAkBL,MAAOA,EAAOb,OAAQA,KAK7CgB,gBAACzB,GAAqBG,gBAAiBA,EAAiBuB,QAASR,GAC/DO,gBAACG,eACW,mBACVC,IAAKV,EACLW,IAAKT,EACLZ,OAAQA,EACRa,MAAOA,EACPF,QAASA,EACTW,UACEC,IAAsB,OAA+B,QAEvDhB,SAAUA,EACVO,SAAUA,EACVC,kBAAmBA,GAClBT"}