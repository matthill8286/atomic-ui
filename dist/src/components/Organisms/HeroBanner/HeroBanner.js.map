{"version":3,"file":"HeroBanner.js","sources":["../../../../../src/components/Organisms/HeroBanner/HeroBanner.tsx"],"sourcesContent":["import React, { useRef } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Card } from '@/components/Atoms/Card'\nimport { Picture } from '@/components/Atoms/Picture'\nimport { media, styled } from '@/styles'\nimport { HeightMap } from '@/types'\nimport { HeroBannerProps } from './HeroBanner.interface'\n\nconst StyledHeroImageWrapper = styled.div<{ height?: HeightMap; isLinking?: boolean }>`\n  cursor: ${({ isLinking }) => (isLinking ? 'pointer' : 'default')};\n  width: 100%;\n  display: flex;\n  height: ${({ height }) => height && height.mobile && `${height.mobile}px`};\n\n  ${media.md} {\n    height: ${({ height }) => height && height.tablet && `${height.tablet}px`};\n  }\n\n  ${media.lg} {\n    height: ${({ height }) => height && height.desktop && `${height.desktop}px`};\n  }\n`\n\nexport const HeroBanner: React.FC<HeroBannerProps> = ({\n  badges,\n  link,\n  badgeActionType,\n  height,\n  color,\n  heroImages,\n  elevation = 0,\n  elevationHover = 4,\n  children,\n  onClick,\n}) => {\n  const history = useHistory()\n\n  const onTileClick = (event: React.MouseEvent) => {\n    if (typeof onClick === 'function') {\n      onClick(event)\n    }\n\n    // navigate to link\n    if (link?.to) return history.push(link.to)\n    if (link?.href) return (window.location.href = link.href)\n  }\n\n  const ref = useRef(null)\n  const addElevationHover = link?.to || link?.href ? elevationHover : 0\n\n  return (\n    <StyledHeroImageWrapper\n      ref={ref}\n      onClick={onTileClick}\n      height={height}\n      isLinking={!!link?.to || !!link?.href}>\n      <Card\n        elevation={elevation}\n        elevationHover={addElevationHover}\n        shape=\"rounded-small\"\n        surface={color}\n        display=\"flex\"\n        noBorder={'none'}\n        fullHeight\n        contentWidth=\"100%\"\n        badges={badges}\n        badgeActionType={badgeActionType}>\n        {heroImages && (\n          <Picture\n            src={heroImages.xl}\n            srcLg={heroImages.lg}\n            srcMd={heroImages.md}\n            srcSm={heroImages.sm}\n            objectFit=\"cover\"\n            height=\"100%\"\n            width=\"100%\"\n          />\n        )}\n        {children}\n      </Card>\n    </StyledHeroImageWrapper>\n  )\n}\n"],"names":["StyledHeroImageWrapper","styled","div","isLinking","height","mobile","media","md","tablet","lg","desktop","HeroBanner","badges","link","badgeActionType","color","heroImages","elevation","elevationHover","children","onClick","history","useHistory","ref","useRef","addElevationHover","to","href","React","event","push","window","location","Card","shape","surface","display","noBorder","fullHeight","contentWidth","Picture","src","xl","srcLg","srcMd","srcSm","sm","objectFit","width"],"mappings":"+RAQA,IAAMA,EAAyBC,EAAOC,yFAAPD,qFACnB,qBAAGE,UAA6B,UAAY,aAG5C,gBAAGC,IAAAA,cAAaA,GAAUA,EAAOC,kBAAaD,EAAOC,eAE7DC,EAAMC,IACI,gBAAGH,IAAAA,cAAaA,GAAUA,EAAOI,kBAAaJ,EAAOI,eAG/DF,EAAMG,IACI,gBAAGL,IAAAA,cAAaA,GAAUA,EAAOM,mBAAcN,EAAOM,iBAIvDC,EAAwC,gBACnDC,IAAAA,OACAC,IAAAA,KACAC,IAAAA,gBACAV,IAAAA,OACAW,IAAAA,MACAC,IAAAA,eACAC,UAAAA,aAAY,QACZC,eAAAA,aAAiB,IACjBC,IAAAA,SACAC,IAAAA,QAEMC,EAAUC,IAYVC,EAAMC,EAAO,MACbC,EAAoBZ,MAAAA,GAAAA,EAAMa,IAAMb,MAAAA,GAAAA,EAAMc,KAAOT,EAAiB,SAGlEU,gBAAC5B,GACCuB,IAAKA,EACLH,QAhBgB,SAACS,SACI,mBAAZT,GACTA,EAAQS,GAINhB,MAAAA,GAAAA,EAAMa,GAAWL,EAAQS,KAAKjB,EAAKa,IACnCb,MAAAA,GAAAA,EAAMc,KAAcI,OAAOC,SAASL,KAAOd,EAAKc,aAUlDvB,OAAQA,EACRD,YAAaU,MAAAA,IAAAA,EAAMa,OAAQb,MAAAA,IAAAA,EAAMc,OACjCC,gBAACK,GACChB,UAAWA,EACXC,eAAgBO,EAChBS,MAAM,gBACNC,QAASpB,EACTqB,QAAQ,OACRC,SAAU,OACVC,cACAC,aAAa,OACb3B,OAAQA,EACRE,gBAAiBA,GAChBE,GACCY,gBAACY,GACCC,IAAKzB,EAAW0B,GAChBC,MAAO3B,EAAWP,GAClBmC,MAAO5B,EAAWT,GAClBsC,MAAO7B,EAAW8B,GAClBC,UAAU,QACV3C,OAAO,OACP4C,MAAM,SAGT7B"}