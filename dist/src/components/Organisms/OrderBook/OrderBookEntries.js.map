{"version":3,"file":"OrderBookEntries.js","sources":["../../../../../src/components/Organisms/OrderBook/OrderBookEntries.tsx"],"sourcesContent":["import React, { memo, ReactElement } from 'react'\nimport {\n  StyledColoredData,\n  StyledGhostRow,\n  StyledGhostSprite,\n  TableRow,\n} from '@/components/Atoms/Table/TableRow'\nimport { TableCell } from '@/components/Atoms/Table'\nimport { CopyText } from '@/components/Atoms/Typography'\nimport { ThemeColors } from '@/types'\nimport { OrderMeta } from '@/components/Organisms/OrderBook/OrderBook.interface'\n\ninterface OrderBookEntriesProps {\n  rows: any\n  rowsKey: string\n  color: ThemeColors\n  isReversed: boolean\n  maxPriceSize: number\n}\n\ninterface OrderBookEntryProps extends OrderMeta {\n  color: ThemeColors\n  isReversed?: boolean\n  maxPriceSize: number\n  colorSpriteWidth: number\n}\n\nexport const OrderBookEntry: React.NamedExoticComponent<OrderBookEntryProps> = memo(\n  ({ price, size, total, colorSpriteWidth, color, isReversed }): ReactElement => {\n    return (\n      <>\n        <StyledGhostRow>\n          <StyledGhostSprite isReversed={isReversed}>\n            <StyledColoredData color={color} showPercentage={colorSpriteWidth} />\n          </StyledGhostSprite>\n        </StyledGhostRow>\n        <TableRow key={price} isReversed={isReversed} disableHover backgroundColor=\"white\">\n          <TableCell mobileHeadline cellColor=\"white\">\n            <CopyText bold padding=\"0\" margin=\"0\" color={color}>\n              {price}\n            </CopyText>\n          </TableCell>\n          <TableCell cellColor=\"white\">\n            <CopyText bold padding=\"0\" margin=\"0\" color=\"white\">\n              {size}\n            </CopyText>\n          </TableCell>\n          <TableCell cellColor=\"white\">\n            <CopyText bold padding=\"0\" margin=\"0\" color=\"white\">\n              {total}\n            </CopyText>\n          </TableCell>\n        </TableRow>\n      </>\n    )\n  }\n)\n\nexport const OrderBookEntries: React.NamedExoticComponent<OrderBookEntriesProps> = memo(\n  ({ rows, rowsKey, color, isReversed, maxPriceSize }): ReactElement | null => {\n    if (!rows) {\n      return null\n    }\n\n    return (\n      <>\n        {rows.map((row: OrderMeta) => {\n          const { price, size, total } = row\n\n          const colorSpriteWidth = (total / maxPriceSize) * 100\n\n          return (\n            <>\n              <StyledGhostRow>\n                <StyledGhostSprite isReversed={isReversed}>\n                  <StyledColoredData color={color} showPercentage={colorSpriteWidth} />\n                </StyledGhostSprite>\n              </StyledGhostRow>\n              <TableRow key={price} isReversed={isReversed} disableHover backgroundColor=\"white\">\n                <TableCell mobileHeadline cellColor=\"white\">\n                  <CopyText bold padding=\"0\" margin=\"0\" color={color}>\n                    {price}\n                  </CopyText>\n                </TableCell>\n                <TableCell cellColor=\"white\">\n                  <CopyText bold padding=\"0\" margin=\"0\" color=\"white\">\n                    {size}\n                  </CopyText>\n                </TableCell>\n                <TableCell cellColor=\"white\">\n                  <CopyText bold padding=\"0\" margin=\"0\" color=\"white\">\n                    {total}\n                  </CopyText>\n                </TableCell>\n              </TableRow>\n            </>\n          )\n        })}\n      </>\n    )\n  }\n)\n"],"names":["OrderBookEntry","memo","price","size","total","colorSpriteWidth","color","isReversed","React","StyledGhostRow","StyledGhostSprite","StyledColoredData","showPercentage","TableRow","key","disableHover","backgroundColor","TableCell","mobileHeadline","cellColor","CopyText","bold","padding","margin"],"mappings":"iSA2BaA,EAAkEC,GAC7E,gBAAGC,IAAAA,MAAOC,IAAAA,KAAMC,IAAAA,MAAOC,IAAAA,iBAAkBC,IAAAA,MAAOC,IAAAA,kBAE5CC,gCACEA,gBAACC,OACCD,gBAACE,GAAkBH,WAAYA,GAC7BC,gBAACG,GAAkBL,MAAOA,EAAOM,eAAgBP,MAGrDG,gBAACK,GAASC,IAAKZ,EAAOK,WAAYA,EAAYQ,gBAAaC,gBAAgB,SACzER,gBAACS,GAAUC,kBAAeC,UAAU,SAClCX,gBAACY,GAASC,QAAKC,QAAQ,IAAIC,OAAO,IAAIjB,MAAOA,GAC1CJ,IAGLM,gBAACS,GAAUE,UAAU,SACnBX,gBAACY,GAASC,QAAKC,QAAQ,IAAIC,OAAO,IAAIjB,MAAM,SACzCH,IAGLK,gBAACS,GAAUE,UAAU,SACnBX,gBAACY,GAASC,QAAKC,QAAQ,IAAIC,OAAO,IAAIjB,MAAM,SACzCF"}