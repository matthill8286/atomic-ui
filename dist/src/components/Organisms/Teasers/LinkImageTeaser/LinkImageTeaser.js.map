{"version":3,"file":"LinkImageTeaser.js","sources":["../../../../../../src/components/Organisms/Teasers/LinkImageTeaser/LinkImageTeaser.tsx"],"sourcesContent":["import React from 'react'\nimport { ImageTeaserProps } from '../ImageTeaser/ImageTeaser.interface'\nimport { useGraphCmsImages } from '@/utils/useGraphCmsImages'\nimport { Link } from '@/components/Atoms/Link'\nimport { ImageTeaser } from '../ImageTeaser/ImageTeaser'\nimport { styled } from '@/styles'\n\nconst StyledImageTeaser = styled.div`\n  cursor: pointer;\n  height: 100%;\n`\n\nconst getLinkTargetValue = (isLinkBlank: boolean) => {\n  return isLinkBlank ? '_blank' : '_self'\n}\n\nexport const LinkImageTeaser: React.FC<ImageTeaserProps> = ({\n  link,\n  images,\n  contentful,\n  lazyloadLowQuality,\n  onClick,\n  ...otherImageTeaserProps\n}) => {\n  const [finalImages, ref] = useGraphCmsImages(\n    [images.xl, images.lg, images.md, images.sm],\n    !lazyloadLowQuality\n  )\n\n  const isRelativeUrl = link?.to\n  const isAbsoluteUrl = !isRelativeUrl && link?.href\n\n  return (\n    <React.Fragment>\n      {isRelativeUrl && (\n        <Link to={link.to} target={getLinkTargetValue(!!link.isLinkBlank)}>\n          <StyledImageTeaser data-test=\"link-wrapped-teaser\" onClick={onClick} ref={ref}>\n            <ImageTeaser {...otherImageTeaserProps} finalImages={finalImages} />\n          </StyledImageTeaser>\n        </Link>\n      )}\n      {isAbsoluteUrl && (\n        <a href={link.href} target={getLinkTargetValue(!!link.isLinkBlank)}>\n          <StyledImageTeaser onClick={onClick} ref={ref} data-test=\"anchor-wrapped-teaser\">\n            <ImageTeaser {...otherImageTeaserProps} finalImages={finalImages} />\n          </StyledImageTeaser>\n        </a>\n      )}\n      {!link && (\n        <StyledImageTeaser onClick={onClick} ref={ref}>\n          <ImageTeaser {...otherImageTeaserProps} finalImages={finalImages} />\n        </StyledImageTeaser>\n      )}\n    </React.Fragment>\n  )\n}\n"],"names":["StyledImageTeaser","styled","div","getLinkTargetValue","isLinkBlank","LinkImageTeaser","link","images","contentful","lazyloadLowQuality","onClick","otherImageTeaserProps","useGraphCmsImages","xl","lg","md","sm","finalImages","ref","isRelativeUrl","to","isAbsoluteUrl","href","React","Fragment","Link","target","ImageTeaser"],"mappings":"oYAOA,IAAMA,EAAoBC,EAAOC,6FAAPD,kCAKpBE,EAAqB,SAACC,UACnBA,EAAc,SAAW,SAGrBC,EAA8C,gBACzDC,IAAAA,KACAC,IAAAA,SACAC,eACAC,IAAAA,mBACAC,IAAAA,QACGC,uEAEwBC,EACzB,CAACL,EAAOM,GAAIN,EAAOO,GAAIP,EAAOQ,GAAIR,EAAOS,KACxCP,YAFIQ,OAAaC,OAKdC,EAAgBb,MAAAA,SAAAA,EAAMc,GACtBC,GAAiBF,IAAiBb,MAAAA,SAAAA,EAAMgB,aAG5CC,gBAACA,EAAMC,cACJL,GACCI,gBAACE,GAAKL,GAAId,EAAKc,GAAIM,OAAQvB,IAAqBG,EAAKF,cACnDmB,gBAACvB,eAA4B,sBAAsBU,QAASA,EAASQ,IAAKA,GACxEK,gBAACI,OAAgBhB,GAAuBM,YAAaA,OAI1DI,GACCE,qBAAGD,KAAMhB,EAAKgB,KAAMI,OAAQvB,IAAqBG,EAAKF,cACpDmB,gBAACvB,GAAkBU,QAASA,EAASQ,IAAKA,cAAe,yBACvDK,gBAACI,OAAgBhB,GAAuBM,YAAaA,QAIzDX,GACAiB,gBAACvB,GAAkBU,QAASA,EAASQ,IAAKA,GACxCK,gBAACI,OAAgBhB,GAAuBM,YAAaA"}