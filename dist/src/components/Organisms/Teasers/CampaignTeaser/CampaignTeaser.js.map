{"version":3,"file":"CampaignTeaser.js","sources":["../../../../../../src/components/Organisms/Teasers/CampaignTeaser/CampaignTeaser.tsx"],"sourcesContent":["import React from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { Tag } from '@/components/Atoms/Tag'\nimport { CopyText, Heading, HeadingFeatured } from '@/components/Atoms/Typography'\nimport { useWindowDimensions } from '@/components/Helper/useWindowDimensions'\nimport { LazyLoadImage } from '@/components/Molecules/LazyLoadImage'\nimport { media, ALTERNATE, styled, ThemeConsumer } from '@/styles'\nimport { breakpoints } from '@/styles/sc-vars-global'\nimport { Theme, ThemeFontLineHeight, ThemeFontSizes } from '@/types/theme'\nimport {\n  BackgroundProps,\n  CampaignTeaserProps,\n  CampaignTeaserSize,\n  InfoProps,\n  TagsProps,\n} from './CampaignTeaser.interface'\nimport {\n  StyledBackgroundImage,\n  StyledCampaignTeaserTagWrapper,\n  StyledCard,\n  StyledFlexBottomContainer,\n  StyledInfoContainer,\n  StyledInfoContainerContent,\n  StyledInfoTextContainer,\n  StyledLink,\n  StyledMainContainer,\n  StyledPictureContainer,\n  StyledAssetContainer,\n  StyledRect,\n  StyledTongue,\n  StyledUpsetRect,\n  StyledWrapper,\n} from './CampaignTeaser.styled'\nimport { useTheme } from 'styled-components'\nimport { LogoFiltered } from '@excelwithbusiness/webmobile-svg-library'\n\nconst StyledFilteredLogo = styled.div`\n  display: none;\n  ${({ theme }) =>\n    theme.name === ALTERNATE &&\n    `\n  ${media.md} {\n    display: block;\n  }\n\n  > svg {\n    position: absolute;\n    left: -1px;\n    bottom: 0;\n    z-index: 1;\n    height: 92px;\n    width: auto;\n\n    ${media.ie11} {\n      width: 95px;\n      top: -7px;\n    }\n  }`}\n`\n\nconst Info: React.FC<InfoProps> = ({ isPortrait, limitLines, size, contentText, tags }) => {\n  if (!isPortrait && contentText) {\n    return (\n      <StyledInfoTextContainer>\n        <CopyText\n          fontSize={getValueBySize<ThemeFontSizes>(isPortrait, size, 'sm', 'sm', 'lg')}\n          lineHeight={getValueBySize<ThemeFontLineHeight>(isPortrait, size, 'md', 'md', 'lg')}\n          limitLines={limitLines ? limitLines : tags && tags.length > 0 ? 3 : 5}\n          tag=\"span\">\n          {contentText}\n        </CopyText>\n      </StyledInfoTextContainer>\n    )\n  } else {\n    return null\n  }\n}\n\nconst Tags: React.FC<TagsProps> = ({ isPortrait, tags, tagsOnMobile }) => {\n  if (tags && tags.length > 0) {\n    return (\n      <StyledFlexBottomContainer>\n        <StyledCampaignTeaserTagWrapper\n          isPortrait={isPortrait}\n          tagsOnMobile={tagsOnMobile}\n          limitLines={2}>\n          {tags.map((t, index) => {\n            return t && t.trim().length > 0 ? (\n              <Tag key={'Tag_' + t + index} text={t} marginBottom marginRight />\n            ) : (\n              undefined\n            )\n          })}\n        </StyledCampaignTeaserTagWrapper>\n      </StyledFlexBottomContainer>\n    )\n  } else {\n    return null\n  }\n}\n\nconst Background: React.FC<BackgroundProps> = ({\n  isPortrait,\n  backgroundVariant,\n  image,\n  lazyloadBackgroundImage,\n  size,\n  hasAsset,\n  theme,\n}) => {\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    threshold: 0.2,\n  })\n  const hasQueryParams = image?.indexOf('?') !== -1\n\n  const lowQualityImagePlaceholder = image ? `${image}${hasQueryParams ? '&' : '?'}q=1` : undefined\n\n  if (theme === ALTERNATE) {\n    return (\n      <StyledRect\n        ref={ref}\n        image={image}\n        inView={inView}\n        lazyLoadImage={lowQualityImagePlaceholder}\n        lazyLoading={lazyloadBackgroundImage}\n      />\n    )\n  } else {\n    switch (backgroundVariant) {\n      case 'tongue':\n        return (\n          <StyledTongue\n            ref={ref}\n            height={getValueBySize<number>(isPortrait, size, 104, 144, 160)}\n            isPortrait={isPortrait}\n            hasAsset={hasAsset}>\n            <StyledBackgroundImage\n              image={image}\n              inView={inView}\n              lazyLoadImage={lowQualityImagePlaceholder}\n              lazyLoading={lazyloadBackgroundImage}\n              hasAsset={hasAsset}\n            />\n          </StyledTongue>\n        )\n      case 'upsetRect':\n        return <StyledUpsetRect ref={ref} image={image} />\n      case 'rect':\n        return (\n          <StyledRect\n            ref={ref}\n            image={image}\n            inView={inView}\n            lazyLoadImage={lowQualityImagePlaceholder}\n            lazyLoading={lazyloadBackgroundImage}\n          />\n        )\n      default:\n        return null\n    }\n  }\n}\n\nexport const CampaignTeaser: React.FC<CampaignTeaserProps> = ({\n  smallHeadline,\n  headline,\n  contentText,\n  assetImage,\n  backgroundImage,\n  borderColor,\n  lazyload,\n  lazyloadBackgroundImage,\n  lazyloadLowQuality,\n  badges,\n  badgeActionType = 'secondary',\n  size = 'auto',\n  orientation = 'auto',\n  tags,\n  backgroundVariant = 'upsetRect',\n  elevation = 0,\n  elevationHover,\n  link,\n  isStageTeaser = false,\n  fixedImageHeight = false,\n  tagsOnMobile = true,\n  limitLines,\n  onClick,\n  clickableWithoutLink,\n  ...rest\n}) => {\n  const { breakpoint: currentBreakpoint } = useWindowDimensions()\n\n  const isMobile = currentBreakpoint < breakpoints.sm\n  const isPortrait = orientation === 'portrait'\n  const isClickable = (!!onClick && clickableWithoutLink) || !!link?.href\n  const cardShape = 'rounded-big'\n\n  const linkTarget = link?.isLinkBlank ? '_blank' : '_self'\n\n  const theme = useTheme() as Theme\n  return (\n    <StyledLink\n      to={link?.to}\n      href={link?.href}\n      onClick={onClick}\n      underline={false}\n      target={linkTarget}>\n      <StyledWrapper hasAsset={!!assetImage}>\n        <StyledCard\n          elevation={elevation}\n          elevationHover={elevationHover}\n          shape={cardShape}\n          display=\"flex\"\n          badges={badges}\n          badgeActionType={badgeActionType}\n          borderColor={borderColor}\n          fullHeight\n          overflow=\"hidden\"\n          {...rest}>\n          <StyledMainContainer isPortrait={isPortrait} isClickable={isClickable}>\n            <StyledInfoContainer>\n              <StyledInfoContainerContent>\n                {smallHeadline && (\n                  <Heading\n                    lineHeight=\"sm\"\n                    margin={`0`}\n                    scale=\"level-5\"\n                    tag=\"p\"\n                    uppercase\n                    weight=\"semibold\">\n                    {smallHeadline}\n                  </Heading>\n                )}\n                <HeadingFeatured fixedMdSize limitLines={2}>\n                  {headline}\n                </HeadingFeatured>\n                <Info\n                  contentText={contentText}\n                  isPortrait={isPortrait}\n                  limitLines={limitLines}\n                  size={size}\n                  tags={tags}\n                />\n                <Tags isPortrait={isPortrait} tagsOnMobile={tagsOnMobile} tags={tags} />\n              </StyledInfoContainerContent>\n            </StyledInfoContainer>\n            <StyledAssetContainer\n              size={size}\n              isPortrait={isPortrait}\n              isStageTeaser={isStageTeaser}\n              fixedImageHeight={fixedImageHeight}\n              hasAsset={!!assetImage}>\n              <StyledFilteredLogo>\n                <LogoFiltered />\n              </StyledFilteredLogo>\n              <Background\n                size={size}\n                isPortrait={isPortrait}\n                image={backgroundImage}\n                lazyloadBackgroundImage={lazyloadBackgroundImage}\n                lazyloadLowQuality={lazyloadLowQuality}\n                backgroundVariant={backgroundVariant}\n                hasAsset={!!assetImage}\n                theme={theme?.name}\n              />\n              {assetImage && (\n                <StyledPictureContainer isStageTeaser={isStageTeaser}>\n                  <LazyLoadImage\n                    src={assetImage}\n                    height={isMobile ? undefined : '100%'}\n                    lazyLoad={lazyload}\n                  />\n                </StyledPictureContainer>\n              )}\n            </StyledAssetContainer>\n          </StyledMainContainer>\n        </StyledCard>\n      </StyledWrapper>\n    </StyledLink>\n  )\n}\n\n/**\n *\n * Decides which value (small|medium|large) should be used.\n * For the decision isPortrait and size is used.\n * If device is in portrait mode and size is automatic it will always return the small value.\n */\nfunction getValueBySize<T>(\n  isPortrait: boolean,\n  size: CampaignTeaserSize,\n  small: T,\n  medium: T,\n  large: T\n): T {\n  // if the size is automatic and it's a mobile device\n  if (size === 'auto' && isPortrait) {\n    return small\n  }\n\n  switch (size) {\n    case 'small':\n      return small\n    case 'medium':\n      return medium\n    case 'large':\n      return large\n    default:\n      return medium\n  }\n}\n"],"names":["StyledFilteredLogo","styled","div","theme","name","ALTERNATE","media","md","ie11","Info","isPortrait","limitLines","size","contentText","tags","React","StyledInfoTextContainer","CopyText","fontSize","getValueBySize","lineHeight","length","tag","Tags","tagsOnMobile","StyledFlexBottomContainer","StyledCampaignTeaserTagWrapper","map","t","index","trim","Tag","key","text","marginBottom","marginRight","undefined","Background","backgroundVariant","image","lazyloadBackgroundImage","hasAsset","useInView","triggerOnce","threshold","ref","inView","hasQueryParams","indexOf","lowQualityImagePlaceholder","StyledRect","lazyLoadImage","lazyLoading","StyledTongue","height","StyledBackgroundImage","StyledUpsetRect","CampaignTeaser","smallHeadline","headline","assetImage","backgroundImage","borderColor","lazyload","lazyloadLowQuality","badges","badgeActionType","orientation","elevation","elevationHover","link","isStageTeaser","fixedImageHeight","onClick","clickableWithoutLink","rest","isMobile","useWindowDimensions","breakpoint","breakpoints","sm","isClickable","href","linkTarget","isLinkBlank","useTheme","StyledLink","to","underline","target","StyledWrapper","StyledCard","shape","display","fullHeight","overflow","StyledMainContainer","StyledInfoContainer","StyledInfoContainerContent","Heading","margin","scale","uppercase","weight","HeadingFeatured","fixedMdSize","StyledAssetContainer","LogoFiltered","StyledPictureContainer","LazyLoadImage","src","lazyLoad","small","medium","large"],"mappings":"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"}