{"version":3,"file":"TopTeaser.js","sources":["../../../../../../src/components/Organisms/Teasers/TopTeaser/TopTeaser.tsx"],"sourcesContent":["import React, { FC, ReactElement, useContext } from 'react'\nimport { HeroBanner } from '../../HeroBanner'\nimport { HeroBannerProps } from '../../HeroBanner/HeroBanner.interface'\nimport { Picture, PictureObjectFit } from '@/components/Atoms/Picture'\nimport { TileImages } from '@/components/Organisms/HeroBanner/HeroBanner.interface'\nimport { FeaturedHeadingProps, FeaturedImageProps, HeroContent } from './TopTeaser.interface'\nimport { ThemeContext } from '@/styles'\nimport {\n  StyledFeatureImage,\n  StyledHeroContentContainer,\n  StyledHeroFeatureSection,\n  StyledIconContainer,\n  StyledHeroFeatureCopy,\n  StyledHeroFeatureIntro,\n} from './TopTeaser.styled'\n\nconst StyledFeaturedHeading: FC<FeaturedHeadingProps> = ({ children, primary, secondary }) => {\n  const theme = useContext(ThemeContext)\n  const { font, background } = theme.hero.intro\n  const { font: copyFont, background: copyBackground } = theme.hero.copy\n  return (\n    <StyledHeroFeatureSection>\n      {primary && (\n        <StyledHeroFeatureIntro\n          textAlign=\"left\"\n          color=\"white\"\n          tag=\"div\"\n          padding=\"0\"\n          fontFamily=\"default\"\n          margin=\"0\"\n          fontSize={{\n            desktop: font.size,\n            tablet: 'sm',\n            mobile: 'xs',\n          }}\n          background={background}\n          toUpperCase>\n          {primary}\n        </StyledHeroFeatureIntro>\n      )}\n      {secondary && (\n        <StyledHeroFeatureCopy\n          textAlign=\"left\"\n          color=\"white\"\n          weight=\"bold\"\n          fontFamily=\"default\"\n          margin=\"0\"\n          tag=\"div\"\n          padding=\"sm\"\n          fontSize={{\n            desktop: copyFont.size,\n            tablet: 'xxxl',\n            mobile: 'xl',\n          }}\n          background={copyBackground}>\n          {secondary}\n        </StyledHeroFeatureCopy>\n      )}\n      {children}\n    </StyledHeroFeatureSection>\n  )\n}\n\nconst FeaturedImage: React.FC<FeaturedImageProps> = ({ svg, images, objectFit }) => {\n  return (\n    <StyledFeatureImage>\n      {images && (\n        <Picture\n          src={images.xl}\n          srcLg={images.lg}\n          srcMd={images.md}\n          srcSm={images.sm}\n          objectFit={'fill' as PictureObjectFit}\n          height=\"100%\"\n          width=\"100%\"\n        />\n      )}\n\n      {svg && <StyledIconContainer>{svg}</StyledIconContainer>}\n    </StyledFeatureImage>\n  )\n}\n\nexport interface FeaturedContentProps {\n  svg?: JSX.Element | ReactElement | undefined\n  content?: HeroContent\n  images?: TileImages | undefined\n}\n\nexport const FeaturedContent: React.FC<FeaturedContentProps> = ({ images, content, svg }) => {\n  const renderIntro = content?.primary ? `Hi ${content.name || ''}, ${content.primary}` : null\n  const renderWithNoPrimary = !content?.name ? content?.primary : renderIntro\n\n  return (\n    <>\n      {(images || svg) && (\n        <StyledHeroContentContainer>\n          <FeaturedImage images={images} svg={svg} />\n        </StyledHeroContentContainer>\n      )}\n      <StyledFeaturedHeading\n        primary={renderWithNoPrimary as HeroContent['primary']}\n        secondary={content?.secondary as HeroContent['secondary']}\n      />\n    </>\n  )\n}\n\nexport const TopTeaser: React.FC<HeroBannerProps & FeaturedContentProps> = ({\n  badges,\n  heroImages,\n  content,\n  svg,\n  badgeActionType,\n  color,\n  images,\n  height,\n  link,\n  onClick,\n}) => {\n  return (\n    <HeroBanner\n      link={link}\n      color={color}\n      height={height}\n      badges={badges}\n      badgeActionType={badgeActionType}\n      heroImages={heroImages}\n      onClick={onClick}>\n      <FeaturedContent content={content} images={images} svg={svg} />\n    </HeroBanner>\n  )\n}\n"],"names":["StyledFeaturedHeading","children","primary","secondary","theme","useContext","ThemeContext","hero","intro","font","background","copy","copyFont","copyBackground","React","StyledHeroFeatureSection","StyledHeroFeatureIntro","textAlign","color","tag","padding","fontFamily","margin","fontSize","desktop","size","tablet","mobile","toUpperCase","StyledHeroFeatureCopy","weight","FeaturedImage","svg","images","objectFit","StyledFeatureImage","Picture","src","xl","srcLg","lg","srcMd","md","srcSm","sm","height","width","StyledIconContainer","FeaturedContent","content","renderIntro","name","renderWithNoPrimary","StyledHeroContentContainer","TopTeaser","badges","heroImages","badgeActionType","link","onClick","HeroBanner"],"mappings":"wZAgBA,IAAMA,EAAkD,gBAAGC,IAAAA,SAAUC,IAAAA,QAASC,IAAAA,UACtEC,EAAQC,EAAWC,KACIF,EAAMG,KAAKC,MAAhCC,IAAAA,KAAMC,IAAAA,aACyCN,EAAMG,KAAKI,KAApDC,IAANH,KAA4BI,IAAZH,kBAEtBI,gBAACC,OACEb,GACCY,gBAACE,GACCC,UAAU,OACVC,MAAM,QACNC,IAAI,MACJC,QAAQ,IACRC,WAAW,UACXC,OAAO,IACPC,SAAU,CACRC,QAASf,EAAKgB,KACdC,OAAQ,KACRC,OAAQ,MAEVjB,WAAYA,EACZkB,gBACC1B,GAGJC,GACCW,gBAACe,GACCZ,UAAU,OACVC,MAAM,QACNY,OAAO,OACPT,WAAW,UACXC,OAAO,IACPH,IAAI,MACJC,QAAQ,KACRG,SAAU,CACRC,QAASZ,EAASa,KAClBC,OAAQ,OACRC,OAAQ,MAEVjB,WAAYG,GACXV,GAGJF,IAKD8B,EAA8C,gBAAGC,IAAAA,IAAKC,IAAAA,gBAAQC,UAEhEpB,gBAACqB,OACEF,GACCnB,gBAACsB,GACCC,IAAKJ,EAAOK,GACZC,MAAON,EAAOO,GACdC,MAAOR,EAAOS,GACdC,MAAOV,EAAOW,GACdV,UAAW,OACXW,OAAO,OACPC,MAAM,SAITd,GAAOlB,gBAACiC,OAAqBf,KAWvBgB,EAAkD,gBAAGf,IAAAA,OAAQgB,IAAAA,QAASjB,IAAAA,IAC3EkB,EAAcD,MAAAA,GAAAA,EAAS/C,qBAAgB+C,EAAQE,MAAQ,gBAAOF,EAAQ/C,SAAY,KAClFkD,EAAuBH,MAAAA,GAAAA,EAASE,KAA0BD,EAAnBD,MAAAA,SAAAA,EAAS/C,eAGpDY,iCACImB,GAAUD,IACVlB,gBAACuC,OACCvC,gBAACiB,GAAcE,OAAQA,EAAQD,IAAKA,KAGxClB,gBAACd,GACCE,QAASkD,EACTjD,UAAW8C,MAAAA,SAAAA,EAAS9C,cAMfmD,EAA8D,gBACzEC,IAAAA,OACAC,IAAAA,WACAP,IAAAA,QACAjB,IAAAA,IACAyB,IAAAA,gBACAvC,IAAAA,MACAe,IAAAA,OACAY,IAAAA,OACAa,IAAAA,KACAC,IAAAA,eAGE7C,gBAAC8C,GACCF,KAAMA,EACNxC,MAAOA,EACP2B,OAAQA,EACRU,OAAQA,EACRE,gBAAiBA,EACjBD,WAAYA,EACZG,QAASA,GACT7C,gBAACkC,GAAgBC,QAASA,EAAShB,OAAQA,EAAQD,IAAKA"}