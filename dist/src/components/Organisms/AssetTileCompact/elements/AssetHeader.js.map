{"version":3,"file":"AssetHeader.js","sources":["../../../../../../src/components/Organisms/AssetTileCompact/elements/AssetHeader.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Link } from '@/components/Atoms/Link'\nimport { SkeletonInlineItem } from '@/components/Atoms/Skeleton'\nimport { CopyText, Heading, InfoText } from '@/components/Atoms/Typography'\nimport { FontSizeMap } from '@/components/Atoms/Typography/Typo/Typo.interface'\nimport { FlexBox, FlexItem } from '@/components/Helper/FlexBox'\nimport { styled } from '@/styles/styled'\nimport { ThemeFontSizes, ThemeFontWeights } from '@/types'\nimport { useWindowDimensions } from '@/components/Helper'\nimport { breakpoints } from '@/styles'\n\ninterface AssetTitleProps {\n  headerFontSize?: ThemeFontSizes | FontSizeMap\n  headerFontWeight?: ThemeFontWeights\n  href?: string\n  target?: string\n  loading?: boolean\n  provider?: string\n  showProvider?: boolean\n  description?: string\n  sublinePrice?: string\n  title: string\n  energyEfficiencySlot?: JSX.Element | null\n  onClick?: () => void\n}\n\nconst StyledAssetHeaderWrapper = styled.div`\n  margin-bottom: ${({ theme }) => theme.spacing.base.sm};\n  margin-right: ${({ theme }) => theme.spacing.base.xs};\n`\n\nconst StyledHeading = styled(Heading)`\n  width: 90%;\n`\n\nconst StyledLink = styled(Link)`\n  display: inline;\n`\n\nconst StyledManufacturer = styled.span`\n  font-weight: ${({ theme }) => theme.font.weight.bold};\n`\n\nconst StyledEnergyEfficiencySlot = styled.div`\n  margin-top: ${({ theme }) => theme.spacing.base.xs};\n`\n\nexport const AssetHeader: React.FC<AssetTitleProps> = ({\n  headerFontSize,\n  headerFontWeight = 'semibold',\n  href,\n  target,\n  loading = false,\n  provider,\n  showProvider = true,\n  description,\n  sublinePrice,\n  title,\n  energyEfficiencySlot,\n  onClick,\n}) => {\n  if (loading) {\n    return (\n      <StyledAssetHeaderWrapper>\n        <SkeletonInlineItem text=\"Manufacturer\" fontSize=\"xs\" />\n        &nbsp;\n        <SkeletonInlineItem text=\"Asset Line Item Headline\" fontSize=\"xs\" />\n        {showProvider && <SkeletonInlineItem text=\"Subline\" fontSize=\"xxs\" newLine />}\n      </StyledAssetHeaderWrapper>\n    )\n  }\n\n  const cleanTitle = provider ? title.replace(provider, '') : title\n  const { breakpoint: currentBreakpoint } = useWindowDimensions()\n  const isMobile = currentBreakpoint < breakpoints.sm\n\n  const Heading: React.FC = () => (\n    <StyledHeading\n      color=\"black\"\n      fontSize={headerFontSize || 'lg'}\n      limitLines={3}\n      lineHeight={isMobile ? 'sm' : 'md'}\n      scale=\"level-1\"\n      spacing=\"half\"\n      tag=\"div\">\n      <CopyText fontSize={headerFontSize || 'lg'} tag=\"div\" color=\"grey6\" weight={headerFontWeight}>\n        {cleanTitle}\n      </CopyText>\n    </StyledHeading>\n  )\n\n  return (\n    <>\n      {showProvider && (\n        <FlexBox flexWrap=\"nowrap\" justifyContent=\"space-between\">\n          {description && (\n            <FlexItem>\n              <InfoText\n                data-test=\"learning-asset-provider\"\n                fontSize=\"xs\"\n                toUpperCase\n                margin=\"0 0 xs\"\n                tag=\"p\"\n                color=\"grey5\">\n                {description}\n              </InfoText>\n            </FlexItem>\n          )}\n        </FlexBox>\n      )}\n      {href ? (\n        <StyledLink\n          inline={false}\n          underline={false}\n          {...(target ? { href, target, onClick } : { to: href, onClick })}>\n          <Heading />\n        </StyledLink>\n      ) : (\n        <Heading />\n      )}\n    </>\n  )\n}\n"],"names":["StyledAssetHeaderWrapper","styled","div","theme","spacing","base","sm","xs","StyledHeading","Heading","StyledLink","Link","span","font","weight","bold","AssetHeader","headerFontSize","headerFontWeight","href","target","loading","provider","showProvider","description","sublinePrice","title","energyEfficiencySlot","onClick","React","SkeletonInlineItem","text","fontSize","newLine","cleanTitle","replace","isMobile","useWindowDimensions","breakpoint","breakpoints","color","limitLines","lineHeight","scale","tag","CopyText","FlexBox","flexWrap","justifyContent","FlexItem","InfoText","toUpperCase","margin","inline","underline","to"],"mappings":"6uBA0BA,IAAMA,EAA2BC,EAAOC,gGAAPD,0CACd,qBAAGE,MAAkBC,QAAQC,KAAKC,MACnC,qBAAGH,MAAkBC,QAAQC,KAAKE,MAG9CC,EAAgBP,EAAOQ,oFAAPR,iBAIhBS,EAAaT,EAAOU,iFAAPV,sBAIQA,EAAOW,2FAAPX,uBACV,qBAAGE,MAAkBU,KAAKC,OAAOC,QAGfd,EAAOC,kGAAPD,sBACnB,qBAAGE,MAAkBC,QAAQC,KAAKE,UAGrCS,EAAyC,gBACpDC,IAAAA,mBACAC,iBAAAA,aAAmB,aACnBC,IAAAA,KACAC,IAAAA,WACAC,QAAAA,gBACAC,IAAAA,aACAC,aAAAA,gBACAC,IAAAA,cACAC,iBACAC,IAAAA,QACAC,yBACAC,IAAAA,WAEIP,SAEAQ,gBAAC7B,OACC6B,gBAACC,GAAmBC,KAAK,eAAeC,SAAS,WAEjDH,gBAACC,GAAmBC,KAAK,2BAA2BC,SAAS,OAC5DT,GAAgBM,gBAACC,GAAmBC,KAAK,UAAUC,SAAS,MAAMC,kBAKnEC,EAAaZ,EAAWI,EAAMS,QAAQb,EAAU,IAAMI,EAEtDU,EADoCC,IAAlCC,WAC6BC,EAAYjC,GAE3CG,EAAoB,kBACxBoB,gBAACrB,GACCgC,MAAM,QACNR,SAAUf,GAAkB,KAC5BwB,WAAY,EACZC,WAAYN,EAAW,KAAO,KAC9BO,MAAM,UACNvC,QAAQ,OACRwC,IAAI,OACJf,gBAACgB,GAASb,SAAUf,GAAkB,KAAM2B,IAAI,MAAMJ,MAAM,QAAQ1B,OAAQI,GACzEgB,YAMLL,gCACGN,GACCM,gBAACiB,GAAQC,SAAS,SAASC,eAAe,iBACvCxB,GACCK,gBAACoB,OACCpB,gBAACqB,eACW,0BACVlB,SAAS,KACTmB,eACAC,OAAO,SACPR,IAAI,IACJJ,MAAM,SACLhB,KAMVL,EACCU,gBAACnB,KACC2C,QAAQ,EACRC,WAAW,GACNlC,EAAS,CAAED,KAAAA,EAAMC,OAAAA,EAAQQ,QAAAA,GAAY,CAAE2B,GAAIpC,EAAMS,QAAAA,IACtDC,gBAACpB,SAGHoB,gBAACpB"}