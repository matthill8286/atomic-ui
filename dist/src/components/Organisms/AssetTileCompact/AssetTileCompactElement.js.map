{"version":3,"file":"AssetTileCompactElement.js","sources":["../../../../../src/components/Organisms/AssetTileCompact/AssetTileCompactElement.tsx"],"sourcesContent":["import React from 'react'\nimport { SkeletonBlockItem, SkeletonInlineItem } from '@/components/Atoms/Skeleton'\nimport { AssetTileCompactChildProps } from './AssetTileCompact.interface'\nimport {\n  StyledContentColumn,\n  StyledIconsWrapper,\n  StyledAssetTileCompactElementWrapper,\n  StyledRightIconsInfoText,\n  StyledRightIconsWrapper,\n  StyledInformationTypo,\n} from './AssetTileCompact.styled'\nimport { CopyText, Typo } from '@/components/Atoms/Typography'\nimport { FlexBox, useWindowDimensions } from '@/components/Helper'\nimport { StyledAssetInformation } from '@/components/Organisms/AssetTileCompact/elements'\nimport { breakpoints } from '@/styles'\n\nexport const AssetTileCompactElement: React.FC<AssetTileCompactChildProps> = ({\n  children,\n  headerFontSize,\n  loading = false,\n  provider,\n  iconsComponent,\n  showInteractions = true,\n  type,\n  competency,\n  label,\n  description,\n  title,\n  mobile,\n  ...props\n}) => {\n  const { breakpoint: currentBreakpoint } = useWindowDimensions()\n  const isMobile = currentBreakpoint < breakpoints.md\n\n  const renderRightIcons = () => {\n    if (!iconsComponent) {\n      return null\n    }\n\n    return (\n      <>\n        {loading ? (\n          <>\n            <SkeletonInlineItem text=\"interaction icons\" />\n            <SkeletonBlockItem width=\"300px\" height=\"10px\" />\n          </>\n        ) : (\n          <StyledRightIconsInfoText fontSize=\"xs\" weight=\"bold\">\n            <StyledIconsWrapper>{iconsComponent}</StyledIconsWrapper>\n          </StyledRightIconsInfoText>\n        )}\n      </>\n    )\n  }\n\n  const assetInformation = !loading ? (\n    <>\n      <CopyText\n        limitLines={2}\n        tag=\"div\"\n        display=\"flex\"\n        color={'grey6'}\n        fontSize=\"md\"\n        margin=\"sm 0 0\">\n        {title}\n      </CopyText>\n      {!isMobile ? (\n        <FlexBox display=\"inline-flex\">\n          {provider ? (\n            <StyledInformationTypo\n              display=\"inline-flex\"\n              tag=\"div\"\n              color={'grey4'}\n              fontSize=\"xs\"\n              padding=\"0 sm 0 0\">\n              {provider}\n            </StyledInformationTypo>\n          ) : null}\n          {type ? (\n            <StyledInformationTypo\n              display=\"inline-flex\"\n              tag=\"div\"\n              color={'grey4'}\n              fontSize=\"xs\"\n              padding=\"0 sm\">\n              {type}\n            </StyledInformationTypo>\n          ) : null}\n          {competency ? (\n            <Typo display=\"inline-flex\" tag=\"div\" color={'grey4'} fontSize=\"xs\" padding=\"0 sm\">\n              {competency}\n            </Typo>\n          ) : null}\n        </FlexBox>\n      ) : null}\n    </>\n  ) : (\n    <>\n      <SkeletonInlineItem text=\"asset title\" margin=\"sm 0\" />\n      <SkeletonInlineItem text=\"asset meta info\" margin=\"0\" />\n    </>\n  )\n\n  return (\n    <StyledAssetTileCompactElementWrapper {...props}>\n      <StyledContentColumn>\n        <StyledAssetInformation>{assetInformation}</StyledAssetInformation>\n      </StyledContentColumn>\n      <StyledRightIconsWrapper>\n        {showInteractions && !loading && (\n          <StyledIconsWrapper>{renderRightIcons()}</StyledIconsWrapper>\n        )}\n        {children}\n      </StyledRightIconsWrapper>\n    </StyledAssetTileCompactElementWrapper>\n  )\n}\n"],"names":["AssetTileCompactElement","children","headerFontSize","loading","provider","iconsComponent","showInteractions","type","competency","label","description","title","mobile","props","isMobile","useWindowDimensions","breakpoint","breakpoints","md","assetInformation","React","SkeletonInlineItem","text","margin","CopyText","limitLines","tag","display","color","fontSize","FlexBox","StyledInformationTypo","padding","Typo","StyledAssetTileCompactElementWrapper","StyledContentColumn","StyledAssetInformation","StyledRightIconsWrapper","StyledIconsWrapper","SkeletonBlockItem","width","height","StyledRightIconsInfoText","weight"],"mappings":"g5BAgBaA,EAAgE,gBAC3EC,IAAAA,WACAC,uBACAC,QAAAA,gBACAC,IAAAA,SACAC,IAAAA,mBACAC,iBAAAA,gBACAC,IAAAA,KACAC,IAAAA,aACAC,QACAC,gBACAC,IAAAA,QACAC,WACGC,yJAGGC,EADoCC,IAAlCC,WAC6BC,EAAYC,GAuB3CC,EAAoBhB,EA0CxBiB,gCACEA,gBAACC,GAAmBC,KAAK,cAAcC,OAAO,SAC9CH,gBAACC,GAAmBC,KAAK,kBAAkBC,OAAO,OA3CpDH,gCACEA,gBAACI,GACCC,WAAY,EACZC,IAAI,MACJC,QAAQ,OACRC,MAAO,QACPC,SAAS,KACTN,OAAO,UACNZ,GAEDG,EA4BE,KA3BFM,gBAACU,GAAQH,QAAQ,eACdvB,EACCgB,gBAACW,GACCJ,QAAQ,cACRD,IAAI,MACJE,MAAO,QACPC,SAAS,KACTG,QAAQ,YACP5B,GAED,KACHG,EACCa,gBAACW,GACCJ,QAAQ,cACRD,IAAI,MACJE,MAAO,QACPC,SAAS,KACTG,QAAQ,QACPzB,GAED,KACHC,EACCY,gBAACa,GAAKN,QAAQ,cAAcD,IAAI,MAAME,MAAO,QAASC,SAAS,KAAKG,QAAQ,QACzExB,GAED,cAYVY,gBAACc,EAAyCrB,EACxCO,gBAACe,OACCf,gBAACgB,OAAwBjB,IAE3BC,gBAACiB,OACE/B,IAAqBH,GACpBiB,gBAACkB,OA3EFjC,EAKHe,gCACGjB,EACCiB,gCACEA,gBAACC,GAAmBC,KAAK,sBACzBF,gBAACmB,GAAkBC,MAAM,QAAQC,OAAO,UAG1CrB,gBAACsB,GAAyBb,SAAS,KAAKc,OAAO,QAC7CvB,gBAACkB,OAAoBjC,KAZpB,MA4EJJ"}