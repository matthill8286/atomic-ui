{"version":3,"file":"ImageAndText.js","sources":["../../../../../src/components/Organisms/ImageAndText/ImageAndText.tsx"],"sourcesContent":["import React from 'react'\nimport { LazyLoadImage } from '@/components/Molecules/LazyLoadImage'\nimport { media, spacing } from '@/styles'\nimport { styled } from '@/styles/styled'\n\ninterface ItemProps {\n  order: number\n}\n\nexport const StyledText = styled.div`\n  flex-basis: 100%;\n  padding: 0 ${spacing.base.sm};\n  margin-top: ${spacing.base.xs};\n  h3 {\n    margin: 0;\n  }\n  ${media.md} {\n    flex-basis: calc(50% - 2 * ${spacing.base.sm});\n    padding: 0 ${spacing.base.sm};\n    margin-top: 0;\n  }\n`\n\nexport const StyledImage = styled.div<ItemProps>`\n  flex-basis: 100%;\n  order: unset;\n  padding: 0 ${spacing.base.sm};\n  ${media.md} {\n    flex-basis: calc(50% - 2 * ${spacing.base.sm});\n    order: ${({ order }) => order};\n    justify-content: center;\n    display: flex;\n  }\n`\n\nexport const StyledRow = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  margin: ${spacing.base.sm} -${spacing.base.sm};\n  align-items: center;\n  justify-content: space-between;\n`\n\nexport type ImageAlignment = 'right' | 'left'\n\nexport interface Image {\n  alt: string | null\n  url: string\n  mobile?: {\n    url: string\n  }\n  tablet?: {\n    url: string\n  }\n}\n\nexport interface ImageAndTextProps {\n  image: Image\n  imageAlignment: ImageAlignment\n  withLQIP?: boolean\n  contentful?: boolean\n}\n\nfunction getPrismicLqipParams(imageUrl, contentful) {\n  const hasQueryParams = imageUrl?.indexOf('?') !== -1\n\n  return imageUrl\n    ? contentful\n      ? `${imageUrl}${hasQueryParams ? '&' : '?'}q=1`\n      : `${imageUrl}${hasQueryParams ? '&' : '?'}blur=400&px=8`\n    : undefined\n}\n\nexport const ImageAndText: React.FC<ImageAndTextProps> = ({\n  children,\n  image,\n  imageAlignment,\n  withLQIP = false,\n  contentful = false,\n  ...props\n}) => (\n  <StyledRow>\n    <StyledImage order={imageAlignment === 'right' ? 1 : -1}>\n      <LazyLoadImage\n        {...props}\n        withLQIP={withLQIP}\n        src={image.url}\n        lowResSrc={getPrismicLqipParams(image.url, contentful)}\n        srcSm={image?.mobile?.url}\n        lowResSrcSm={getPrismicLqipParams(image?.mobile?.url, contentful)}\n        srcMd={image?.tablet?.url}\n        lowResSrcMd={getPrismicLqipParams(image?.tablet?.url, contentful)}\n        alt={image.alt}\n        rounded\n      />\n    </StyledImage>\n    <StyledText>{children}</StyledText>\n  </StyledRow>\n)\n"],"names":["StyledText","styled","div","spacing","base","sm","xs","media","md","StyledImage","order","StyledRow","getPrismicLqipParams","imageUrl","contentful","hasQueryParams","indexOf","undefined","ImageAndText","children","image","imageAlignment","withLQIP","props","React","LazyLoadImage","src","url","lowResSrc","srcSm","mobile","_image$mobile","lowResSrcSm","_image$mobile2","srcMd","tablet","_image$tablet","lowResSrcMd","_image$tablet2","alt","rounded"],"mappings":"iXASaA,EAAaC,EAAOC,+EAAPD,+HAEXE,EAAQC,KAAKC,GACZF,EAAQC,KAAKE,GAIzBC,EAAMC,GACuBL,EAAQC,KAAKC,GAC7BF,EAAQC,KAAKC,IAKjBI,EAAcR,EAAOC,gFAAPD,kIAGZE,EAAQC,KAAKC,GACxBE,EAAMC,GACuBL,EAAQC,KAAKC,IACjC,qBAAGK,SAMHC,EAAYV,EAAOC,8EAAPD,mGAGbE,EAAQC,KAAKC,GAAOF,EAAQC,KAAKC,IAyB7C,SAASO,EAAqBC,EAAUC,OAChCC,GAA6C,KAA5BF,MAAAA,SAAAA,EAAUG,QAAQ,aAElCH,EACHC,YACKD,UAAWE,EAAiB,IAAM,qBAClCF,UAAWE,EAAiB,IAAM,0BACvCE,MAGOC,EAA4C,wBACvDC,IAAAA,SACAC,IAAAA,MACAC,IAAAA,mBACAC,SAAAA,oBACAR,WAAAA,gBACGS,4EAEHC,gBAACb,OACCa,gBAACf,GAAYC,MAA0B,UAAnBW,EAA6B,GAAK,GACpDG,gBAACC,OACKF,GACJD,SAAUA,EACVI,IAAKN,EAAMO,IACXC,UAAWhB,EAAqBQ,EAAMO,IAAKb,GAC3Ce,MAAOT,MAAAA,aAAAA,EAAOU,2BAAPC,EAAeJ,IACtBK,YAAapB,EAAqBQ,MAAAA,aAAAA,EAAOU,2BAAPG,EAAeN,IAAKb,GACtDoB,MAAOd,MAAAA,aAAAA,EAAOe,2BAAPC,EAAeT,IACtBU,YAAazB,EAAqBQ,MAAAA,aAAAA,EAAOe,2BAAPG,EAAeX,IAAKb,GACtDyB,IAAKnB,EAAMmB,IACXC,eAGJhB,gBAACxB,OAAYmB"}