{"version":3,"file":"AppHeader.js","sources":["../../../../../src/components/Organisms/AppHeader/AppHeader.tsx"],"sourcesContent":["import isEmpty from 'lodash/isEmpty'\nimport React, { useCallback } from 'react'\nimport { Button } from '@/components/Atoms/Button'\nimport { Divider } from '@/components/Atoms/Divider'\nimport { Picture } from '@/components/Atoms/Picture'\nimport { GroupedActionLinks, GroupedActionLinksProps } from '@/components/Molecules/ActionLink'\nimport { LanguageMenu, LanguageMenuOption } from '@/components/Molecules/LanguageMenu'\nimport {\n  NavigationButtonType,\n  NavigationMenu,\n  NavigationMenuListProps,\n} from '@/components/Molecules/NavigationMenu'\nimport {\n  StyledActionItems,\n  StyledHeaderWrapper,\n  StyledItemWrapper,\n  StyledLogo,\n  StyledSection,\n} from './AppHeader.styled'\nimport { useTheme } from '@/utils/helper'\nimport { Image } from '@/components/Organisms/ImageAndText'\n\nexport type HeaderContent = {\n  id: string | number\n  links?: GroupedActionLinksProps['links']\n  searchEnabled?: boolean\n  searchLabel?: string\n  languageMenuEnabled?: boolean\n  hideMenu?: boolean\n  hideLinks?: boolean\n  filter?: {\n    enabled?: boolean\n    placeholder?: string\n  }\n  menus?: {\n    links: NavigationMenuListProps['navActionList']\n  }\n}\n\nexport interface AppHeaderProps {\n  headerContent: HeaderContent\n  searchQuery?: string\n  languages?: LanguageMenuOption[]\n  button?: NavigationButtonType | undefined\n  renderSearchBar?: JSX.Element | null\n  logoRef: Image\n  logoUrl?: string\n  langIndex?: number\n  onButtonClick?: (event?: React.MouseEvent) => void\n  onLanguageChoice?: (id?: string | number) => void\n  setFilter?: (event?: React.MouseEvent) => void\n  clearFilter?: (event?: React.MouseEvent) => void\n  onLogoClick?: (event?: React.MouseEvent) => void\n  filter?: JSX.Element\n}\n\nexport const AppHeaderComponent = React.memo(\n  ({\n    headerContent,\n    languages,\n    button,\n    onButtonClick,\n    renderSearchBar,\n    onLanguageChoice,\n    logoUrl,\n    setFilter,\n    clearFilter,\n    onLogoClick,\n    langIndex,\n    filter,\n  }: AppHeaderProps) => {\n    const internalLogoClick = useCallback(() => onLogoClick?.(), [])\n    const internalLanguageSelection = useCallback(id => onLanguageChoice?.(id), [])\n    const { header } = useTheme()\n\n    return (\n      <StyledSection color=\"white\">\n        <Divider color=\"primary\" height=\"xs\" />\n        <StyledHeaderWrapper padding={`${header.padding}`}>\n          {logoUrl && (\n            <StyledLogo>\n              <Picture\n                alt=\"thumbnail\"\n                onClick={() => internalLogoClick()}\n                src={logoUrl}\n                width=\"107px\"\n                height=\"64px\"\n              />\n            </StyledLogo>\n          )}\n          <StyledActionItems>\n            {headerContent?.links && !isEmpty(headerContent?.links) && (\n              <StyledItemWrapper>\n                <GroupedActionLinks\n                  color=\"grey4\"\n                  padding=\"0 sm\"\n                  fontSize=\"sm\"\n                  links={[...headerContent.links]}\n                />\n              </StyledItemWrapper>\n            )}\n            {headerContent?.filter &&\n              !isEmpty(headerContent?.filter) &&\n              headerContent?.filter.enabled && <StyledItemWrapper>{filter}</StyledItemWrapper>}\n            {headerContent?.searchEnabled && (\n              <StyledItemWrapper>{renderSearchBar}</StyledItemWrapper>\n            )}\n            {headerContent.languageMenuEnabled &&\n              headerContent?.menus &&\n              !isEmpty(headerContent?.menus) && (\n                <StyledItemWrapper>\n                  <NavigationMenu\n                    button={button}\n                    navActionList={[...headerContent?.menus[0].links]}\n                  />\n                </StyledItemWrapper>\n              )}\n            {Array.isArray(languages) && languages.length && (\n              <StyledItemWrapper>\n                <LanguageMenu\n                  extendedLanguageHandler={item => internalLanguageSelection(item?.id)}\n                  languages={languages}\n                  setupCurrentIndex={langIndex}\n                />\n              </StyledItemWrapper>\n            )}\n            {button && button.href && (\n              <StyledItemWrapper>\n                <Button\n                  actionType=\"ghost\"\n                  color=\"grey5\"\n                  size=\"sm\"\n                  onClick={onButtonClick}\n                  href={button.href}>\n                  {button.actionLabel}\n                </Button>\n              </StyledItemWrapper>\n            )}\n          </StyledActionItems>\n        </StyledHeaderWrapper>\n      </StyledSection>\n    )\n  }\n)\n"],"names":["AppHeaderComponent","React","memo","headerContent","languages","button","onButtonClick","renderSearchBar","onLanguageChoice","logoUrl","setFilter","clearFilter","onLogoClick","langIndex","filter","internalLogoClick","useCallback","internalLanguageSelection","id","header","useTheme","StyledSection","color","Divider","height","StyledHeaderWrapper","padding","StyledLogo","Picture","alt","onClick","src","width","StyledActionItems","links","isEmpty","StyledItemWrapper","GroupedActionLinks","fontSize","enabled","searchEnabled","languageMenuEnabled","menus","NavigationMenu","navActionList","Array","isArray","length","LanguageMenu","extendedLanguageHandler","item","setupCurrentIndex","href","Button","actionType","size","actionLabel"],"mappings":"2yBAwDaA,EAAqBC,EAAMC,MACtC,gBACEC,IAAAA,cACAC,IAAAA,UACAC,IAAAA,OACAC,IAAAA,cACAC,IAAAA,gBACAC,IAAAA,iBACAC,IAAAA,UACAC,YACAC,gBACAC,IAAAA,YACAC,IAAAA,UACAC,IAAAA,OAEMC,EAAoBC,GAAY,kBAAMJ,MAAAA,SAAAA,MAAiB,IACvDK,EAA4BD,GAAY,SAAAE,UAAMV,MAAAA,SAAAA,EAAmBU,KAAK,IACpEC,EAAWC,IAAXD,cAGNlB,gBAACoB,GAAcC,MAAM,SACnBrB,gBAACsB,GAAQD,MAAM,UAAUE,OAAO,OAChCvB,gBAACwB,GAAoBC,kBAAYP,EAAOO,UACrCjB,GACCR,gBAAC0B,OACC1B,gBAAC2B,GACCC,IAAI,YACJC,QAAS,kBAAMf,KACfgB,IAAKtB,EACLuB,MAAM,QACNR,OAAO,UAIbvB,gBAACgC,QACE9B,MAAAA,SAAAA,EAAe+B,SAAUC,EAAQhC,MAAAA,SAAAA,EAAe+B,QAC/CjC,gBAACmC,OACCnC,gBAACoC,GACCf,MAAM,QACNI,QAAQ,OACRY,SAAS,KACTJ,QAAW/B,EAAc+B,WAI9B/B,MAAAA,SAAAA,EAAeW,UACbqB,EAAQhC,MAAAA,SAAAA,EAAeW,UACxBX,MAAAA,SAAAA,EAAeW,OAAOyB,UAAWtC,gBAACmC,OAAmBtB,IACtDX,MAAAA,SAAAA,EAAeqC,gBACdvC,gBAACmC,OAAmB7B,GAErBJ,EAAcsC,sBACbtC,MAAAA,SAAAA,EAAeuC,SACdP,EAAQhC,MAAAA,SAAAA,EAAeuC,QACtBzC,gBAACmC,OACCnC,gBAAC0C,GACCtC,OAAQA,EACRuC,gBAAmBzC,MAAAA,SAAAA,EAAeuC,MAAM,GAAGR,UAIlDW,MAAMC,QAAQ1C,IAAcA,EAAU2C,QACrC9C,gBAACmC,OACCnC,gBAAC+C,GACCC,wBAAyB,SAAAC,UAAQjC,EAA0BiC,MAAAA,SAAAA,EAAMhC,KACjEd,UAAWA,EACX+C,kBAAmBtC,KAIxBR,GAAUA,EAAO+C,MAChBnD,gBAACmC,OACCnC,gBAACoD,GACCC,WAAW,QACXhC,MAAM,QACNiC,KAAK,KACLzB,QAASxB,EACT8C,KAAM/C,EAAO+C,MACZ/C,EAAOmD"}