{"version":3,"file":"Cell.styled.js","sources":["../../../../../src/components/Helper/Grid/Cell.styled.tsx"],"sourcesContent":["import { media } from '@/styles/media'\nimport { css, styled } from '@/styles/styled'\nimport { gutterWidth } from './constants'\nimport { StyledCellProps, TwelveColumn } from './Grid.interface'\n\nconst getXsCols = ({ columns, colsXs }: Pick<StyledCellProps, 'columns' | 'colsXs'>) => {\n  const cols = colsXs !== undefined ? colsXs : columns\n  if (cols !== undefined) {\n    switch (cols) {\n      case 0:\n        return `\n          display: none;\n        `\n      case 1:\n        return css`\n          width: calc(25% - ${gutterWidth.xs}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 1;\n          }\n        `\n      case 2:\n        return css`\n          width: calc(50% - ${gutterWidth.xs}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 2;\n          }\n        `\n      case 3:\n        return css`\n          width: calc(75% - ${gutterWidth.xs}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 3;\n          }\n        `\n      default:\n        return css`\n          width: calc(100% - ${gutterWidth.xs}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 4;\n          }\n        `\n    }\n  }\n}\n\nconst getSmMdCols = (md: boolean) => ({\n  columns,\n  colsSm,\n  colsMd,\n}: Pick<StyledCellProps, 'columns' | 'colsSm' | 'colsMd'>) => {\n  let cols: TwelveColumn | undefined\n  if (md) {\n    cols = colsMd !== undefined ? colsMd : columns\n  } else {\n    cols = colsSm !== undefined ? colsSm : columns\n  }\n  const gutter = md ? gutterWidth.md : gutterWidth.sm\n  if (cols !== undefined) {\n    switch (cols) {\n      case 0:\n        return `\n          display: none;\n        `\n      case 1:\n        return css`\n          width: calc(12.5% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 1;\n          }\n        `\n      case 2:\n        return css`\n          width: calc(25% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 2;\n          }\n        `\n      case 3:\n        return css`\n          width: calc(37.5% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 3;\n          }\n        `\n      case 4:\n        return css`\n          width: calc(50% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 4;\n          }\n        `\n      case 5:\n        return css`\n          width: calc(62.5% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 5;\n          }\n        `\n      case 6:\n        return css`\n          width: calc(75% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 6;\n          }\n        `\n      case 7:\n        return css`\n          width: calc(87.5% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 7;\n          }\n        `\n      default:\n        return css`\n          width: calc(100% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 8;\n          }\n        `\n    }\n  }\n}\n\nconst getLgXlCols = (xl: boolean) => ({\n  columns,\n  colsLg,\n  colsXl,\n}: Pick<StyledCellProps, 'columns' | 'colsLg' | 'colsXl'>) => {\n  let cols: TwelveColumn | undefined\n  if (xl) {\n    cols = colsXl !== undefined ? colsXl : columns\n  } else {\n    cols = colsLg !== undefined ? colsLg : columns\n  }\n  const gutter = xl ? gutterWidth.xl : gutterWidth.lg\n  if (cols !== undefined) {\n    switch (cols) {\n      case 0:\n        return `\n          display: none;\n        `\n      case 1:\n        return css`\n          width: calc(8.33333% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 1;\n          }\n        `\n      case 2:\n        return css`\n          width: calc(16.66667% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 2;\n          }\n        `\n      case 3:\n        return css`\n          width: calc(25% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 3;\n          }\n        `\n      case 4:\n        return css`\n          width: calc(33.33333% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 4;\n          }\n        `\n      case 5:\n        return css`\n          width: calc(41.66667% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 5;\n          }\n        `\n      case 6:\n        return css`\n          width: calc(50% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 6;\n          }\n        `\n      case 7:\n        return css`\n          width: calc(58.33333% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 7;\n          }\n        `\n      case 8:\n        return css`\n          width: calc(66.66667% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 8;\n          }\n        `\n      case 9:\n        return css`\n          width: calc(75% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 9;\n          }\n        `\n      case 10:\n        return css`\n          width: calc(83.33333% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 10;\n          }\n        `\n      case 11:\n        return css`\n          width: calc(91.66667% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 11;\n          }\n        `\n      default:\n        return css`\n          width: calc(100% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 12;\n          }\n        `\n    }\n  }\n}\n\nexport const StyledCell = styled.div<StyledCellProps>`\n  flex-grow: 1;\n  box-sizing: border-box;\n  margin: calc(${gutterWidth.xs}px / 2);\n  width: calc(100% - ${gutterWidth.xs}px);\n\n  @supports (display: grid) {\n    margin: 0;\n    width: auto;\n    grid-column-end: span 4;\n  }\n\n  ${getXsCols}\n\n\n  ${media.sm} {\n    display: ${({ alignHeight }) => (alignHeight ? `flex` : `block`)};\n    margin: calc(${gutterWidth.sm}px / 2);\n    width: calc(50% - ${gutterWidth.sm}px);\n\n    @supports (display: grid) {\n      margin: 0;\n      width: auto;\n      grid-column-end: span 4;\n    }\n\n    ${getSmMdCols(false)}\n  }\n\n  ${media.md} {\n    display: ${({ alignHeight }) => (alignHeight ? `flex` : `block`)};\n    margin: calc(${gutterWidth.md}px / 2);\n    width: calc(50% - ${gutterWidth.md}px);\n\n    @supports (display: grid) {\n      margin: 0;\n      width: auto;\n      grid-column-end: span 4;\n    }\n\n    ${getSmMdCols(true)}\n  }\n\n  ${media.lg} {\n    display: ${({ alignHeight }) => (alignHeight ? `flex` : `block`)};\n    margin: calc(${gutterWidth.lg}px / 2);\n    width: calc(33.33333% - ${gutterWidth.lg}px);\n\n    @supports (display: grid) {\n      margin: 0;\n      width: auto;\n      grid-column-end: span 4;\n    }\n\n    ${getLgXlCols(false)}\n  }\n\n  ${media.xl} {\n    display: ${({ alignHeight }) => (alignHeight ? `flex` : `block`)};\n    margin: calc(${gutterWidth.xl}px / 2);\n    width: calc(33.33333% - ${gutterWidth.xl}px);\n\n    @supports (display: grid) {\n      margin: 0;\n      width: auto;\n      grid-column-end: span 4;\n    }\n\n    ${getLgXlCols(true)}\n  }\n  \n  ${media.ie11} {\n    ${({ noMargin }) =>\n      noMargin &&\n      `\n        margin: 0;\n    `}\n  }\n \n  \n  ${({ order }) =>\n    order &&\n    css`\n      order: ${order};\n    `}\n\n  ${({ align }) => {\n    if (align) {\n      switch (align) {\n        case 'bottom':\n          return `\n            align-self: flex-end;\n\n            @supports (display: grid) {\n              align-self: end;\n            }\n            `\n        case 'middle':\n          return `\n            align-self: center;\n          `\n        case 'top':\n          return `\n          align-self: flex-start;\n\n            @supports (display: grid) {\n              align-self: start;\n            }\n          `\n        default:\n          return ''\n      }\n    }\n  }}\n\n  \n  ${({ justify }) => {\n    if (justify) {\n      switch (justify) {\n        case 'flex-end':\n          return `\n            justify-self: flex-end;\n\n            @supports (display: grid) {\n              justify-self: end;\n            }\n            `\n        case 'stretch':\n          return `\n            justify-self: stretch;\n          `\n        case 'center':\n          return `\n            justify-self: center;\n          `\n        case 'flex-start':\n          return `\n          justify-self: flex-start;\n\n            @supports (display: grid) {\n              justify-self: start;\n            }\n          `\n        default:\n          return ''\n      }\n    }\n  }}\n\n  ${({ alignHeight }) =>\n    alignHeight &&\n    `display: flex;\n      > div {\n        flex: 1\n      }`}\n\n`\n"],"names":["getSmMdCols","md","cols","columns","colsSm","colsMd","undefined","gutter","gutterWidth","sm","css","getLgXlCols","xl","colsLg","colsXl","lg","StyledCell","styled","div","xs","colsXs","media","alignHeight","ie11","noMargin","order","align","justify"],"mappings":"0JAKA,IAgDMA,EAAc,SAACC,UAAgB,gBAK/BC,EAJJC,IAAAA,QACAC,IAAAA,OACAC,IAAAA,OAIEH,EADED,OACgBK,IAAXD,EAAuBA,EAASF,OAErBG,IAAXF,EAAuBA,EAASD,MAEnCI,EAASN,EAAKO,EAAYP,GAAKO,EAAYC,WACpCH,IAATJ,SACMA,QACD,oDAIA,SACIQ,6FACiBH,QAOrB,SACIG,2FACeH,QAOnB,SACIG,6FACiBH,QAOrB,SACIG,2FACeH,QAOnB,SACIG,6FACiBH,QAOrB,SACIG,2FACeH,QAOnB,SACIG,6FACiBH,kBAQjBG,4FACgBH,MAWzBI,EAAc,SAACC,UAAgB,gBAK/BV,EAJJC,IAAAA,QACAU,IAAAA,OACAC,IAAAA,OAIEZ,EADEU,OACgBN,IAAXQ,EAAuBA,EAASX,OAErBG,IAAXO,EAAuBA,EAASV,MAEnCI,EAASK,EAAKJ,EAAYI,GAAKJ,EAAYO,WACpCT,IAATJ,SACMA,QACD,oDAIA,SACIQ,gGACoBH,QAOxB,SACIG,iGACqBH,QAOzB,SACIG,2FACeH,QAOnB,SACIG,iGACqBH,QAOzB,SACIG,iGACqBH,QAOzB,SACIG,2FACeH,QAOnB,SACIG,iGACqBH,QAOzB,SACIG,iGACqBH,QAOzB,SACIG,2FACeH,QAOnB,UACIG,kGACqBH,QAOzB,UACIG,kGACqBH,kBAQrBG,6FACgBH,MAWlBS,EAAaC,EAAOC,6EAAPD,ouBAGTT,EAAYW,GACNX,EAAYW,IApRjB,gBAAGhB,IAAAA,QAASiB,IAAAA,OACtBlB,OAAkBI,IAAXc,EAAuBA,EAASjB,UAChCG,IAATJ,SACMA,QACD,oDAIA,SACIQ,2FACeF,EAAYW,SAO/B,SACIT,2FACeF,EAAYW,SAO/B,SACIT,2FACeF,EAAYW,mBAQ3BT,4FACgBF,EAAYW,OA0PvCE,EAAMZ,IACK,qBAAGa,6BACCd,EAAYC,GACPD,EAAYC,GAQ9BT,GAAY,GAGdqB,EAAMpB,IACK,qBAAGqB,6BACCd,EAAYP,GACPO,EAAYP,GAQ9BD,GAAY,GAGdqB,EAAMN,IACK,qBAAGO,6BACCd,EAAYO,GACDP,EAAYO,GAQpCJ,GAAY,GAGdU,EAAMT,IACK,qBAAGU,6BACCd,EAAYI,GACDJ,EAAYI,GAQpCD,GAAY,GAGdU,EAAME,MACJ,qBAAGC,0CAQL,gBAAGC,IAAAA,aACHA,GACAf,iBACWe,MAGX,gBAAGC,IAAAA,SACCA,SACMA,OACD,iKAQA,mEAIA,wKASI,OAMb,gBAAGC,IAAAA,WACCA,SACMA,OACD,uKAQA,uEAIA,qEAIA,mLASI,OAKb,qBAAGL"}