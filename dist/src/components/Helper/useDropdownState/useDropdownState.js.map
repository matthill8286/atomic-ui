{"version":3,"file":"useDropdownState.js","sources":["../../../../../src/components/Helper/useDropdownState/useDropdownState.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react'\n\n/**\n * Provides the current state of a dropdown, a function to toggle it and a\n * reference container.\n *\n * Usage: call the hook in your FunctionComponent and provide an element type\n * as generic argument. E.g: useDropdownState<HTMLDivElement>()\n * Then attach the ref container to the DOM element of your dropdown-component.\n * E.g.: <div ref={element}>...\n */\n\nexport const useDropdownState = <T extends HTMLElement>(initial = false) => {\n  const [showDropdown, setShowDropdown] = useState(initial)\n  const toggleDropdown = () => setShowDropdown(!showDropdown)\n\n  const element = useRef<T>(null)\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      if (!showDropdown) {\n        return\n      }\n      // If click is inside the ref element, do nothing\n      if (\n        element.current &&\n        event.target instanceof Node &&\n        element.current.contains(event.target)\n      ) {\n        return\n      }\n      // Else, close dropdown\n      setShowDropdown(false)\n    }\n    // Use capture phase. Reason: There can be cases (e.g. Header search box) where\n    // the click target (clear button) gets removed from the DOM before this handler\n    // here is called which would wrongly close the dropdown.\n    document.addEventListener('click', handleClick, true)\n    return () => document.removeEventListener('click', handleClick)\n  }, [element.current, showDropdown, setShowDropdown])\n\n  return {\n    showDropdown,\n    toggleDropdown,\n    element,\n  }\n}\n"],"names":["useDropdownState","initial","useState","showDropdown","setShowDropdown","toggleDropdown","element","useRef","useEffect","handleClick","event","current","target","Node","contains","document","addEventListener","removeEventListener"],"mappings":"kJAYaA,EAAmB,eAAwBC,4DACdC,EAASD,YAA1CE,OAAcC,OACfC,EAAiB,kBAAMD,GAAiBD,IAExCG,EAAUC,EAAU,aAE1BC,GAAU,eACFC,EAAc,SAACC,GACdP,IAKHG,EAAQK,SACRD,EAAME,kBAAkBC,MACxBP,EAAQK,QAAQG,SAASJ,EAAME,SAKjCR,GAAgB,YAKlBW,SAASC,iBAAiB,QAASP,GAAa,GACzC,kBAAMM,SAASE,oBAAoB,QAASR,MAClD,CAACH,EAAQK,QAASR,EAAcC,IAE5B,CACLD,aAAAA,EACAE,eAAAA,EACAC,QAAAA"}