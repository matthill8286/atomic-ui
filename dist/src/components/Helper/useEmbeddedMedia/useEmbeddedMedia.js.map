{"version":3,"file":"useEmbeddedMedia.js","sources":["../../../../../src/components/Helper/useEmbeddedMedia/useEmbeddedMedia.ts"],"sourcesContent":["import { Asset } from '@/types'\n\nexport const withTernary = ({ conditionA }, asset) =>\n  conditionA ? asset?.embedVideoURL : asset?.image\n\nconst addHttps = (url: string): string | null => {\n  if (/http:\\/\\//i.test(url)) {\n    return url.split(/http:\\/\\//i).join('https://')\n  }\n  if (!/http/i.test(url)) {\n    return 'https://'.concat(url)\n  }\n  return null\n}\n\nconst addEmbeddedMedia = (asset: Asset | Partial<Asset>, canBeEmbedded: boolean): string => {\n  const url: string = withTernary(\n    {\n      conditionA: canBeEmbedded,\n    },\n    asset as Asset\n  )\n\n  const sanitisedUrl = addHttps(url) ?? url\n\n  // Youtube come as youtube.com/watch?v= and need to be youtube.com/embed/\n  if (/youtube\\.com/i.test(sanitisedUrl)) {\n    return sanitisedUrl.split(/watch\\?v=/i).join('embed/') + '?showinfo=0'\n  }\n  // Youtube come as youtu.be/ and need to be youtube.com/embed/\n  if (/youtu\\.be/i.test(sanitisedUrl)) {\n    return `https://www.youtube.com/embed/${sanitisedUrl.split('/')[3]}?showinfo=0`\n  }\n\n  // don't mangle well-formed Vimeo URLs\n  if (/player\\.vimeo\\.com\\/video\\//i.test(sanitisedUrl)) {\n    return `${sanitisedUrl}?title=false&texttrack=false&quality=240p&byline=false`\n  }\n\n  // Vimeo links need to be player.vimeo.com/video/\n  if (/vimeo\\.com\\/(?!event)/i.test(sanitisedUrl)) {\n    return `https://player.vimeo.com/video/${\n      sanitisedUrl.split('/')[3]\n    }?title=false&texttrack=false&quality=240p&byline=false`\n  }\n  // but avoid changing 'event' links as these are streams\n  if (/vimeo\\.com\\/event/i.test(sanitisedUrl)) {\n    return sanitisedUrl\n  }\n  // Ted links come as www.ted.com and need to be embed.ted.com\n  if (/ted\\.com/i.test(sanitisedUrl)) {\n    return sanitisedUrl.split(/www/i).join('embed')\n  }\n\n  return sanitisedUrl\n}\n\nexport const useEmbeddedMedia = (asset: Asset | Partial<Asset>): string | null =>\n  addEmbeddedMedia(asset, asset?.embedVideoURL !== '')\n"],"names":["withTernary","asset","conditionA","embedVideoURL","image","useEmbeddedMedia","canBeEmbedded","url","sanitisedUrl","test","split","join","concat","addHttps","addEmbeddedMedia"],"mappings":"IAEaA,EAAc,WAAiBC,YAAdC,WACfD,MAAAA,SAAAA,EAAOE,cAAgBF,MAAAA,SAAAA,EAAOG,OAsDhCC,EAAmB,SAACJ,UA1CR,SAACA,EAA+BK,SACjDC,EAAcP,EAClB,CACEE,WAAYI,GAEdL,GAGIO,YAlBS,SAACD,SACZ,aAAaE,KAAKF,GACbA,EAAIG,MAAM,cAAcC,KAAK,YAEjC,QAAQF,KAAKF,GAGX,KAFE,WAAWK,OAAOL,GAaNM,CAASN,kBAAQA,QAGlC,gBAAgBE,KAAKD,GAChBA,EAAaE,MAAM,cAAcC,KAAK,UAAY,cAGvD,aAAaF,KAAKD,2CACoBA,EAAaE,MAAM,KAAK,kBAI9D,+BAA+BD,KAAKD,aAC5BA,4DAIR,yBAAyBC,KAAKD,4CAE9BA,EAAaE,MAAM,KAAK,6DAIxB,qBAAqBD,KAAKD,GACrBA,EAGL,YAAYC,KAAKD,GACZA,EAAaE,MAAM,QAAQC,KAAK,SAGlCH,EAIPM,CAAiBb,EAAgC,MAAzBA,MAAAA,SAAAA,EAAOE"}