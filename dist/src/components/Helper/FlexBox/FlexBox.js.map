{"version":3,"file":"FlexBox.js","sources":["../../../../../src/components/Helper/FlexBox/FlexBox.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport { media } from '@/styles/media'\nimport { css, styled } from '@/styles/styled'\n\nexport type FlexAlignItemsOptions =\n  | 'flex-start'\n  | 'flex-end'\n  | 'center'\n  | 'space-between'\n  | 'space-around'\n  | 'stretch'\n\nexport interface FlexBoxProps {\n  debug?: boolean\n  display?: 'flex' | 'inline-flex'\n  flexDirection?: 'row' | 'row-reverse' | 'column' | 'column-reverse'\n  flexWrap?: 'nowrap' | 'wrap' | 'wrap-reverse'\n  justifyContent?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around'\n  alignContent?: 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch'\n  alignItems?: FlexAlignItemsOptions\n}\n\nconst StyledBox = styled.div<FlexBoxProps>`\n  ${({ debug }) =>\n    debug &&\n    css`\n      border: 1px solid green;\n      padding: 8px;\n    `}\n  display: ${({ display }) => display};\n  flex-direction: ${({ flexDirection }) => flexDirection};\n  ${({ flexWrap }) => flexWrap && `flex-wrap: ${flexWrap}`};\n  ${({ justifyContent }) => justifyContent && `justify-content: ${justifyContent}`};\n  ${({ alignContent }) => alignContent && `align-content: ${alignContent}`};\n  ${({ alignItems }) => alignItems && `align-items: ${alignItems}`};\n`\n\nexport const FlexBox: FC<FlexBoxProps> = props => {\n  const {\n    debug = false,\n    display = 'flex',\n    flexDirection = 'row',\n    flexWrap,\n    justifyContent,\n    alignContent,\n    alignItems,\n    children,\n    ...otherProps\n  } = props\n\n  return (\n    <StyledBox\n      debug={debug}\n      display={display}\n      flexDirection={flexDirection}\n      flexWrap={flexWrap}\n      justifyContent={justifyContent}\n      alignContent={alignContent}\n      alignItems={alignItems}\n      {...otherProps}>\n      {children}\n    </StyledBox>\n  )\n}\n\nFlexBox.displayName = 'FlexBox'\n\nexport interface FlexItemProps {\n  debug?: boolean\n  order?: number\n  flex?: string\n  alignSelf?: 'auto' | 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch'\n  padding?: boolean\n}\n\nconst StyledFlexItem = styled.div<FlexItemProps>`\n  ${({ debug }) =>\n    debug &&\n    css`\n      border: 1px solid blue;\n      padding: 8px;\n    `}\n  order: ${({ order }) => order};\n  flex: ${({ flex }) => flex};\n  align-self: ${({ alignSelf }) => alignSelf};\n  padding: ${({ theme, padding }) => (padding ? `0 ${theme.spacing.base.xs}` : 0)};\n`\n\nexport const FlexItem: FC<FlexItemProps> = props => {\n  const { children, debug, order = 0, flex = '0 1 auto', alignSelf = 'auto', ...otherProps } = props\n\n  return (\n    <StyledFlexItem debug={debug} order={order} flex={flex} alignSelf={alignSelf} {...otherProps}>\n      {children}\n    </StyledFlexItem>\n  )\n}\n\nFlexItem.displayName = 'FlexItem'\n"],"names":["StyledBox","styled","div","debug","css","display","flexDirection","flexWrap","justifyContent","alignContent","alignItems","FlexBox","props","children","otherProps","React","displayName","StyledFlexItem","order","flex","alignSelf","theme","padding","spacing","base","xs","FlexItem"],"mappings":"0LAsBA,IAAMA,EAAYC,EAAOC,6EAAPD,0DACd,qBAAGE,OAEHC,8CAIS,qBAAGC,WACI,qBAAGC,iBACnB,gBAAGC,IAAAA,gBAAeA,wBAA0BA,MAC5C,gBAAGC,IAAAA,sBAAqBA,8BAAsCA,MAC9D,gBAAGC,IAAAA,oBAAmBA,4BAAkCA,MACxD,gBAAGC,IAAAA,kBAAiBA,0BAA8BA,MAGzCC,EAA4B,SAAAC,SAWnCA,EATFT,MAAAA,kBASES,EARFP,QAAAA,aAAU,WAQRO,EAPFN,cAAAA,aAAgB,QAChBC,EAMEK,EANFL,SACAC,EAKEI,EALFJ,eACAC,EAIEG,EAJFH,aACAC,EAGEE,EAHFF,WACAG,EAEED,EAFFC,SACGC,IACDF,iHAGFG,gBAACf,KACCG,MAAOA,EACPE,QAASA,EACTC,cAAeA,EACfC,SAAUA,EACVC,eAAgBA,EAChBC,aAAcA,EACdC,WAAYA,GACRI,GACHD,IAKPF,EAAQK,YAAc,UAUtB,IAAMC,EAAiBhB,EAAOC,kFAAPD,yDACnB,qBAAGE,OAEHC,6CAIO,qBAAGc,SACJ,qBAAGC,QACG,qBAAGC,aACN,gBAAGC,IAAAA,eAAOC,oBAA8BD,EAAME,QAAQC,KAAKC,IAAO,KAGlEC,EAA8B,SAAAd,OACjCC,EAAqFD,EAArFC,SAAUV,EAA2ES,EAA3ET,QAA2ES,EAApEM,MAAAA,aAAQ,MAA4DN,EAAzDO,KAAAA,aAAO,eAAkDP,EAAtCQ,UAAAA,aAAY,SAAWN,IAAeF,0DAG3FG,gBAACE,KAAed,MAAOA,EAAOe,MAAOA,EAAOC,KAAMA,EAAMC,UAAWA,GAAeN,GAC/ED,IAKPa,EAASV,YAAc"}