{"version":3,"file":"withWindowDimensions.js","sources":["../../../../../src/components/Helper/withWindowDimensions/withWindowDimensions.tsx"],"sourcesContent":["import hoistNonReactStatics from 'hoist-non-react-statics'\nimport debounce from 'lodash/debounce'\nimport * as React from 'react'\nimport { subscribe } from 'subscribe-ui-event'\nimport { getWindowDimensions } from '../useWindowDimensions'\n\nconst delay = 250\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const withWindowDimensions: any = (WrappedComponent: React.ComponentClass<any>) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const Wrapper = class extends React.Component<any, any> {\n    _isMounted = false\n    private _resizeListener\n\n    constructor(props) {\n      super(props)\n      this.state = {\n        breakpointName: 'xs',\n      }\n    }\n\n    private debouncedHandle = debounce(this._handleResize, delay)\n\n    public componentDidMount() {\n      this._isMounted = true\n      this._resizeListener = subscribe(\n        'resize',\n        (event, augmentedEvent) => this.debouncedHandle(augmentedEvent.resize.width),\n        { enableResizeInfo: true, useRAF: true }\n      )\n      this.debouncedHandle(window.innerWidth)\n    }\n\n    public componentWillUnmount() {\n      this._isMounted = false\n      this._resizeListener?.unsubscribe()\n    }\n\n    public render() {\n      return <WrappedComponent breakpointName={this.state.breakpointName} {...this.props} />\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private _handleResize(width: number) {\n      const { breakpointName } = getWindowDimensions()\n\n      if (this._isMounted) {\n        this.setState({ breakpointName })\n      }\n    }\n  }\n  return hoistNonReactStatics(Wrapper, WrappedComponent)\n}\n"],"names":["withWindowDimensions","WrappedComponent","Wrapper","props","debounce","_this","_handleResize","state","breakpointName","_isMounted","_resizeListener","subscribe","event","augmentedEvent","_this2","debouncedHandle","resize","width","enableResizeInfo","useRAF","window","innerWidth","unsubscribe","React","this","getWindowDimensions","setState","Component","hoistNonReactStatics"],"mappings":"8hBAMA,IAGaA,EAA4B,SAACC,OAElCC,2CAIQC,wCACJA,wBAJK,6DAUaC,EAASC,EAAKC,cAhB9B,QAWHC,MAAQ,CACXC,eAAgB,mDAMpB,2BACOC,YAAa,OACbC,gBAAkBC,EACrB,UACA,SAACC,EAAOC,UAAmBC,EAAKC,gBAAgBF,EAAeG,OAAOC,SACtE,CAAEC,kBAAkB,EAAMC,QAAQ,SAE/BJ,gBAAgBK,OAAOC,gDAG9B,sBACOZ,YAAa,iBACbC,gCAAiBY,oCAGxB,kBACSC,gBAACtB,KAAiBO,eAAgBgB,KAAKjB,MAAMC,gBAAoBgB,KAAKrB,qCAI/E,SAAsBc,OACZT,EAAmBiB,IAAnBjB,eAEJgB,KAAKf,iBACFiB,SAAS,CAAElB,eAAAA,WArCQe,EAAMI,kBAyC7BC,EAAqB1B,EAASD"}