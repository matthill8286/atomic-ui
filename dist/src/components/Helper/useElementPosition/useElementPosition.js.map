{"version":3,"file":"useElementPosition.js","sources":["../../../../../src/components/Helper/useElementPosition/useElementPosition.ts"],"sourcesContent":["import { CSSProperties, Dispatch, RefObject, SetStateAction, useEffect, useState } from 'react'\nimport throttle from 'lodash/throttle'\n\nexport type UseElementPositionProps = {\n  ref?: RefObject<HTMLElement>\n  attachTo?: 'bottom-center' | 'bottom-left'\n  delay?: number\n}\n\nexport type UseElementPositionReturnType = {\n  position: Partial<CSSProperties>\n  isVisible: boolean\n  setIsVisible: Dispatch<SetStateAction<boolean>>\n}\n\nexport const useElementPosition = ({\n  ref,\n  attachTo = 'bottom-center',\n  delay = 250,\n}: UseElementPositionProps): UseElementPositionReturnType => {\n  const [position, setPosition] = useState<Partial<CSSProperties>>({ top: 0, left: 0 })\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (ref?.current) {\n        const { top, left, right } = ref.current.getBoundingClientRect()\n        const verticalRefAdaption = attachTo?.includes('center') ? 0.5 * (right - left) : 0\n        const horizontalRefAdaption = attachTo?.includes('bottom') ? ref.current.offsetHeight : 0\n        const offsetLeft =\n          (typeof window !== undefined && window.pageXOffset) ||\n          document?.documentElement.scrollLeft ||\n          0\n        const offsetTop =\n          (typeof window !== undefined && window.pageYOffset) ||\n          document?.documentElement.scrollTop ||\n          0\n        const positionTop = `${Math.round(top + horizontalRefAdaption + offsetTop)}px`\n        const positionLeft = `${Math.max(0, Math.round(left + verticalRefAdaption + offsetLeft))}px`\n        setPosition({\n          top: positionTop,\n          right: 'auto',\n          bottom: 'auto',\n          left: positionLeft,\n        })\n      }\n    }\n\n    handleResize()\n    const throttledHandle = throttle(handleResize, delay)\n\n    window.addEventListener('resize', throttledHandle)\n    return () => window.removeEventListener('resize', throttledHandle)\n  }, [ref, attachTo, delay, isVisible])\n\n  return {\n    position,\n    isVisible,\n    setIsVisible,\n  }\n}\n"],"names":["useElementPosition","ref","attachTo","delay","useState","top","left","position","setPosition","isVisible","setIsVisible","useEffect","handleResize","current","getBoundingClientRect","right","verticalRefAdaption","includes","horizontalRefAdaption","offsetHeight","offsetLeft","undefined","window","pageXOffset","document","_document","documentElement","scrollLeft","offsetTop","pageYOffset","_document2","scrollTop","positionTop","Math","round","positionLeft","max","bottom","throttledHandle","throttle","addEventListener","removeEventListener"],"mappings":"6MAeaA,EAAqB,gBAChCC,IAAAA,QACAC,SAAAA,aAAW,sBACXC,MAAAA,aAAQ,QAEwBC,EAAiC,CAAEC,IAAK,EAAGC,KAAM,aAA1EC,OAAUC,SACiBJ,GAAS,YAApCK,OAAWC,cAElBC,GAAU,eACFC,EAAe,cACfX,MAAAA,GAAAA,EAAKY,QAAS,WACaZ,EAAIY,QAAQC,wBAAjCT,IAAAA,IAAKC,IAAAA,KAAMS,IAAAA,MACbC,EAAsBd,MAAAA,GAAAA,EAAUe,SAAS,UAAY,IAAOF,EAAQT,GAAQ,EAC5EY,EAAwBhB,MAAAA,GAAAA,EAAUe,SAAS,UAAYhB,EAAIY,QAAQM,aAAe,EAClFC,OACeC,yBAAXC,qBAAAA,UAAwBA,OAAOC,wBACvCC,6BAAAC,EAAUC,gBAAgBC,aAC1B,EACIC,OACeP,yBAAXC,qBAAAA,UAAwBA,OAAOO,wBACvCL,6BAAAM,EAAUJ,gBAAgBK,YAC1B,EACIC,YAAiBC,KAAKC,MAAM7B,EAAMa,EAAwBU,SAC1DO,YAAkBF,KAAKG,IAAI,EAAGH,KAAKC,MAAM5B,EAAOU,EAAsBI,UAC5EZ,EAAY,CACVH,IAAK2B,EACLjB,MAAO,OACPsB,OAAQ,OACR/B,KAAM6B,MAKZvB,QACM0B,EAAkBC,EAAS3B,EAAcT,UAE/CmB,OAAOkB,iBAAiB,SAAUF,GAC3B,kBAAMhB,OAAOmB,oBAAoB,SAAUH,MACjD,CAACrC,EAAKC,EAAUC,EAAOM,IAEnB,CACLF,SAAAA,EACAE,UAAAA,EACAC,aAAAA"}