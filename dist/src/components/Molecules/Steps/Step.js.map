{"version":3,"file":"Step.js","sources":["../../../../../src/components/Molecules/Steps/Step.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport { Typo } from '@/components/Atoms/Typography'\nimport { media } from '@/styles/media'\nimport { styled } from '@/styles/styled'\nimport { ThemeColors } from '@/types/theme'\nimport { StepIcon } from './StepIcon'\nimport {\n  ElementPosition,\n  StepIconProps,\n  StepPrivateProps,\n  StepPublicProps,\n} from './Steps.interface'\n\nconst StepRoot = styled.div<{ pointer: boolean }>`\n  cursor: ${({ pointer }) => (pointer ? 'pointer' : 'default')};\n  flex: 1;\n  position: relative;\n  padding: 0 ${({ theme }) => theme.defaultSpacing}px;\n`\n\nconst StepLabelRoot = styled.span<{ elementPosition: ElementPosition }>`\n  flex-direction: column;\n  display: flex;\n  align-items: center;\n\n  ${({ elementPosition }) => elementPosition === 'first' && 'align-items: flex-start;'}\n  ${({ elementPosition }) => elementPosition === 'last' && 'align-items: flex-end;'}\n`\n\nconst StepDescription = styled(Typo)`\n  ${media.maxMd} {\n    display: none;\n  }\n`\nexport const Step: FC<StepPublicProps & StepPrivateProps> = props => {\n  const {\n    color = 'primary',\n    elementPosition = 'default',\n    active = false,\n    completed = false,\n    stepIndex = 0,\n    title = '',\n    description = '',\n    icon,\n    connector,\n    onClick,\n    variant = 'prominent',\n    ...other\n  } = props\n\n  const stepIconProps: StepIconProps = {\n    active,\n    completed,\n    color,\n    variant,\n    customIcon: icon,\n  }\n\n  const textColor: ThemeColors = active || completed ? color : 'grey2'\n\n  return (\n    <StepRoot {...other} pointer={!!onClick} onClick={() => onClick && onClick(stepIndex)}>\n      {connector}\n      {variant != 'uniform' ? (\n        <StepLabelRoot elementPosition={elementPosition}>\n          {title && (\n            <Typo\n              tag=\"span\"\n              color={textColor}\n              weight={active || completed ? 'semibold' : 'regular'}>\n              {title}\n            </Typo>\n          )}\n          {description && (\n            <StepDescription tag=\"span\" color={textColor}>\n              {description}\n            </StepDescription>\n          )}\n          <StepIcon {...stepIconProps} />\n        </StepLabelRoot>\n      ) : (\n        <StepIcon {...stepIconProps} />\n      )}\n    </StepRoot>\n  )\n}\n\nStep.displayName = 'Step'\n"],"names":["StepRoot","styled","div","pointer","theme","defaultSpacing","StepLabelRoot","span","elementPosition","StepDescription","Typo","media","maxMd","Step","props","color","active","completed","stepIndex","title","description","icon","connector","onClick","variant","other","stepIconProps","customIcon","textColor","React","tag","weight","StepIcon","displayName"],"mappings":"sUAaA,IAAMA,EAAWC,EAAOC,yEAAPD,2DACL,qBAAGE,QAAyB,UAAY,aAGrC,qBAAGC,MAAkBC,kBAG9BC,EAAgBL,EAAOM,+EAAPN,oEAKlB,kBAA6C,YAA1CO,iBAAqD,8BACxD,kBAA6C,WAA1CA,iBAAoD,4BAGrDC,EAAkBR,EAAOS,+EAAPT,wBACpBU,EAAMC,OAIGC,EAA+C,SAAAC,SActDA,EAZFC,MAAAA,aAAQ,cAYND,EAXFN,gBAAAA,aAAkB,cAWhBM,EAVFE,OAAAA,kBAUEF,EATFG,UAAAA,kBASEH,EARFI,UAAAA,aAAY,MAQVJ,EAPFK,MAAAA,aAAQ,OAONL,EANFM,YAAAA,aAAc,KACdC,EAKEP,EALFO,KACAC,EAIER,EAJFQ,UACAC,EAGET,EAHFS,UAGET,EAFFU,QAAAA,aAAU,cACPC,IACDX,6HAEEY,EAA+B,CACnCV,OAAAA,EACAC,UAAAA,EACAF,MAAAA,EACAS,QAAAA,EACAG,WAAYN,GAGRO,EAAyBZ,GAAUC,EAAYF,EAAQ,eAG3Dc,gBAAC7B,OAAayB,GAAOtB,UAAWoB,EAASA,QAAS,kBAAMA,GAAWA,EAAQL,MACxEI,EACW,WAAXE,EACCK,gBAACvB,GAAcE,gBAAiBA,GAC7BW,GACCU,gBAACnB,GACCoB,IAAI,OACJf,MAAOa,EACPG,OAAQf,GAAUC,EAAY,WAAa,WAC1CE,GAGJC,GACCS,gBAACpB,GAAgBqB,IAAI,OAAOf,MAAOa,GAChCR,GAGLS,gBAACG,EAAaN,IAGhBG,gBAACG,EAAaN,KAMtBb,EAAKoB,YAAc"}