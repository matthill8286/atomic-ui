{"version":3,"file":"SearchableDropdown.js","sources":["../../../../../src/components/Molecules/Dropdown/SearchableDropdown.tsx"],"sourcesContent":["import React from 'react'\nimport { Input } from '@/components/Atoms/Input'\nimport { IconShare } from '@excelwithbusiness/webmobile-svg-library'\nimport { SearchableDropdownProps } from './Dropdown.interface'\nimport { StyledList, StyledSearchableDropdownWrapper } from './Dropdown.styled'\nimport { DropdownOption } from './DropdownOption'\n\nexport const SearchableDropdown: React.FC<SearchableDropdownProps> = props => {\n  const {\n    className,\n    index,\n    inputValue,\n    initializeOpen = false,\n    label,\n    errorMessage,\n    options = [],\n    onSelectChange,\n    onInputChange,\n  } = props\n\n  const ref = React.useRef<HTMLDivElement>(null)\n\n  const [isOpen, setOpen] = React.useState(initializeOpen)\n  const [filteredOptions, setFilteredOptions] = React.useState(options)\n\n  const handleClickOutside = (event: Event): void => {\n    if (!ref.current?.contains(event.target as Node)) {\n      setOpen(false)\n    }\n  }\n\n  React.useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true)\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside, true)\n    }\n  })\n\n  const onFocus = () => {\n    setOpen(true)\n  }\n\n  const onClickHandler = (item, index) => {\n    setOpen(false)\n    onSelectChange(item, index)\n  }\n\n  const onInputChangeHandler = event => {\n    const { value } = event.target\n    setFilteredOptions(\n      value\n        ? options.filter(option => option.label.toLowerCase().includes(value.toLowerCase()))\n        : options\n    )\n\n    onInputChange(event)\n  }\n\n  return (\n    <StyledSearchableDropdownWrapper className={className} ref={ref}>\n      <Input\n        state={errorMessage ? 'error' : 'idle'}\n        errorMessage={errorMessage}\n        label={label}\n        value={inputValue}\n        onFocus={onFocus}\n        onChange={onInputChangeHandler}\n        inputIcon={<IconShare />}\n        inputType=\"text\"\n      />\n      <StyledList active={isOpen} isSearchable={true}>\n        {filteredOptions.map((item, i) => (\n          <DropdownOption\n            key={i}\n            active={i === index}\n            label={item.label}\n            onClick={() => onClickHandler(item, i)}\n          />\n        ))}\n      </StyledList>\n    </StyledSearchableDropdownWrapper>\n  )\n}\n\nSearchableDropdown.displayName = 'SearchableDropdown'\n"],"names":["SearchableDropdown","props","className","index","inputValue","initializeOpen","label","errorMessage","options","onSelectChange","onInputChange","ref","React","useRef","useState","isOpen","setOpen","filteredOptions","setFilteredOptions","handleClickOutside","event","current","_ref$current","contains","target","useEffect","document","addEventListener","removeEventListener","StyledSearchableDropdownWrapper","Input","state","value","onFocus","onChange","filter","option","toLowerCase","includes","inputIcon","IconShare","inputType","StyledList","active","isSearchable","map","item","i","DropdownOption","key","onClick","onClickHandler","displayName"],"mappings":"6ZAOaA,EAAwD,SAAAC,OAEjEC,EASED,EATFC,UACAC,EAQEF,EARFE,MACAC,EAOEH,EAPFG,aAOEH,EANFI,eAAAA,gBACAC,EAKEL,EALFK,MACAC,EAIEN,EAJFM,eAIEN,EAHFO,QAAAA,aAAU,KACVC,EAEER,EAFFQ,eACAC,EACET,EADFS,cAGIC,EAAMC,EAAMC,OAAuB,QAEfD,EAAME,SAAST,YAAlCU,OAAQC,SAC+BJ,EAAME,SAASN,YAAtDS,OAAiBC,OAElBC,EAAqB,SAACC,mBACrBT,EAAIU,sBAAJC,EAAaC,SAASH,EAAMI,SAC/BR,GAAQ,IAIZJ,EAAMa,WAAU,kBACdC,SAASC,iBAAiB,QAASR,GAAoB,GAEhD,WACLO,SAASE,oBAAoB,QAAST,GAAoB,cAyB5DP,gBAACiB,GAAgC3B,UAAWA,EAAWS,IAAKA,GAC1DC,gBAACkB,GACCC,MAAOxB,EAAe,QAAU,OAChCA,aAAcA,EACdD,MAAOA,EACP0B,MAAO5B,EACP6B,QA3BU,WACdjB,GAAQ,IA2BJkB,SAnBuB,SAAAd,OACnBY,EAAUZ,EAAMI,OAAhBQ,MACRd,EACEc,EACIxB,EAAQ2B,QAAO,SAAAC,UAAUA,EAAO9B,MAAM+B,cAAcC,SAASN,EAAMK,kBACnE7B,GAGNE,EAAcU,IAYVmB,UAAW3B,gBAAC4B,QACZC,UAAU,SAEZ7B,gBAAC8B,GAAWC,OAAQ5B,EAAQ6B,cAAc,GACvC3B,EAAgB4B,KAAI,SAACC,EAAMC,UAC1BnC,gBAACoC,GACCC,IAAKF,EACLJ,OAAQI,IAAM5C,EACdG,MAAOwC,EAAKxC,MACZ4C,QAAS,kBAlCI,SAACJ,EAAM3C,GAC5Ba,GAAQ,GACRP,EAAeqC,EAAM3C,GAgCEgD,CAAeL,EAAMC,YAQhD/C,EAAmBoD,YAAc"}