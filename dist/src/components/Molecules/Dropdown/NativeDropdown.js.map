{"version":3,"file":"NativeDropdown.js","sources":["../../../../../src/components/Molecules/Dropdown/NativeDropdown.tsx"],"sourcesContent":["import React from 'react'\nimport { Icon, RotationValues } from '@/components/Atoms/Icon'\nimport { CopyText } from '@/components/Atoms/Typography/CopyText'\nimport { media } from '@/styles'\nimport { css, styled } from '@/styles/styled'\nimport { IconArticle } from '@excelwithbusiness/webmobile-svg-library'\n\nexport interface NativeDropdownProps {\n  className?: string\n  children?: HTMLOptionElement[] | React.ReactElement<HTMLOptionElement>[]\n  margin?: string\n  padding?: string\n  icon?: React.ReactElement\n  iconMobile?: React.ReactElement\n  iconRotate?: RotationValues\n  iconMobileRotate?: RotationValues\n  noBorder?: boolean\n  withBgColor?: boolean\n  value: string\n  onChange: React.ChangeEventHandler<HTMLSelectElement>\n}\n\ninterface StyledIconProps {\n  hasMobileIcon?: boolean\n  withBgColor?: boolean\n}\n\nconst StyledLabel = styled(CopyText)<{ noBorder: boolean }>`\n  position: relative;\n  display: block;\n  width: calc(100% - ${({ theme }) => theme.spacing.base.md});\n  height: ${({ theme }) => theme.spacing.base.xxl};\n  padding: 0 12px;\n  ${({ theme, noBorder }) => !noBorder && `border: 2px solid ${theme.color.grey5};`}\n  border-radius: ${({ theme }) => theme.dimension.borderRadius3};\n  box-shadow:  ${({ theme }) => theme.dimension.elevationLevel2};\n\n  ${media.mobile} {\n    width: ${({ theme }) => theme.spacing.base.lg};\n    height: ${({ theme }) => theme.spacing.base.lg};\n    padding: 0;\n  }\n`\n\nconst StyledSelect = styled.select`\n  appearance: none;\n  border: none;\n  display: block;\n  overflow: hidden;\n  outline: none;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  background-color: transparent;\n  box-shadow: none;\n  cursor: pointer;\n  width: 100%;\n  height: ${({ theme }) => theme.spacing.base.xxl};\n  padding: ${({ theme }) => theme.spacing.base.xs} 0;\n  z-index: 1;\n  color: ${({ theme }) => theme.color.black};\n\n  ${media.mobile} {\n    width: ${({ theme }) => theme.spacing.base.lg};\n    height: ${({ theme }) => theme.spacing.base.lg};\n    padding: 0;\n    color: transparent;\n  }\n`\n\nconst IconCss = css`\n  position: absolute;\n  z-index: -1;\n`\n\nconst StyledIcon = styled(Icon)<StyledIconProps>`\n  ${IconCss}\n  background-color: ${({ theme, withBgColor }) =>\n    withBgColor ? theme.color.white : 'transparent'};\n  right: 14px;\n  top: 14px; \n\n  ${media.mobile} {\n    right: 6px;\n    top: 6px;\n    ${({ hasMobileIcon }) => hasMobileIcon && 'display: none;'}\n  }\n`\n\nconst StyledMobileIcon = styled(Icon)<StyledIconProps>`\n  ${IconCss}\n  background-color: ${({ theme, withBgColor }) =>\n    withBgColor ? theme.color.white : 'transparent'};\n  top: 0;\n  display: none;\n\n  ${media.mobile} { \n    display: block;\n  }\n`\n\nexport const NativeDropdown: React.FC<NativeDropdownProps> = props => {\n  const {\n    className,\n    children,\n    icon,\n    iconMobile,\n    iconRotate = 90,\n    iconMobileRotate = 90,\n    noBorder = false,\n    withBgColor = true,\n    margin,\n    padding,\n    onChange,\n    value,\n  } = props\n  return (\n    <StyledLabel\n      className={className}\n      margin={margin}\n      padding={padding}\n      fontSize=\"sm\"\n      lineHeight=\"sm\"\n      noBorder={noBorder}\n      tag=\"label\">\n      <StyledSelect value={value} onChange={onChange}>\n        {children}\n      </StyledSelect>\n      <StyledIcon\n        rotate={iconRotate}\n        withBgColor={withBgColor}\n        width={20}\n        height={20}\n        hasMobileIcon={!!iconMobile}>\n        {icon ? icon : <IconArticle />}\n      </StyledIcon>\n      {iconMobile && (\n        <StyledMobileIcon\n          rotate={iconMobileRotate}\n          withBgColor={withBgColor}\n          width={20}\n          height={20}>\n          {iconMobile}\n        </StyledMobileIcon>\n      )}\n    </StyledLabel>\n  )\n}\n\nNativeDropdown.displayName = 'NativeDropdown'\n"],"names":["StyledLabel","styled","CopyText","theme","spacing","base","md","xxl","noBorder","color","grey5","dimension","borderRadius3","elevationLevel2","media","mobile","lg","StyledSelect","select","xs","black","IconCss","css","StyledIcon","Icon","withBgColor","white","hasMobileIcon","StyledMobileIcon","NativeDropdown","props","className","children","icon","iconMobile","iconRotate","iconMobileRotate","margin","padding","onChange","value","React","fontSize","lineHeight","tag","rotate","width","height","IconArticle","displayName"],"mappings":"8WA2BA,IAAMA,EAAcC,EAAOC,mFAAPD,iKAGG,qBAAGE,MAAkBC,QAAQC,KAAKC,MAC7C,qBAAGH,MAAkBC,QAAQC,KAAKE,OAE1C,gBAAGJ,IAAAA,eAAOK,sCAAiDL,EAAMM,MAAMC,cACxD,qBAAGP,MAAkBQ,UAAUC,iBACjC,qBAAGT,MAAkBQ,UAAUE,kBAE5CC,EAAMC,QACG,qBAAGZ,MAAkBC,QAAQC,KAAKW,MACjC,qBAAGb,MAAkBC,QAAQC,KAAKW,MAK1CC,EAAehB,EAAOiB,wFAAPjB,kSAYT,qBAAGE,MAAkBC,QAAQC,KAAKE,OACjC,qBAAGJ,MAAkBC,QAAQC,KAAKc,MAEpC,qBAAGhB,MAAkBM,MAAMW,QAElCN,EAAMC,QACG,qBAAGZ,MAAkBC,QAAQC,KAAKW,MACjC,qBAAGb,MAAkBC,QAAQC,KAAKW,MAM1CK,EAAUC,qCAKVC,EAAatB,EAAOuB,kFAAPvB,6EACfoB,GACkB,gBAAGlB,IAAAA,eAAOsB,YACdtB,EAAMM,MAAMiB,MAAQ,gBAIlCZ,EAAMC,QAGJ,qBAAGY,eAAqC,oBAIxCC,EAAmB3B,EAAOuB,wFAAPvB,qEACrBoB,GACkB,gBAAGlB,IAAAA,eAAOsB,YACdtB,EAAMM,MAAMiB,MAAQ,gBAIlCZ,EAAMC,QAKGc,EAAgD,SAAAC,OAEzDC,EAYED,EAZFC,UACAC,EAWEF,EAXFE,SACAC,EAUEH,EAVFG,KACAC,EASEJ,EATFI,aASEJ,EARFK,WAAAA,aAAa,OAQXL,EAPFM,iBAAAA,aAAmB,OAOjBN,EANFtB,SAAAA,kBAMEsB,EALFL,YAAAA,gBACAY,EAIEP,EAJFO,OACAC,EAGER,EAHFQ,QACAC,EAEET,EAFFS,SACAC,EACEV,EADFU,aAGAC,gBAACzC,GACC+B,UAAWA,EACXM,OAAQA,EACRC,QAASA,EACTI,SAAS,KACTC,WAAW,KACXnC,SAAUA,EACVoC,IAAI,SACJH,gBAACxB,GAAauB,MAAOA,EAAOD,SAAUA,GACnCP,GAEHS,gBAAClB,GACCsB,OAAQV,EACRV,YAAaA,EACbqB,MAAO,GACPC,OAAQ,GACRpB,gBAAiBO,GAChBD,GAAcQ,gBAACO,SAEjBd,GACCO,gBAACb,GACCiB,OAAQT,EACRX,YAAaA,EACbqB,MAAO,GACPC,OAAQ,IACPb,KAOXL,EAAeoB,YAAc"}