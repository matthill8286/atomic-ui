{"version":3,"file":"LazyLoadImage.js","sources":["../../../../../src/components/Molecules/LazyLoadImage/LazyLoadImage.tsx"],"sourcesContent":["import 'intersection-observer' // polyfill\nimport React from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { NativeLazyLoadOptions, Picture } from '@/components/Atoms/Picture'\nimport { LazyLoadImageProps } from './LazyLoadImage.interface'\nimport { StyledLazyImageWrapper } from './LazyLoadImage.styled'\nimport { useNativeLazyLoading } from './useNativeLazyLoading'\n\nexport const LazyLoadImage: React.FC<LazyLoadImageProps> = ({\n  threshold = 0,\n  lazyLoad = true,\n  rootMargin = '0px',\n  withLQIP = false,\n  withNativeLoading = false,\n  ...props\n}) => {\n  const {\n    src,\n    lowResSrc,\n    srcSm,\n    lowResSrcSm,\n    srcMd,\n    lowResSrcMd,\n    srcLg,\n    lowResSrcLg,\n    width,\n    height,\n    children,\n  } = props\n  if (!lazyLoad) {\n    return <Picture {...props}>{children}</Picture>\n  }\n  const supportsLazyLoading = withNativeLoading && useNativeLazyLoading()\n  // intersection observer hook that delivers the inView boolean\n  const [ref, inView] = useInView({\n    threshold,\n    triggerOnce: true,\n    rootMargin: rootMargin,\n  })\n  return (\n    <StyledLazyImageWrapper\n      ref={!supportsLazyLoading ? ref : undefined}\n      width={width}\n      height={height}>\n      {!withLQIP && (inView || supportsLazyLoading) ? (\n        <Picture\n          {...props}\n          src={src}\n          srcSm={srcSm}\n          srcMd={srcMd}\n          srcLg={srcLg}\n          loading={supportsLazyLoading ? NativeLazyLoadOptions.Lazy : NativeLazyLoadOptions.Eager}>\n          {children}\n        </Picture>\n      ) : null}\n      {withLQIP && (\n        <Picture\n          {...props}\n          src={inView ? src : lowResSrc}\n          srcSm={inView ? srcSm : lowResSrcSm}\n          srcMd={inView ? srcMd : lowResSrcMd}\n          srcLg={inView ? srcLg : lowResSrcLg}>\n          {children}\n        </Picture>\n      )}\n    </StyledLazyImageWrapper>\n  )\n}\n"],"names":["LazyLoadImage","threshold","lazyLoad","rootMargin","withLQIP","withNativeLoading","props","src","lowResSrc","srcSm","lowResSrcSm","srcMd","lowResSrcMd","srcLg","lowResSrcLg","width","height","children","React","Picture","supportsLazyLoading","useNativeLazyLoading","useInView","triggerOnce","ref","inView","StyledLazyImageWrapper","undefined","loading","NativeLazyLoadOptions","Lazy","Eager"],"mappings":"qmBAQaA,EAA8C,oBACzDC,UAAAA,aAAY,QACZC,SAAAA,oBACAC,WAAAA,aAAa,YACbC,SAAAA,oBACAC,kBAAAA,gBACGC,4EAGDC,EAWED,EAXFC,IACAC,EAUEF,EAVFE,UACAC,EASEH,EATFG,MACAC,EAQEJ,EARFI,YACAC,EAOEL,EAPFK,MACAC,EAMEN,EANFM,YACAC,EAKEP,EALFO,MACAC,EAIER,EAJFQ,YACAC,EAGET,EAHFS,MACAC,EAEEV,EAFFU,OACAC,EACEX,EADFW,aAEGf,SACIgB,gBAACC,EAAYb,EAAQW,OAExBG,EAAsBf,GAAqBgB,MAE3BC,EAAU,CAC9BrB,UAAAA,EACAsB,aAAa,EACbpB,WAAYA,aAHPqB,OAAKC,cAMVP,gBAACQ,GACCF,IAAMJ,OAA4BO,EAANH,EAC5BT,MAAOA,EACPC,OAAQA,GACNZ,IAAaqB,IAAUL,EAUrB,KATFF,gBAACC,OACKb,GACJC,IAAKA,EACLE,MAAOA,EACPE,MAAOA,EACPE,MAAOA,EACPe,QAASR,EAAsBS,EAAsBC,KAAOD,EAAsBE,QACjFd,GAGJb,GACCc,gBAACC,OACKb,GACJC,IAAKkB,EAASlB,EAAMC,EACpBC,MAAOgB,EAAShB,EAAQC,EACxBC,MAAOc,EAASd,EAAQC,EACxBC,MAAOY,EAASZ,EAAQC,IACvBG"}