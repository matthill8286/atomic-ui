{"version":3,"file":"SearchButtonIcon.js","sources":["../../../../../src/components/Molecules/SearchButton/SearchButtonIcon.tsx"],"sourcesContent":["import React, { ReactNode } from 'react'\nimport { Icon } from '@/components/Atoms/Icon'\nimport { styled } from '@/styles/styled'\nimport { IconCross, IconSearch } from '@excelwithbusiness/webmobile-svg-library'\nimport { ThemeColors } from '@/types'\nimport { TranslatedText } from '@/types/global'\nimport { IconButton } from '@/components/Atoms/Button'\nimport { IconSize } from '@/components/Atoms/Input'\n\nexport type SearchButtonIconState = 'default' | 'valid' | 'error'\n\nconst SearchIconWrapper = styled.div`\n  top: 14px;\n  position: absolute;\n  right: ${({ theme }) => theme.spacing.base.sm};\n  height: 100%;\n\n  > button {\n    background: none;\n    border: none;\n    margin: 0;\n    padding: 0;\n    top: 0;\n\n    outline: none;\n\n    &:focus {\n      svg {\n        fill: ${({ theme }) => theme.color.grey4};\n      }\n    }\n  }\n`\n\ntype MapStateToIcon = {\n  [key in SearchButtonIconState]: JSX.Element\n}\n\nconst mapStateToIcon: MapStateToIcon = {\n  default: <div />,\n  valid: <IconSearch />,\n  error: <IconCross />,\n}\n\ntype MapStateToIconColor = {\n  [key in SearchButtonIconState]: ThemeColors\n}\n\nconst mapStateToIconColor: MapStateToIconColor = {\n  default: 'grey4',\n  valid: 'success',\n  error: 'error',\n}\n\nexport interface SearchButtonIconProps {\n  icon?: ReactNode\n  iconLabel?: TranslatedText\n  iconSize?: IconSize\n  iconState: SearchButtonIconState\n  onClick?: React.MouseEventHandler<HTMLDivElement> | React.MouseEventHandler<HTMLElement>\n}\n\nexport const SearchButtonIcon = (props: SearchButtonIconProps) => {\n  const { icon, iconSize = { height: 20, width: 20 }, iconState, onClick, iconLabel } = props\n  const color = mapStateToIconColor[iconState]\n  const iconComp = (\n    <Icon as=\"span\" color={color} {...iconSize}>\n      {icon ? icon : mapStateToIcon[iconState]}\n    </Icon>\n  )\n\n  return (\n    <SearchIconWrapper>\n      {onClick ? (\n        <IconButton\n          aria-label={iconLabel}\n          height={iconSize.height}\n          isInputIcon\n          onClick={onClick as React.MouseEventHandler<HTMLElement>}\n          width={iconSize.width}>\n          {iconComp}\n        </IconButton>\n      ) : (\n        iconComp\n      )}\n    </SearchIconWrapper>\n  )\n}\n"],"names":["SearchIconWrapper","styled","div","theme","spacing","base","sm","color","grey4","mapStateToIcon","default","React","valid","IconSearch","error","IconCross","mapStateToIconColor","SearchButtonIcon","props","icon","iconSize","height","width","iconState","onClick","iconLabel","iconComp","Icon","as","IconButton","isInputIcon"],"mappings":"yeAWA,IAAMA,EAAoBC,EAAOC,6FAAPD,2JAGf,qBAAGE,MAAkBC,QAAQC,KAAKC,MAc7B,qBAAGH,MAAkBI,MAAMC,SAUrCC,EAAiC,CACrCC,QAASC,4BACTC,MAAOD,gBAACE,QACRC,MAAOH,gBAACI,SAOJC,EAA2C,CAC/CN,QAAS,QACTE,MAAO,UACPE,MAAO,SAWIG,EAAmB,SAACC,OACvBC,EAA8ED,EAA9EC,OAA8ED,EAAxEE,SAAAA,aAAW,CAAEC,OAAQ,GAAIC,MAAO,MAAMC,EAAkCL,EAAlCK,UAAWC,EAAuBN,EAAvBM,QAASC,EAAcP,EAAdO,UAClElB,EAAQS,EAAoBO,GAC5BG,EACJf,gBAACgB,KAAKC,GAAG,OAAOrB,MAAOA,GAAWa,GAC/BD,GAAcV,EAAec,WAKhCZ,gBAACX,OACEwB,EACCb,gBAACkB,gBACaJ,EACZJ,OAAQD,EAASC,OACjBS,eACAN,QAASA,EACTF,MAAOF,EAASE,OACfI,GAGHA"}