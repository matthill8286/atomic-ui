{"version":3,"file":"BackToTop.js","sources":["../../../../../src/components/Molecules/BackToTop/BackToTop.tsx"],"sourcesContent":["import React, { MouseEvent, useContext } from 'react'\nimport { Button } from '@/components/Atoms/Button'\nimport { Icon } from '@/components/Atoms/Icon'\nimport { styled } from '@/styles/styled'\nimport { ThemeContext } from '@/styles/styled'\nimport { IconArrowThin } from '@excelwithbusiness/webmobile-svg-library'\nimport { Theme } from '@/types/theme'\n\ninterface BackToTopProps {\n  visible?: 'VISIBLE' | 'TRANSPARENT' | 'HIDDEN'\n  onClick?: (e: MouseEvent<Element, MouseEvent>) => void\n}\n\ninterface StyledBackToTopProps {\n  visible?: 'VISIBLE' | 'TRANSPARENT' | 'HIDDEN'\n}\n\nconst StyledIcon = styled(Icon)`\n  padding: 0;\n  justify-content: center;\n`\n\nconst StyledBackToTop = styled(Button)<StyledBackToTopProps>`\n  position: fixed;\n  bottom: ${({ theme }) => theme.spacing.base.md};\n  top: auto;\n  right: ${({ theme }) => theme.spacing.base.md};\n  transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out, opacity 0.3s ease-in-out;\n  opacity: ${({ visible }) => (visible === 'VISIBLE' ? '1' : '0.5')};\n  display: ${({ visible }) => (visible === 'HIDDEN' ? 'none' : 'inherit')};\n  z-index: 5;\n  transform: ${({ visible }) =>\n    visible === 'VISIBLE' || visible === 'TRANSPARENT'\n      ? 'transform: translateX(0);'\n      : 'transform: translateX(calc(100% + 30px));'};\n  ${({ visible }) =>\n    visible === 'TRANSPARENT'\n      ? `\n        &:hover{\n            opacity: 1;\n        }`\n      : '0.5'}\n  &:focus,\n  &:active {\n    outline: none;\n    border: none;\n  }\n\n  &:hover {\n    box-shadow: ${({ theme }) => theme.dimension.elevationLevel1};\n  }\n`\n\nexport const BackToTop: React.FC<BackToTopProps> = ({ visible, onClick, ...otherProps }) => {\n  const { button } = useContext(ThemeContext) as Theme\n\n  const smoothScroll = e => {\n    window.scroll({ top: 0, behavior: 'smooth' })\n    if (onClick) {\n      onClick(e)\n    }\n  }\n  return (\n    <StyledBackToTop\n      actionType=\"prominent\"\n      round={button.isRound}\n      squared\n      size=\"sm\"\n      aria-label=\"Back to top\"\n      onClick={smoothScroll}\n      visible={visible}\n      {...otherProps}>\n      <StyledIcon rotate={270} width={24} height={24} color={'white'}>\n        <IconArrowThin />\n      </StyledIcon>\n    </StyledBackToTop>\n  )\n}\n"],"names":["StyledIcon","styled","Icon","StyledBackToTop","Button","theme","spacing","base","md","visible","dimension","elevationLevel1","BackToTop","onClick","otherProps","button","useContext","ThemeContext","React","actionType","round","isRound","squared","size","e","window","scroll","top","behavior","rotate","width","height","color","IconArrowThin"],"mappings":"gdAiBA,IAAMA,EAAaC,EAAOC,+EAAPD,wCAKbE,EAAkBF,EAAOG,oFAAPH,sQAEZ,qBAAGI,MAAkBC,QAAQC,KAAKC,MAEnC,qBAAGH,MAAkBC,QAAQC,KAAKC,MAEhC,kBAA8B,cAA3BC,QAAuC,IAAM,SAChD,kBAA8B,aAA3BA,QAAsC,OAAS,aAEhD,gBAAGA,IAAAA,cACF,YAAZA,GAAqC,gBAAZA,EACrB,4BACA,+CACJ,kBACY,kBADTA,iEAMC,SAQU,qBAAGJ,MAAkBK,UAAUC,mBAIpCC,EAAsC,gBAAGH,IAAAA,QAASI,IAAAA,QAAYC,6BACjEC,EAAWC,EAAWC,GAAtBF,cASNG,gBAACf,KACCgB,WAAW,YACXC,MAAOL,EAAOM,QACdC,WACAC,KAAK,kBACM,cACXV,QAbiB,SAAAW,GACnBC,OAAOC,OAAO,CAAEC,IAAK,EAAGC,SAAU,WAC9Bf,GACFA,EAAQW,IAWRf,QAASA,GACLK,GACJI,gBAAClB,GAAW6B,OAAQ,IAAKC,MAAO,GAAIC,OAAQ,GAAIC,MAAO,SACrDd,gBAACe"}