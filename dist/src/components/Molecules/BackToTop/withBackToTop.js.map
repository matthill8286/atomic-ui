{"version":3,"file":"withBackToTop.js","sources":["../../../../../src/components/Molecules/BackToTop/withBackToTop.tsx"],"sourcesContent":["import React, { Component, MouseEvent } from 'react'\nimport { subscribe } from 'subscribe-ui-event'\n\ntype Props = {\n  visible?: 'VISIBLE' | 'TRANSPARENT' | 'HIDDEN'\n  onClick?: (e: MouseEvent<Element, MouseEvent>) => void\n  onMouseOver?: (e: MouseEvent<Element, MouseEvent>) => void\n}\n\ntype InnerProps = {\n  visible?: 'VISIBLE' | 'TRANSPARENT' | 'HIDDEN'\n  onClick?: (e: MouseEvent<Element, MouseEvent>) => void\n  onMouseOver?: (e: MouseEvent<Element, MouseEvent>) => void\n}\n\ntype InnerState = {\n  scrollDirection: 'NONE' | 'UP' | 'DOWN'\n  backToTop: 'VISIBLE' | 'TRANSPARENT' | 'HIDDEN'\n}\n\nexport const withBackToTop = (WrappedComponent: React.FC<Props>) => {\n  return class extends Component<InnerProps, InnerState> {\n    handleTimeout?: any | undefined\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    subscribers: any[] = []\n\n    state: Readonly<InnerState> = {\n      scrollDirection: 'NONE',\n      backToTop: 'HIDDEN',\n    }\n\n    handleScroll(event: unknown, augmentedEvent: { scroll: { delta: number; top: number } }) {\n      if (\n        augmentedEvent.scroll.delta > 0 &&\n        this.state.scrollDirection !== 'DOWN' &&\n        augmentedEvent.scroll.top > 0\n      ) {\n        this.setState({ scrollDirection: 'DOWN' })\n      } else if (augmentedEvent.scroll.delta < 0 && this.state.scrollDirection !== 'UP') {\n        this.setState({ scrollDirection: 'UP' })\n      }\n      this.handleBackToTop(augmentedEvent.scroll.top)\n    }\n\n    handleBackToTop(scrollPositionY: number) {\n      clearTimeout(this.handleTimeout)\n      if (this.state.scrollDirection === 'DOWN' && scrollPositionY > 300) {\n        this.setState({ backToTop: 'VISIBLE' })\n\n        this.handleTimeout = setTimeout(() => {\n          this.setState({ backToTop: 'TRANSPARENT' })\n        }, 6000)\n      } else if (this.state.scrollDirection === 'UP') {\n        this.handleTimeout = setTimeout(() => {\n          this.setState({ backToTop: 'TRANSPARENT' })\n          this.setState({ backToTop: 'HIDDEN' })\n        }, 1000)\n      }\n    }\n\n    componentDidMount() {\n      this.subscribers = [\n        subscribe('scroll', this.handleScroll.bind(this), {\n          useRAF: true,\n          enableScrollInfo: true,\n        }),\n      ]\n    }\n\n    componentWillUnmount() {\n      this.subscribers.forEach(subscriber => subscriber.unsubscribe())\n      clearTimeout(this.handleTimeout)\n    }\n\n    render() {\n      return (\n        <WrappedComponent\n          visible={this.state.backToTop}\n          onMouseOver={() => clearTimeout(this.handleTimeout)}\n          {...this.props}\n        />\n      )\n    }\n  }\n}\n"],"names":["withBackToTop","WrappedComponent","Component","scrollDirection","backToTop","event","augmentedEvent","scroll","delta","this","state","top","setState","handleBackToTop","scrollPositionY","clearTimeout","handleTimeout","setTimeout","_this2","subscribers","subscribe","handleScroll","bind","useRAF","enableScrollInfo","forEach","subscriber","unsubscribe","React","visible","onMouseOver","_this3","props"],"mappings":"4TAoBaA,EAAgB,SAACC,0BACPC,iNAGE,mBAES,CAC5BC,gBAAiB,OACjBC,UAAW,mDAGb,SAAaC,EAAgBC,GAEzBA,EAAeC,OAAOC,MAAQ,GACC,SAA/BC,KAAKC,MAAMP,iBACXG,EAAeC,OAAOI,IAAM,OAEvBC,SAAS,CAAET,gBAAiB,SACxBG,EAAeC,OAAOC,MAAQ,GAAoC,OAA/BC,KAAKC,MAAMP,sBAClDS,SAAS,CAAET,gBAAiB,YAE9BU,gBAAgBP,EAAeC,OAAOI,oCAG7C,SAAgBG,cACdC,aAAaN,KAAKO,eACiB,SAA/BP,KAAKC,MAAMP,iBAA8BW,EAAkB,UACxDF,SAAS,CAAER,UAAW,iBAEtBY,cAAgBC,YAAW,WAC9BC,EAAKN,SAAS,CAAER,UAAW,kBAC1B,MACqC,OAA/BK,KAAKC,MAAMP,uBACfa,cAAgBC,YAAW,WAC9BC,EAAKN,SAAS,CAAER,UAAW,gBAC3Bc,EAAKN,SAAS,CAAER,UAAW,aAC1B,uCAIP,gBACOe,YAAc,CACjBC,EAAU,SAAUX,KAAKY,aAAaC,KAAKb,MAAO,CAChDc,QAAQ,EACRC,kBAAkB,yCAKxB,gBACOL,YAAYM,SAAQ,SAAAC,UAAcA,EAAWC,iBAClDZ,aAAaN,KAAKO,qCAGpB,6BAEIY,gBAAC3B,KACC4B,QAASpB,KAAKC,MAAMN,UACpB0B,YAAa,kBAAMf,aAAagB,EAAKf,iBACjCP,KAAKuB"}