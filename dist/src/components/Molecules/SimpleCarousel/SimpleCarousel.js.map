{"version":3,"file":"SimpleCarousel.js","sources":["../../../../../src/components/Molecules/SimpleCarousel/SimpleCarousel.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react'\nimport Slider from 'react-slick'\nimport { Icon, RotationValues } from '@/components/Atoms/Icon'\nimport { CarouselProps } from './SimpleCarousel.interface'\nimport { StyledCarousel, StyledCarouselHandler, StyledNavArrow } from './SimpleCarousel.styled'\nimport { StyleguideArrow } from '@excelwithbusiness/webmobile-svg-library'\n\nexport const SimpleCarousel: React.FC<CarouselProps> = ({\n  arrowsSurfaceColor,\n  sliderSettings,\n  items,\n  renderSlide,\n  whiteDots,\n  brightArrows,\n  boxShadow,\n  hasOverflow,\n  hasPadding,\n  fixedWidth,\n  tileWidth,\n  className,\n  carouselRef,\n}): React.ReactElement => {\n  let firstClientX: number | 0\n\n  const sliderRef = React.useRef<Slider | null>(null)\n  const minValue = 20 // threshold\n\n  const rightDirection = (direction: number) => direction < -Math.abs(minValue)\n  const leftDirection = (direction: number) => direction > Math.abs(minValue)\n\n  const touchStart = (e: React.TouchEvent): void => {\n    e.preventDefault()\n    e.stopPropagation()\n    firstClientX = e.touches[0].clientX\n  }\n\n  const touchEnd = (e: React.TouchEvent): void => {\n    const clientX = Math.round(e.changedTouches[0].clientX - firstClientX)\n\n    if (rightDirection(clientX)) {\n      sliderRef.current?.slickNext()\n    } else if (leftDirection(clientX)) {\n      sliderRef.current?.slickPrev()\n    }\n  }\n\n  const renderArrows = (rotation: RotationValues): React.ReactElement => {\n    return (\n      <StyledNavArrow>\n        <Icon rotate={rotation} color=\"white\" padding=\"sm\">\n          <StyleguideArrow width={30} height={30} />\n        </Icon>\n      </StyledNavArrow>\n    )\n  }\n\n  const customPaging = () => <div />\n\n  const sliderConfig = () => {\n    return {\n      focusOnSelect: false,\n      nextArrow: renderArrows(0),\n      prevArrow: renderArrows(180),\n      customPaging,\n      responsive: [\n        {\n          breakpoint: 1007,\n          settings: {\n            swipe: false,\n            swipeToSlide: false,\n            draggable: false,\n            touchMove: false,\n          },\n        },\n        {\n          breakpoint: 1008,\n          settings: {\n            swipeToSlide: true,\n          },\n        },\n      ],\n      ...sliderSettings,\n      ref: e => {\n        sliderRef.current = e\n        if (carouselRef) {\n          carouselRef(e)\n        }\n      },\n    }\n  }\n\n  const [dragging, setDragging] = useState(false)\n\n  const handleBeforeChange = useCallback(() => {\n    setDragging(true)\n  }, [setDragging])\n\n  const handleAfterChange = useCallback(() => {\n    setDragging(false)\n  }, [setDragging])\n\n  const handleOnItemClick = useCallback(\n    e => {\n      if (dragging) {\n        e.stopPropagation()\n      }\n    },\n    [dragging]\n  )\n\n  const beforeChange = (currentSlide, nextSlide) => {\n    if (sliderSettings.beforeChange) sliderSettings.beforeChange(currentSlide, nextSlide)\n    handleBeforeChange()\n  }\n\n  const afterChange = currentSlide => {\n    if (sliderSettings.afterChange) sliderSettings.afterChange(currentSlide)\n    handleAfterChange()\n  }\n\n  return (\n    <StyledCarousel\n      arrowsSurfaceColor={arrowsSurfaceColor}\n      whiteDots={whiteDots}\n      fixedWidth={fixedWidth}\n      tileWidth={tileWidth}\n      brightArrows={brightArrows}\n      items={items}\n      sliderSettings={sliderSettings}\n      renderSlide={renderSlide}\n      boxShadow={boxShadow}\n      hasOverflow={hasOverflow}\n      hasPadding={hasPadding}\n      className={className}\n      onTouchStart={touchStart}\n      onTouchEnd={touchEnd}>\n      <Slider {...sliderConfig()} beforeChange={beforeChange} afterChange={afterChange}>\n        {items.map((entry, index) => {\n          return (\n            <StyledCarouselHandler\n              onClickCapture={handleOnItemClick}\n              key={index}\n              className=\"ewb-slider--element\">\n              {renderSlide(entry, index)}\n            </StyledCarouselHandler>\n          )\n        })}\n      </Slider>\n    </StyledCarousel>\n  )\n}\n\nSimpleCarousel.displayName = 'SimpleCarousel'\n"],"names":["SimpleCarousel","firstClientX","arrowsSurfaceColor","sliderSettings","items","renderSlide","whiteDots","brightArrows","boxShadow","hasOverflow","hasPadding","fixedWidth","tileWidth","className","carouselRef","sliderRef","React","useRef","renderArrows","rotation","StyledNavArrow","Icon","rotate","color","padding","StyleguideArrow","width","height","customPaging","useState","dragging","setDragging","handleBeforeChange","useCallback","handleAfterChange","handleOnItemClick","e","stopPropagation","StyledCarousel","onTouchStart","preventDefault","touches","clientX","onTouchEnd","Math","round","changedTouches","abs","current","slickNext","direction","leftDirection","slickPrev","Slider","focusOnSelect","nextArrow","prevArrow","responsive","breakpoint","settings","swipe","swipeToSlide","draggable","touchMove","ref","beforeChange","currentSlide","nextSlide","afterChange","map","entry","index","StyledCarouselHandler","onClickCapture","key","displayName"],"mappings":"geAOaA,EAA0C,gBAejDC,EAdJC,IAAAA,mBACAC,IAAAA,eACAC,IAAAA,MACAC,IAAAA,YACAC,IAAAA,UACAC,IAAAA,aACAC,IAAAA,UACAC,IAAAA,YACAC,IAAAA,WACAC,IAAAA,WACAC,IAAAA,UACAC,IAAAA,UACAC,IAAAA,YAIMC,EAAYC,EAAMC,OAAsB,MAsBxCC,EAAe,SAACC,UAElBH,gBAACI,OACCJ,gBAACK,GAAKC,OAAQH,EAAUI,MAAM,QAAQC,QAAQ,MAC5CR,gBAACS,GAAgBC,MAAO,GAAIC,OAAQ,QAMtCC,EAAe,kBAAMZ,+BAmCKa,GAAS,YAAlCC,OAAUC,OAEXC,EAAqBC,GAAY,WACrCF,GAAY,KACX,CAACA,IAEEG,EAAoBD,GAAY,WACpCF,GAAY,KACX,CAACA,IAEEI,EAAoBF,GACxB,SAAAG,GACMN,GACFM,EAAEC,oBAGN,CAACP,WAcDd,gBAACsB,GACCpC,mBAAoBA,EACpBI,UAAWA,EACXK,WAAYA,EACZC,UAAWA,EACXL,aAAcA,EACdH,MAAOA,EACPD,eAAgBA,EAChBE,YAAaA,EACbG,UAAWA,EACXC,YAAaA,EACbC,WAAYA,EACZG,UAAWA,EACX0B,aAxGe,SAACH,GAClBA,EAAEI,iBACFJ,EAAEC,kBACFpC,EAAemC,EAAEK,QAAQ,GAAGC,SAsG1BC,WAnGa,SAACP,SACVM,EAAUE,KAAKC,MAAMT,EAAEU,eAAe,GAAGJ,QAAUzC,MAEtCyC,GAZsCE,KAAKG,IAF/C,cAebhC,EAAUiC,wBAASC,iBACd,GAba,SAACC,UAAsBA,EAAYN,KAAKG,IAH7C,IAgBJI,CAAcT,GAAU,iBACjC3B,EAAUiC,wBAASI,eA8FnBpC,gBAACqC,YA5EDC,eAAe,EACfC,UAAWrC,EAAa,GACxBsC,UAAWtC,EAAa,KACxBU,aAAAA,EACA6B,WAAY,CACV,CACEC,WAAY,KACZC,SAAU,CACRC,OAAO,EACPC,cAAc,EACdC,WAAW,EACXC,WAAW,IAGf,CACEL,WAAY,KACZC,SAAU,CACRE,cAAc,MAIjB1D,OACH6D,IAAK,SAAA5B,GACHrB,EAAUiC,QAAUZ,EAChBtB,GACFA,EAAYsB,OAmDY6B,aA1BX,SAACC,EAAcC,GAC9BhE,EAAe8D,cAAc9D,EAAe8D,aAAaC,EAAcC,GAC3EnC,KAwB0DoC,YArBxC,SAAAF,GACd/D,EAAeiE,aAAajE,EAAeiE,YAAYF,GAC3DhC,OAoBK9B,EAAMiE,KAAI,SAACC,EAAOC,UAEfvD,gBAACwD,GACCC,eAAgBtC,EAChBuC,IAAKH,EACL1D,UAAU,uBACTR,EAAYiE,EAAOC,UASlCvE,EAAe2E,YAAc"}